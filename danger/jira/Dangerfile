# frozen_string_literal: true

# Support multiple JIRA projects
JIRA_REGEXP = Regexp.new(/((?:IMC)-[0-9]+)/i)

# Search Commits
jira_issues = git.commits.map { |commit| commit.message.scan(JIRA_REGEXP) }.flatten.compact.map(&:upcase).sort.uniq

chore_commits = git.commits.any? { |commit| commit.message[/chore(\(.*\))?:/] }
fix_commits = git.commits.any? { |commit| commit.message[/(hot)?fix(\(.*\))?:/] }
hotfix_commits = git.commits.any? { |commit| commit.message[/hotfix(\(.*\))?:/] }

# PR Tickets
pr_title_issues = github.pr_title.scan(JIRA_REGEXP).flatten.map(&:upcase).uniq

# Fix common issues on PR title
pr_title = github.pr_title
pr_title.gsub!(/(\d+)/, 'IMC-\1') if pr_title[/\d+/] && !pr_title[/IMC-\d+/i]
pr_title.gsub!(/imc (\d+)/, 'IMC-\1') if pr_title[/imc (\d+)/]

# Check title has all issues
missing_issues = (pr_title_issues - jira_issues)
pr_title = [*missing_issues, pr_title].join(" ")

# Check title for chore
pr_title = "CHORE: #{pr_title}" if chore_commits && !pr_title[/chore/i]
pr_title = "#{hotfix_commits ? "HOTFIX" : "FIX"}: #{pr_title}" if fix_commits && !pr_title[/(hot)?fix/i]

# Update PR Title
github.api.update_pull_request(github.pr_json[:base][:repo][:full_name], github.pr_json["number"], title: pr_title)
