name: "CI"

on:
  push:
    branches: [master]
  pull_request:
    types: [synchronize]

jobs:
  docker:
    name: Docker
    runs-on: ubuntu-20.04
    steps:
      - id: vars
        run: |
          echo "::set-output name=prefix::$([[ ${GITHUB_REF} = 'refs/heads/master' ]] && echo r- || echo b-)"
          echo "::set-output name=sha_short::$(echo ${{ github.sha }} | cut -c1-7 )"

      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0
      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: 003688427525.dkr.ecr.eu-central-1.amazonaws.com/polaris
          tag-edge: true
          tag-sha: false

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: true
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache,mode=max
          tags: |
            003688427525.dkr.ecr.eu-central-1.amazonaws.com/polaris:${{ github.sha }}
            003688427525.dkr.ecr.eu-central-1.amazonaws.com/polaris:${{ steps.vars.outputs.prefix }}${{ github.run_number }}
            ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          build-args: |
            RELEASE=${{ github.sha }}
