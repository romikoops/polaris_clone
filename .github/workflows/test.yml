name: Test

on:
  push:
    branches: ['**']
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  gems:
    name: Gems
    runs-on: ubuntu-20.04

    defaults:
      run:
        working-directory: gems/money_cache

    steps:
      - uses: actions/checkout@v2
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.6
      - uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/money_cache.gemspec') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Bundle install
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3
      - run: bundle exec rspec

  app:
    name: App

    runs-on: ubuntu-20.04

    services:
      postgres:
        image: postgis/postgis:12-3.0-alpine
        env:
          POSTGRES_HOST_AUTH_METHOD: trust
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    env:
      DATABASE_URL: postgis://postgres:@localhost/polaris_test
      ELASTICSEARCH_URL: http://localhost:9200
      RAILS_ENV: test
      REDIS_URL: redis://localhost:6379

    steps:
      - uses: actions/checkout@v2
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.6
      - uses: actions/setup-node@v2
        with:
          node-version: '12'
      - uses: ankane/setup-elasticsearch@v1
        with:
          elasticsearch-version: 7.4

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake git libgeos-dev libpq-dev libssl-dev locales \
            postgresql-client-12 tzdata wkhtmltopdf
          npm install -g 'mjml@4.3.1'

      - uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-app-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-app-
      - name: Bundle install
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      - run: bin/rails db:test:prepare && bin/rails db:migrate
      - run: bundle exec rspec --exclude-pattern '{gems,vendor}/**/*_spec.rb' .
        timeout-minutes: 30
