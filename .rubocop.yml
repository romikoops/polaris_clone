require: rubocop-performance

AllCops:
  TargetRubyVersion: 2.5
  Exclude:
    - '**/bin/*'
    - 'client/**/*'
    - 'db/schema.rb'
    - '**/Rakefile'

Lint/UnusedMethodArgument:
  AllowUnusedKeywordArguments: true

Metrics/AbcSize:
  Max: 25
  Exclude:
    - db/migrate/*.rb
    - engines/*/db/migrate/*.rb

Metrics/BlockLength:
  Max: 25
  Exclude:
    - '**/*_spec.rb'
    - '**/*.gemspec'
    - '**/*.rake'
    - '**/*/factories/*.rb'
    - config/**/*.rb
    - db/migrate/*.rb
    - engines/*/db/migrate/*.rb
    - Gemfile

Metrics/LineLength:
  Max: 120
  IgnoreCopDirectives: true
  Exclude:
    - '**/*_spec.rb'
    - db/custom_seeds/*.rb
    - qa/features/**/*_steps.rb
    - qa/features/**/*.feature

Metrics/MethodLength:
  Max: 25
  Exclude:
    - '**/*_spec.rb'
    - db/migrate/*.rb
    - engines/*/db/migrate/*.rb

Metrics/ParameterLists:
  Max: 5
  Exclude:
    - qa/features/**/*_steps.rb

Naming/FileName:
  Exclude:
    - config/initializers/*.rb

Naming/VariableNumber:
  EnforcedStyle: snake_case

Style/BlockDelimiters:
  Exclude:
    - '**/*_spec.rb'

# Disable Time over DateTime for legacy specs
Style/DateTime:
  Exclude:
    - spec/*

Style/Documentation:
  Enabled: false

Style/EmptyMethod:
  EnforcedStyle: expanded

Style/IfUnlessModifier:
  Exclude:
    - danger/*/Dangerfile

# do / end blocks should be used for side effects,
# methods that run a block for side effects and have
# a useful return value are rare, assign the return
# value to a local variable for those cases.
Style/MethodCalledOnDoEndBlock:
  Enabled: true

Style/PercentLiteralDelimiters:
  PreferredDelimiters:
    default: '()'
    '%i': '()'
    '%r': '{}'
    '%w': '()'
    '%x': '{}'

# has_key? and has_value? are far more readable than key? and value?
Style/PreferredHashMethods:
  EnforcedStyle: verbose

Style/SingleLineMethods:
  AllowIfMethodIsEmpty: false

Style/SpecialGlobalVars:
  Enabled: false
