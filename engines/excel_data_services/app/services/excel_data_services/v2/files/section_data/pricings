# frozen_string_literal: true

required "1:1", "A:?", %w[MOT CARRIER SERVICE_LEVEL]

column "service",
  sanitizer: "text",
  validator: "string",
  required: true,
  type: :object,
  alternative_keys: ["service_level"],
  fallback: "standard"
column "group_id",
  sanitizer: "text",
  validator: "optional_string",
  required: false,
  type: :object
column "group_name",
  sanitizer: "text",
  validator: "optional_string",
  required: false,
  type: :object
column "effective_date",
  sanitizer: "date",
  validator: "date",
  required: false,
  type: :object
column "expiration_date",
  sanitizer: "date",
  validator: "date",
  required: false,
  type: :object
column "origin_locode",
  sanitizer: "text",
  validator: "optional_locode",
  required: false,
  type: :object
column "origin",
  sanitizer: "text",
  validator: "optional_string",
  required: false,
  type: :object
column "country_origin",
  sanitizer: "text",
  validator: "optional_string",
  required: false,
  type: :object
column "destination_locode",
  sanitizer: "text",
  validator: "optional_locode",
  required: false,
  type: :object
column "destination",
  sanitizer: "text",
  validator: "optional_string",
  required: false,
  type: :object
column "country_destination",
  sanitizer: "text",
  validator: "optional_string",
  required: false,
  type: :object
column "mode_of_transport",
  sanitizer: "downcase",
  validator: "string",
  required: false,
  alternative_keys: ["mot"],
  type: :object
column "carrier",
  sanitizer: "text",
  validator: "string",
  required: false,
  type: :object,
  fallback: organization.slug
column "service_level",
  sanitizer: "text",
  validator: "string",
  required: false,
  type: :object
column "cargo_class",
  sanitizer: "downcase",
  validator: "cargo_class",
  required: true,
  alternative_keys: ["load_type"],
  type: :object
column "internal",
  sanitizer: "boolean",
  validator: "optional_boolean",
  required: false,
  type: :object
column "transshipment",
  sanitizer: "text",
  validator: "optional_string",
  required: false,
  type: :object
column "wm_rate",
  sanitizer: "decimal",
  validator: "optional_numeric",
  required: false,
  alternative_keys: ["wm_ratio"],
  type: :object
column "vm_rate",
  sanitizer: "decimal",
  validator: "optional_numeric",
  required: false,
  alternative_keys: ["vm_ratio"],
  type: :object
column "origin_terminal",
  sanitizer: "text",
  validator: "optional_string",
  required: false,
  type: :object
column "destination_terminal",
  sanitizer: "text",
  validator: "optional_string",
  required: false,
  type: :object
column "fee_min",
  sanitizer: "decimal",
  validator: "optional_numeric",
  required: false,
  alternative_keys: ["min"],
  type: :object
column "fee_name",
  sanitizer: "text",
  validator: "string",
  required: false,
  type: :object
column "fee_code",
  sanitizer: "downcase",
  validator: "string",
  required: false,
  alternative_keys: ["code"],
  type: :object
column "currency",
  sanitizer: "upcase",
  validator: "currency",
  required: true,
  type: :object
column "rate",
  sanitizer: "decimal",
  validator: "numeric",
  required: false,
  alternative_keys: ["fee"],
  type: :object
column "rate_basis",
  sanitizer: "text",
  validator: "string",
  required: false,
  type: :object
column "range_min",
  sanitizer: "decimal",
  validator: "optional_numeric",
  required: false,
  type: :object
column "range_max",
  sanitizer: "decimal",
  validator: "optional_numeric",
  required: false,
  type: :object
column "base",
  sanitizer: "decimal",
  validator: "optional_numeric",
  required: false,
  type: :object
column "remarks",
  sanitizer: "text",
  validator: "optional_string",
  required: false,
  type: :object,
  fallback: nil

row_validation %w[effective_date expiration_date], (proc { |a, b| a < b })

prerequisite "TenantVehicle"
prerequisite "Itinerary"
prerequisite "ChargeCategory"

add_dynamic_columns excluding: %w[REMARKS WM_RATIO VM_RATIO TRANSIT_TIME]

add_validator "Carrier"
add_validator "TenantVehicle"
add_validator "RouteHubs"
add_validator "Itinerary"
add_validator "ChargeCategory"
add_validator "Group"
add_validator "RateBasis"

add_operation "DynamicFees"

add_extractor "Pricing"
add_formatter "Pricing"

conflict Pricings::Pricing, %w[itinerary_id cargo_class organization_id group_id tenant_vehicle_id]

model_importer Pricings::Pricing, { recursive: true }
target_model Pricings::Pricing
