{
  "openapi": "3.0.1",
  "info": {
    "title": "Polaris API",
    "description": "ItsMyCargo Backend API",
    "termsOfService": "https://www.itsmycargo.com/terms",
    "contact": {
      "name": "API Support",
      "url": "https://support.itsmycargo.com",
      "email": "support@itsmycargo.com"
    },
    "version": "2021-05-10"
  },
  "tags": [
    {
      "name": "Ahoy",
      "description": "Ahoy"
    },
    {
      "name": "Authentication",
      "description": "Endpoints related to the current user and authentication."
    },
    {
      "name": "CargoUnits",
      "description": "CargoUnits"
    },
    {
      "name": "Clients",
      "description": "Clients"
    },
    {
      "name": "Dashboard",
      "description": "Dashboard"
    },
    {
      "name": "Groups",
      "description": "Groups"
    },
    {
      "name": "Query",
      "description": "Query"
    },
    {
      "name": "Quote",
      "description": "Quote"
    },
    {
      "name": "Results",
      "description": "Results"
    },
    {
      "name": "Trucking",
      "description": "Trucking"
    },
    {
      "name": "Users",
      "description": "Users"
    }
  ],
  "components": {
    "schemas": {
      "errors": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "object",
            "properties": {
              "message": {
                "description": "error message",
                "type": "string"
              }
            },
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      "cargo_item_type": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the given cargo item type",
            "type": "string"
          },
          "type": {
            "description": "Generic type of the cargo item",
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "width": {
                "description": "Width of the given cargo item type",
                "type": "string",
                "nullable": true,
                "deprecated": true
              },
              "length": {
                "description": "Length of the given cargo item type",
                "type": "string",
                "nullable": true,
                "deprecated": true
              },
              "description": {
                "description": "Descriptive information of the cargo item type",
                "type": "string"
              }
            },
            "required": [
              "width",
              "length"
            ]
          }
        },
        "required": [
          "id",
          "type",
          "attributes"
        ]
      },
      "client": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "company_name": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "house_number": {
            "type": "string"
          },
          "street": {
            "type": "string"
          },
          "postal_code": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "group_id": {
            "type": "string"
          }
        },
        "required": [
          "email",
          "first_name",
          "last_name",
          "company_name",
          "phone",
          "house_number",
          "street",
          "postal_code",
          "country",
          "group_id"
        ]
      },
      "charge": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Charge ID",
            "type": "string"
          },
          "lineItemId": {
            "description": "Line Item",
            "type": "string"
          },
          "tenderId": {
            "description": "Tender",
            "type": "string"
          },
          "chargeCategoryId": {
            "description": "Category of the charge",
            "type": "integer"
          },
          "description": {
            "description": "Description",
            "type": "string"
          },
          "value": {
            "$ref": "#/components/schemas/money"
          },
          "originalValue": {
            "$ref": "#/components/schemas/money"
          },
          "order": {
            "description": "Order of the charges",
            "type": "integer"
          },
          "section": {
            "description": "Section of charge",
            "type": "string"
          },
          "level": {
            "description": "Nesting level",
            "type": "integer"
          }
        },
        "required": [
          "id",
          "lineItemId",
          "tenderId",
          "chargeCategoryId",
          "description",
          "value",
          "originalValue",
          "order",
          "section",
          "level"
        ]
      },
      "commodityInfo": {
        "type": "object",
        "properties": {
          "imo_class": {
            "type": "string",
            "enum": [
              "0",
              "1",
              "1.1",
              "1.2",
              "1.3",
              "1.4",
              "1.5",
              "1.6",
              "2",
              "2.1",
              "2.2",
              "2.3",
              "3",
              "4",
              "4.1",
              "4.2",
              "4.3",
              "5",
              "5.1",
              "5.2",
              "6",
              "6.1",
              "6.2",
              "7",
              "7.1",
              "7.2",
              "7.3",
              "7.4",
              "8",
              "9"
            ],
            "nullable": true,
            "description": "Defines the standard IMO class for the dangerous goods that this cargo item might contain. IMO Class is defined as Class and possible sub-class, where class defines top-level category of type of dangerous goods, and sub-class defines more detailed separation of different dangerous goods.\n\nTo see list of possible classes and sub-classes, please see for example https://www.searates.com/reference/imo/\n\nIf dangerous goods category is unknown, please use `0.0` as IMO class, which is used internally for unknown dangerous goods class but known that it is dangerous goods.\nIf cargo item contains no dangerous goods, set this field as `null`.\n"
          },
          "description": {
            "type": "string",
            "description": "The description of the IMO Class/ HSCode chosen"
          },
          "hs_code": {
            "type": "string",
            "nullable": true,
            "description": "The Harmonized Commodity Description and Coding System, also known as the Harmonized System of tariff nomenclature is an internationally standardized system of names and numbers to classify traded products.\nThis code is is used to identify the type of cargo being shipped as it can affect the pricing and routes available\n"
          }
        },
        "required": [
          "id",
          "code"
        ]
      },
      "country": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Country ID",
            "type": "string"
          },
          "type": {
            "description": "Country Type",
            "type": "string"
          },
          "attributes": {
            "description": "Country Attributes",
            "type": "object",
            "properties": {
              "name": {
                "description": "Name of the country",
                "type": "string"
              },
              "code": {
                "description": "Country code",
                "type": "string"
              },
              "flag": {
                "description": "Flag of the country",
                "type": "string"
              }
            },
            "required": [
              "name",
              "code",
              "flag"
            ]
          }
        },
        "required": [
          "id",
          "type",
          "attributes"
        ]
      },
      "group": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Group ID",
            "type": "string"
          },
          "type": {
            "description": "Type of group",
            "type": "string"
          },
          "attributes": {
            "description": "Attributes of group",
            "type": "object",
            "properties": {
              "id": {
                "description": "ID of attributes",
                "type": "string"
              },
              "name": {
                "description": "Name of the group",
                "type": "string"
              }
            },
            "required": [
              "id",
              "name"
            ]
          }
        },
        "required": [
          "id",
          "type",
          "attributes"
        ]
      },
      "item": {
        "type": "object",
        "properties": {
          "cargoClass": {
            "description": "Cargo classification code",
            "type": "string",
            "enum": [
              "lcl",
              "aggregated_lcl",
              "fcl_10",
              "fcl_20",
              "fcl_20_ot",
              "fcl_20_rf",
              "fcl_20_frs",
              "fcl_20_frw",
              "fcl_40",
              "fcl_40_hq",
              "fcl_40_ot",
              "fcl_40_rf",
              "fcl_40_hq_rf",
              "fcl_40_frs",
              "fcl_40_frw",
              "fcl_45",
              "fcl_45_hq",
              "fcl_45_rf"
            ]
          },
          "stackable": {
            "description": "If cargo item is stackable or not",
            "type": "boolean"
          },
          "quantity": {
            "description": "Quantity",
            "type": "integer"
          },
          "length": {
            "description": "Length of the item expressed as a decimal on the centimeter (cm) scale",
            "type": "number"
          },
          "width": {
            "description": "Width of the item expressed as a decimal on the centimeter (cm) scale",
            "type": "number"
          },
          "height": {
            "description": "Height of the item expressed as a decimal on the centimeter (cm) scale",
            "type": "number"
          },
          "weight": {
            "description": "Weight of the item expressed as a decimal on the kilogram (kg) scale",
            "type": "number"
          },
          "volume": {
            "description": "Volume of the item expressed as a decimal on the cubic meter (m3) scale",
            "type": "number"
          },
          "commodities": {
            "description": "Commodity codes of the contents",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commodityInfo"
            }
          }
        },
        "required": [
          "stackable",
          "colliType",
          "quantity",
          "length",
          "width",
          "height",
          "weight",
          "commodities"
        ]
      },
      "item_lcl": {
        "type": "object",
        "properties": {
          "cargoClass": {
            "description": "Cargo classification code",
            "type": "string",
            "enum": [
              "lcl"
            ]
          },
          "stackable": {
            "description": "If cargo item is stackable or not",
            "type": "boolean"
          },
          "colliType": {
            "description": "Colli Type: The type of container the items are packed in. One of a preset list",
            "type": "string",
            "enum": [
              "container",
              "barrel",
              "bottle",
              "carton",
              "case",
              "crate",
              "drum",
              "package",
              "pallet",
              "roll",
              "skid",
              "stack",
              "room_temp_reefer",
              "low_temp_reefer"
            ]
          },
          "quantity": {
            "description": "Quantity",
            "type": "integer"
          },
          "length": {
            "description": "Length of the item expressed as a decimal on the centimeter (cm) scale",
            "type": "number"
          },
          "width": {
            "description": "Width of the item expressed as a decimal on the centimeter (cm) scale",
            "type": "number"
          },
          "height": {
            "description": "Height of the item expressed as a decimal on the centimeter (cm) scale",
            "type": "number"
          },
          "weight": {
            "description": "Weight of the item expressed as a decimal on the kilogram (kg) scale",
            "type": "number"
          },
          "volume": {
            "description": "Volume is derived from Width, Length and Height values so this property is null",
            "type": "number",
            "nullable": true
          },
          "commodities": {
            "description": "Commodity codes of the contents",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commodityInfo"
            }
          }
        },
        "required": [
          "stackable",
          "colliType",
          "quantity",
          "length",
          "width",
          "height",
          "weight",
          "commodities",
          "cargoClass"
        ]
      },
      "item_aggregated_lcl": {
        "type": "object",
        "properties": {
          "cargoClass": {
            "description": "Cargo classification code",
            "type": "string",
            "enum": [
              "aggregated_lcl"
            ]
          },
          "stackable": {
            "description": "Aggregated Cargo Item's are always stackable so this property is not required",
            "type": "boolean",
            "nullable": true
          },
          "quantity": {
            "description": "Aggregated Cargo Item's have no defined quantity so this property is null",
            "type": "integer",
            "nullable": true
          },
          "length": {
            "description": "Aggregated Cargo Item's have no defined length so this property is null",
            "type": "number",
            "nullable": true
          },
          "width": {
            "description": "Aggregated Cargo Item's have no defined width so this property is null",
            "type": "number",
            "nullable": true
          },
          "height": {
            "description": "Aggregated Cargo Item's have no defined height so this property is null",
            "type": "number",
            "nullable": true
          },
          "weight": {
            "description": "Weight of the item expressed as a decimal on the kilogram (kg) scale",
            "type": "number"
          },
          "volume": {
            "description": "Volume of the item expressed as a decimal on the cubic meter (m3) scale",
            "type": "number"
          },
          "commodities": {
            "description": "Commodity codes of the contents",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commodityInfo"
            }
          }
        },
        "required": [
          "volume",
          "weight",
          "commodities",
          "cargoClass"
        ]
      },
      "item_fcl": {
        "type": "object",
        "properties": {
          "cargoClass": {
            "description": "Container classification code",
            "type": "string",
            "enum": [
              "fcl_10",
              "fcl_20",
              "fcl_20_ot",
              "fcl_20_rf",
              "fcl_20_frs",
              "fcl_20_frw",
              "fcl_40",
              "fcl_40_hq",
              "fcl_40_ot",
              "fcl_40_rf",
              "fcl_40_hq_rf",
              "fcl_40_frs",
              "fcl_40_frw",
              "fcl_45",
              "fcl_45_hq",
              "fcl_45_rf"
            ]
          },
          "stackable": {
            "description": "If cargo item is stackable or not: N/A for FCL",
            "type": "boolean"
          },
          "quantity": {
            "description": "Quantity",
            "type": "integer"
          },
          "length": {
            "description": "Containers have no defined length so this property is null",
            "type": "integer",
            "nullable": true
          },
          "width": {
            "description": "Containers have no defined width so this property is null",
            "type": "integer",
            "nullable": true
          },
          "height": {
            "description": "Containers have no defined height so this property is null",
            "type": "integer",
            "nullable": true
          },
          "weight": {
            "description": "Weight of the item expressed as a decimal on the kilogram (kg) scale",
            "type": "integer"
          },
          "volume": {
            "description": "Containers have no defined dimensions so this property is null",
            "type": "integer"
          },
          "commodities": {
            "description": "Commodity codes of the contents",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commodityInfo"
            }
          }
        },
        "required": [
          "stackable",
          "colliType",
          "quantity",
          "weight",
          "commodities",
          "cargoClass"
        ]
      },
      "journeyError": {
        "type": "object",
        "properties": {
          "id": {
            "description": "ID",
            "type": "string"
          },
          "code": {
            "description": "Code",
            "type": "string"
          },
          "service": {
            "description": "Service",
            "type": "string"
          },
          "carrier": {
            "description": "Carrier",
            "type": "string"
          },
          "mode_of_transport": {
            "description": "MOT",
            "type": "string"
          },
          "property": {
            "description": "Property",
            "type": "string"
          },
          "value": {
            "description": "Value",
            "type": "string"
          },
          "limit": {
            "description": "Limit",
            "type": "string"
          }
        },
        "required": [
          "id"
        ]
      },
      "locationV1Nexus": {
        "type": "object",
        "properties": {
          "nexus_id": {
            "type": "integer",
            "description": "The unique identifier of the Location Nexus"
          }
        },
        "required": [
          "nexus_id"
        ]
      },
      "locationV1Trucking": {
        "type": "object",
        "properties": {
          "latitude": {
            "type": "string",
            "description": "The latitude of the Location"
          },
          "longitude": {
            "type": "string",
            "description": "The longitude of the Location"
          }
        },
        "required": [
          "latitude",
          "longitude"
        ]
      },
      "money": {
        "type": "object",
        "properties": {
          "amount": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ],
            "description": "Monetary amount in given currency"
          },
          "currency": {
            "type": "string",
            "description": "ISO 4217 code for currency"
          }
        },
        "required": [
          "amount",
          "currency"
        ]
      },
      "nexus": {
        "type": "object",
        "properties": {
          "id": {
            "description": "ID",
            "type": "string"
          },
          "type": {
            "description": "Type",
            "type": "string"
          },
          "attributes": {
            "description": "Attributes",
            "type": "object",
            "properties": {
              "id": {
                "description": "ID",
                "type": "number"
              },
              "name": {
                "description": "Name",
                "type": "string"
              },
              "latitude": {
                "description": "Latitude",
                "type": "number"
              },
              "longitude": {
                "description": "Longitude",
                "type": "number"
              },
              "modesOfTransport": {
                "description": "MOTs",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "countryName": {
                "description": "Country Name",
                "type": "string"
              }
            },
            "required": [
              "id",
              "name",
              "latitude",
              "longitude",
              "modesOfTransport",
              "countryName"
            ]
          }
        },
        "required": [
          "id",
          "type",
          "attributes"
        ]
      },
      "organization": {
        "type": "object",
        "properties": {
          "id": {
            "description": "ID",
            "type": "string"
          },
          "type": {
            "description": "Type",
            "type": "string"
          },
          "attributes": {
            "description": "Attributes of the organisation.",
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the organisation. Usually their legal business name."
              },
              "slug": {
                "type": "string",
                "description": "Short slug of the organisation that is unique for a single\norganisation. This is usually used as poart of the URL and must\nalways match generic domain requirements.\n"
              }
            },
            "required": [
              "name",
              "slug"
            ]
          }
        },
        "required": [
          "id",
          "type",
          "attributes"
        ]
      },
      "pagination": {
        "type": "object",
        "properties": {
          "page": {
            "description": "Current page",
            "type": "number"
          },
          "perPage": {
            "description": "Items per page",
            "type": "number"
          },
          "totalPages": {
            "description": "Total number of pages",
            "type": "number"
          }
        },
        "required": [
          "page",
          "perPage",
          "totalPages"
        ]
      },
      "paginationLinks": {
        "type": "object",
        "properties": {
          "first": {
            "description": "First page",
            "type": "string",
            "nullable": true
          },
          "prev": {
            "description": "Previous page",
            "type": "string",
            "nullable": true
          },
          "next": {
            "description": "Next page",
            "type": "string",
            "nullable": true
          },
          "last": {
            "description": "Last page",
            "type": "string",
            "nullable": true
          }
        }
      },
      "quotationTender": {
        "type": "object",
        "properties": {
          "data": {
            "description": "Data",
            "type": "object",
            "properties": {
              "id": {
                "description": "ID",
                "type": "string"
              },
              "type": {
                "description": "Type",
                "type": "string"
              },
              "attributes": {
                "description": "Attributes",
                "type": "object",
                "properties": {
                  "charges": {
                    "description": "Charges",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/charge"
                    }
                  },
                  "route": {
                    "description": "Route",
                    "type": "string"
                  },
                  "vessel": {
                    "description": "Vessel",
                    "type": "string"
                  },
                  "id": {
                    "description": "ID",
                    "type": "string"
                  },
                  "pickupTruckType": {
                    "description": "Truck type",
                    "type": "string"
                  },
                  "deliveryTruckType": {
                    "description": "Truck type",
                    "type": "string"
                  },
                  "pickupCarrier": {
                    "description": "Carrier",
                    "type": "string"
                  },
                  "deliveryCarrier": {
                    "description": "Carrier",
                    "type": "string"
                  },
                  "pickupService": {
                    "description": "Service",
                    "type": "string"
                  },
                  "deliveryService": {
                    "description": "Service",
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "route"
                ]
              }
            },
            "required": [
              "id",
              "type",
              "attributes"
            ]
          }
        }
      },
      "restfulResponse": {
        "type": "object",
        "properties": {
          "id": {
            "description": "ID",
            "type": "string"
          }
        }
      },
      "offer": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the Offer",
            "type": "string"
          }
        },
        "required": [
          "id"
        ]
      },
      "settings": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the settings object",
            "type": "string"
          },
          "attributes": {
            "description": "Attributes",
            "type": "object",
            "properties": {
              "language": {
                "type": "string",
                "pattern": "[a-z]{2}-[A-Z]{2}",
                "description": "User's preferred language. Preferred language is given as language\nand country combination, allowing different dialects and languages\nfor each region.\n\nLanguage code is combined with language and country, separated by\ndash. First part of the code, language is the lower-case\ntwo-letter codes as defined by ISO-639-1. Second part is the\nupper-case two-letter codes as defined by ISO-3166-1.\n\nFor example:\n\n* `en-US` - English as spoken in United States of America\n* `en-GB` - English as spoken in United Kingdom and the Northern Ireland\n* `sv-FI` - Swedish as spoken in Finland\n"
              },
              "locale": {
                "type": "string",
                "pattern": "[a-z]{2}-[A-Z]{2}",
                "description": "User's preferred locale. Preferred locale defines how numbers and\ncurrencies, time et al. are displayed in the shop.\n\nLocale code is combined with language and country, separated by\ndash. First part of the code, language is the lower-case\ntwo-letter codes as defined by ISO-639-1. Second part is the\nupper-case two-letter codes as defined by ISO-3166-1.\n\nFor example:\n\n* `en-US` - English as spoken in United States of America\n* `en-GB` - English as spoken in United Kingdom and the Northern Ireland\n* `sv-FI` - Swedish as spoken in Finland\n"
              }
            }
          }
        }
      },
      "scope": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the offer",
            "type": "string"
          },
          "links": {
            "type": "object",
            "properties": {
              "legal": {
                "type": "string",
                "description": "Link to any Legal notices the client wants to display",
                "nullable": true
              },
              "imprint": {
                "type": "string",
                "description": "Link to the 'Imprint' page of the client",
                "nullable": true
              },
              "about": {
                "type": "string",
                "description": "Link to the About Us page of the Clients website",
                "nullable": true
              },
              "privacy": {
                "type": "string",
                "description": "Link to the Client's Privacy Policy",
                "nullable": true
              },
              "terms": {
                "type": "string",
                "description": "Link to the Terms and Conditions the Client operates under",
                "nullable": true
              }
            }
          }
        }
      },
      "user": {
        "type": "object",
        "properties": {
          "id": {
            "description": "ID",
            "type": "string"
          },
          "type": {
            "description": "Type",
            "type": "string"
          },
          "attributes": {
            "description": "Attributes",
            "type": "object",
            "properties": {
              "email": {
                "description": "Email",
                "type": "string"
              },
              "organizationId": {
                "description": "organization",
                "type": "string"
              },
              "firstName": {
                "description": "First Name",
                "type": "string"
              },
              "lastName": {
                "description": "Last Name",
                "type": "string"
              },
              "phone": {
                "description": "Phone",
                "type": "string"
              },
              "companyName": {
                "description": "Company",
                "type": "string"
              }
            },
            "required": [
              "email",
              "organizationId",
              "firstName",
              "lastName",
              "phone",
              "companyName"
            ]
          }
        },
        "required": [
          "id",
          "type",
          "attributes"
        ]
      },
      "profile": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the profile. Format of UUID.",
            "type": "string"
          },
          "attributes": {
            "description": "Attributes",
            "type": "object",
            "properties": {
              "email": {
                "description": "Email of the client",
                "type": "string"
              },
              "firstName": {
                "description": "First name of the user. This can be missing in case the user either does not have a first (given) name, or does not want it to be used.",
                "type": "string"
              },
              "lastName": {
                "description": "User's last or family name. In cases user only has one name, last name is used for identifying that.",
                "type": "string"
              },
              "password": {
                "description": "User's desired new password for their account",
                "type": "string"
              }
            },
            "required": [
              "email",
              "firstName",
              "lastName"
            ]
          }
        },
        "required": [
          "id",
          "type",
          "attributes"
        ]
      }
    },
    "securitySchemes": {
      "oauth": {
        "type": "oauth2",
        "description": "This API uses OAuth2 with the password grant flow.",
        "flows": {
          "password": {
            "tokenUrl": "/oauth/tokens",
            "refreshUrl": "/oauth/refresh",
            "scopes": {
              "public": "Public Access"
            }
          }
        }
      },
      "bearerAuth": {
        "type": "http",
        "description": "Some endpoints authorize via integration token",
        "scheme": "bearer"
      }
    }
  },
  "servers": [
    {
      "url": "https://{host}",
      "variables": {
        "host": {
          "default": "api.itsmycargo.com"
        }
      }
    }
  ],
  "paths": {
    "/v1/organizations/{organization_id}/ahoy": {
      "get": {
        "summary": "Fetch Settings",
        "tags": [
          "Ahoy"
        ],
        "description": "Fetch settings for Ahoy widget.",
        "operationId": "getAhoy",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "endpoint": "test_1.itsmycargo.test",
                  "modes_of_transport": {
                    "air": {
                      "fcl": false,
                      "lcl": true
                    },
                    "rail": {
                      "fcl": false,
                      "lcl": false
                    },
                    "ocean": {
                      "fcl": true,
                      "lcl": true
                    },
                    "truck": {
                      "fcl": false,
                      "lcl": false
                    }
                  },
                  "pre_carriage": true,
                  "on_carriage": true
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "endpoint": {
                      "description": "Endpoint url that Ahoy will redirect to start the booking process",
                      "type": "string"
                    },
                    "pre_carriage": {
                      "description": "Determines if pre-carriage is enabled",
                      "type": "boolean"
                    },
                    "on_carriage": {
                      "description": "Determines if on-carriage is enabled",
                      "type": "boolean"
                    },
                    "modes_of_transport": {
                      "description": "Supported modes of transports",
                      "type": "object",
                      "properties": {
                        "air": {
                          "description": "Supported cargo types for Air Cargo",
                          "type": "object",
                          "properties": {
                            "fcl": {
                              "description": "Determines if FCL is supported",
                              "type": "boolean"
                            },
                            "lcl": {
                              "description": "Determines if LCL is supported",
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "fcl",
                            "lcl"
                          ]
                        },
                        "rail": {
                          "description": "Supported cargo types for Rail Cargo",
                          "type": "object",
                          "properties": {
                            "fcl": {
                              "description": "Determines if FCL is supported",
                              "type": "boolean"
                            },
                            "lcl": {
                              "description": "Determines if LCL is supported",
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "fcl",
                            "lcl"
                          ]
                        },
                        "ocean": {
                          "description": "Supported cargo types for Ocean Cargo",
                          "type": "object",
                          "properties": {
                            "fcl": {
                              "description": "Determines if FCL is supported",
                              "type": "boolean"
                            },
                            "lcl": {
                              "description": "Determines if LCL is supported",
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "fcl",
                            "lcl"
                          ]
                        },
                        "truck": {
                          "description": "Supported cargo types for Trucking Cargo",
                          "type": "object",
                          "properties": {
                            "fcl": {
                              "description": "Determines if FCL is supported",
                              "type": "boolean"
                            },
                            "lcl": {
                              "description": "Determines if LCL is supported",
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "fcl",
                            "lcl"
                          ]
                        }
                      },
                      "required": [
                        "air",
                        "rail",
                        "ocean",
                        "truck"
                      ]
                    }
                  },
                  "required": [
                    "endpoint",
                    "pre_carriage",
                    "on_carriage",
                    "modes_of_transport"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Invalid Customer UUID"
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/cargo_item_types": {
      "get": {
        "summary": "Fetch all available cargo types",
        "tags": [
          "Quote"
        ],
        "description": "Fetches all possible cargo types enabled for the customer.",
        "operationId": "getCargoItemTypes",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "7",
                      "type": "cargoItemType",
                      "attributes": {
                        "width": "101.0",
                        "length": "121.0",
                        "description": "Pallet"
                      }
                    }
                  ],
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/cargo_item_type"
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Invalid Credentials"
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/queries/{query_id}/cargo_units": {
      "get": {
        "summary": "Fetch CargoUnits for the Query",
        "tags": [
          "CargoUnits"
        ],
        "description": "Fetches cargo units for the query.",
        "operationId": "getCargoUnits",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query_id",
            "in": "path",
            "description": "Query ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "a9fcc5eb-5a2e-43a9-a4e6-335f90985657",
                      "type": "cargoUnit",
                      "attributes": {
                        "cargoItemTypeId": null,
                        "default": false,
                        "height": "140.0",
                        "length": "80.0",
                        "stackable": false,
                        "quantity": 2,
                        "weight": "3000 kg",
                        "width": "120.0",
                        "valid": true,
                        "dangerous": false,
                        "commodityCodes": [

                        ]
                      }
                    },
                    {
                      "id": "293dab4b-9840-4c22-9129-f6d5772967f0",
                      "type": "cargoUnit",
                      "attributes": {
                        "cargoItemTypeId": null,
                        "default": false,
                        "height": "140.0",
                        "length": "80.0",
                        "stackable": false,
                        "quantity": 2,
                        "weight": "3000 kg",
                        "width": "120.0",
                        "valid": true,
                        "dangerous": false,
                        "commodityCodes": [

                        ]
                      }
                    },
                    {
                      "id": "7c404ea5-5fc0-44db-90e2-f50dc3bcc7c9",
                      "type": "cargoUnit",
                      "attributes": {
                        "cargoItemTypeId": null,
                        "default": false,
                        "height": "140.0",
                        "length": "80.0",
                        "stackable": false,
                        "quantity": 2,
                        "weight": "3000 kg",
                        "width": "120.0",
                        "valid": true,
                        "dangerous": false,
                        "commodityCodes": [

                        ]
                      }
                    }
                  ],
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/cargo_item_type"
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/queries/{query_id}/cargo_units/{id}": {
      "get": {
        "summary": "Fetch CargoUnit for the Query",
        "tags": [
          "CargoUnits"
        ],
        "description": "Fetch Cergo Units",
        "operationId": "getCargoUnit",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query_id",
            "in": "path",
            "description": "Query ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "CargoUnit ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "2ade1b8d-4b0a-4202-ad7e-85c2c5a26783",
                    "type": "cargoUnit",
                    "attributes": {
                      "cargoItemTypeId": null,
                      "default": false,
                      "height": "140.0",
                      "length": "80.0",
                      "stackable": false,
                      "quantity": 2,
                      "weight": "3000 kg",
                      "width": "120.0",
                      "valid": true,
                      "dangerous": false,
                      "commodityCodes": [

                      ]
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/cargo_item_type"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/quotations/{quotation_id}/charges/{id}": {
      "get": {
        "summary": "Fetch tender charges",
        "tags": [
          "Quote"
        ],
        "description": "Fetches available tenders.",
        "operationId": "getCharge",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Trip ID of the tender",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quotation_id",
            "in": "path",
            "description": "The selected quotation ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "2faa9d46-631d-4c72-a069-338e2ad3bdb0",
                    "type": "detailedResult",
                    "attributes": {
                      "charges": [
                        {
                          "id": "06b52e7c-f8ea-4914-ae68-a12c4a28d5ef",
                          "editId": null,
                          "order": 0,
                          "parentId": null,
                          "lineItemId": null,
                          "tenderId": "2faa9d46-631d-4c72-a069-338e2ad3bdb0",
                          "code": null,
                          "chargeCategoryId": null,
                          "description": null,
                          "section": null,
                          "value": {
                            "amount": "180.0",
                            "currency": "EUR"
                          },
                          "originalValue": {
                            "amount": "180.0",
                            "currency": "EUR"
                          },
                          "level": 0
                        },
                        {
                          "id": "93e9647f-f4ca-4be6-852c-4ef364bf5800",
                          "editId": null,
                          "order": 0,
                          "parentId": null,
                          "lineItemId": null,
                          "tenderId": "2faa9d46-631d-4c72-a069-338e2ad3bdb0",
                          "code": null,
                          "chargeCategoryId": 415,
                          "description": "Trucking pre",
                          "section": "trucking_pre",
                          "value": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "originalValue": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "level": 1
                        },
                        {
                          "id": "38582182-c191-4e16-a6e1-3d033175b178",
                          "editId": "f91b5ab6-0a25-4b28-850e-b342403c072e",
                          "order": 0,
                          "parentId": "93e9647f-f4ca-4be6-852c-4ef364bf5800",
                          "lineItemId": null,
                          "tenderId": "2faa9d46-631d-4c72-a069-338e2ad3bdb0",
                          "code": null,
                          "chargeCategoryId": "",
                          "description": "1 x Pallet",
                          "section": "trucking_pre",
                          "value": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "originalValue": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "level": 2
                        },
                        {
                          "id": "26c91b7a-083b-48a8-b7e8-66a774a719e8",
                          "editId": null,
                          "order": 0,
                          "parentId": "38582182-c191-4e16-a6e1-3d033175b178",
                          "lineItemId": null,
                          "tenderId": "2faa9d46-631d-4c72-a069-338e2ad3bdb0",
                          "code": null,
                          "chargeCategoryId": null,
                          "description": "Fees charged in USD:",
                          "section": "trucking_pre",
                          "value": {
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "originalValue": {
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "level": 3
                        },
                        {
                          "id": "56143847-1e78-4502-9a27-c4e44dd91c13",
                          "editId": "8307ff7c-5334-415f-879e-65b9afc55811",
                          "order": 0,
                          "parentId": "26c91b7a-083b-48a8-b7e8-66a774a719e8",
                          "lineItemId": "8307ff7c-5334-415f-879e-65b9afc55811",
                          "tenderId": "2faa9d46-631d-4c72-a069-338e2ad3bdb0",
                          "code": "Fee 2",
                          "chargeCategoryId": null,
                          "description": "FEE 2 - ",
                          "section": "trucking_pre",
                          "originalValue": {
                            "included": false,
                            "excluded": false,
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "value": {
                            "included": false,
                            "excluded": false,
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "level": 4
                        },
                        {
                          "id": "3d4454ec-7dab-42c8-bca0-d2e68b16e2c4",
                          "editId": null,
                          "order": 1,
                          "parentId": null,
                          "lineItemId": null,
                          "tenderId": "2faa9d46-631d-4c72-a069-338e2ad3bdb0",
                          "code": null,
                          "chargeCategoryId": 418,
                          "description": "Export",
                          "section": "export",
                          "value": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "originalValue": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "level": 1
                        },
                        {
                          "id": "0ef3b982-16a7-45c8-a3f8-3ecf52968cf3",
                          "editId": "f91b5ab6-0a25-4b28-850e-b342403c072e",
                          "order": 0,
                          "parentId": "3d4454ec-7dab-42c8-bca0-d2e68b16e2c4",
                          "lineItemId": null,
                          "tenderId": "2faa9d46-631d-4c72-a069-338e2ad3bdb0",
                          "code": null,
                          "chargeCategoryId": "",
                          "description": "1 x Pallet",
                          "section": "export",
                          "value": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "originalValue": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "level": 2
                        },
                        {
                          "id": "199c0297-59bf-4526-922b-69408b34f908",
                          "editId": null,
                          "order": 0,
                          "parentId": "0ef3b982-16a7-45c8-a3f8-3ecf52968cf3",
                          "lineItemId": null,
                          "tenderId": "2faa9d46-631d-4c72-a069-338e2ad3bdb0",
                          "code": null,
                          "chargeCategoryId": null,
                          "description": "Fees charged in USD:",
                          "section": "export",
                          "value": {
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "originalValue": {
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "level": 3
                        },
                        {
                          "id": "69b4aad3-88fd-4fb5-83c2-332ee51588e1",
                          "editId": "9ba75722-84fa-4196-8597-0a10cec32020",
                          "order": 0,
                          "parentId": "199c0297-59bf-4526-922b-69408b34f908",
                          "lineItemId": "9ba75722-84fa-4196-8597-0a10cec32020",
                          "tenderId": "2faa9d46-631d-4c72-a069-338e2ad3bdb0",
                          "code": "Fee 4",
                          "chargeCategoryId": null,
                          "description": "FEE 4 - ",
                          "section": "export",
                          "originalValue": {
                            "included": false,
                            "excluded": false,
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "value": {
                            "included": false,
                            "excluded": false,
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "level": 4
                        },
                        {
                          "id": "3ff4148e-1a8e-43d6-836f-8115bc0fa65d",
                          "editId": null,
                          "order": 2,
                          "parentId": null,
                          "lineItemId": null,
                          "tenderId": "2faa9d46-631d-4c72-a069-338e2ad3bdb0",
                          "code": null,
                          "chargeCategoryId": 417,
                          "description": "Cargo",
                          "section": "cargo",
                          "value": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "originalValue": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "level": 1
                        },
                        {
                          "id": "7c670d03-43e9-4dfa-8a86-5037c5a35a8d",
                          "editId": "f91b5ab6-0a25-4b28-850e-b342403c072e",
                          "order": 0,
                          "parentId": "3ff4148e-1a8e-43d6-836f-8115bc0fa65d",
                          "lineItemId": null,
                          "tenderId": "2faa9d46-631d-4c72-a069-338e2ad3bdb0",
                          "code": null,
                          "chargeCategoryId": "",
                          "description": "1 x Pallet",
                          "section": "cargo",
                          "value": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "originalValue": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "level": 2
                        },
                        {
                          "id": "3a74331b-8104-4b28-896c-7885521cdbbc",
                          "editId": null,
                          "order": 0,
                          "parentId": "7c670d03-43e9-4dfa-8a86-5037c5a35a8d",
                          "lineItemId": null,
                          "tenderId": "2faa9d46-631d-4c72-a069-338e2ad3bdb0",
                          "code": null,
                          "chargeCategoryId": null,
                          "description": "Fees charged in USD:",
                          "section": "cargo",
                          "value": {
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "originalValue": {
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "level": 3
                        },
                        {
                          "id": "31ddd1db-2a2e-494d-8afb-78c4156e80f8",
                          "editId": "42c3e1b2-f9e2-40cb-a0aa-04bdd12e5e5d",
                          "order": 0,
                          "parentId": "3a74331b-8104-4b28-896c-7885521cdbbc",
                          "lineItemId": "42c3e1b2-f9e2-40cb-a0aa-04bdd12e5e5d",
                          "tenderId": "2faa9d46-631d-4c72-a069-338e2ad3bdb0",
                          "code": "Fee 6",
                          "chargeCategoryId": null,
                          "description": "FEE 6 - ",
                          "section": "cargo",
                          "originalValue": {
                            "included": false,
                            "excluded": false,
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "value": {
                            "included": false,
                            "excluded": false,
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "level": 4
                        },
                        {
                          "id": "2dc2450a-6739-40ca-a3dd-7f71fabe4569",
                          "editId": null,
                          "order": 3,
                          "parentId": null,
                          "lineItemId": null,
                          "tenderId": "2faa9d46-631d-4c72-a069-338e2ad3bdb0",
                          "code": null,
                          "chargeCategoryId": 419,
                          "description": "Import",
                          "section": "import",
                          "value": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "originalValue": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "level": 1
                        },
                        {
                          "id": "607fc382-038c-404a-b29b-2ade6cdb5347",
                          "editId": "f91b5ab6-0a25-4b28-850e-b342403c072e",
                          "order": 0,
                          "parentId": "2dc2450a-6739-40ca-a3dd-7f71fabe4569",
                          "lineItemId": null,
                          "tenderId": "2faa9d46-631d-4c72-a069-338e2ad3bdb0",
                          "code": null,
                          "chargeCategoryId": "",
                          "description": "1 x Pallet",
                          "section": "import",
                          "value": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "originalValue": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "level": 2
                        },
                        {
                          "id": "c38aa4d4-4076-4bd6-8528-e0d220f55275",
                          "editId": null,
                          "order": 0,
                          "parentId": "607fc382-038c-404a-b29b-2ade6cdb5347",
                          "lineItemId": null,
                          "tenderId": "2faa9d46-631d-4c72-a069-338e2ad3bdb0",
                          "code": null,
                          "chargeCategoryId": null,
                          "description": "Fees charged in USD:",
                          "section": "import",
                          "value": {
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "originalValue": {
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "level": 3
                        },
                        {
                          "id": "e730a291-d407-43c9-ab3c-da27b4aa36b6",
                          "editId": "fabae889-345f-4e57-92da-3e5dfbc1cd6d",
                          "order": 0,
                          "parentId": "c38aa4d4-4076-4bd6-8528-e0d220f55275",
                          "lineItemId": "fabae889-345f-4e57-92da-3e5dfbc1cd6d",
                          "tenderId": "2faa9d46-631d-4c72-a069-338e2ad3bdb0",
                          "code": "Fee 8",
                          "chargeCategoryId": null,
                          "description": "FEE 8 - ",
                          "section": "import",
                          "originalValue": {
                            "included": false,
                            "excluded": false,
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "value": {
                            "included": false,
                            "excluded": false,
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "level": 4
                        },
                        {
                          "id": "dd19b05a-afcd-4b3f-ab73-b093397d1e58",
                          "editId": null,
                          "order": 4,
                          "parentId": null,
                          "lineItemId": null,
                          "tenderId": "2faa9d46-631d-4c72-a069-338e2ad3bdb0",
                          "code": null,
                          "chargeCategoryId": 416,
                          "description": "Trucking on",
                          "section": "trucking_on",
                          "value": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "originalValue": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "level": 1
                        },
                        {
                          "id": "2bcd2463-468c-4f05-ad9b-55174a607af3",
                          "editId": "f91b5ab6-0a25-4b28-850e-b342403c072e",
                          "order": 0,
                          "parentId": "dd19b05a-afcd-4b3f-ab73-b093397d1e58",
                          "lineItemId": null,
                          "tenderId": "2faa9d46-631d-4c72-a069-338e2ad3bdb0",
                          "code": null,
                          "chargeCategoryId": "",
                          "description": "1 x Pallet",
                          "section": "trucking_on",
                          "value": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "originalValue": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "level": 2
                        },
                        {
                          "id": "26f12887-fe9e-4b52-89fd-2d65c47a8663",
                          "editId": null,
                          "order": 0,
                          "parentId": "2bcd2463-468c-4f05-ad9b-55174a607af3",
                          "lineItemId": null,
                          "tenderId": "2faa9d46-631d-4c72-a069-338e2ad3bdb0",
                          "code": null,
                          "chargeCategoryId": null,
                          "description": "Fees charged in USD:",
                          "section": "trucking_on",
                          "value": {
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "originalValue": {
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "level": 3
                        },
                        {
                          "id": "b42da699-4ade-4a67-a608-87e9a2444085",
                          "editId": "3682f784-9a7c-461a-902d-428e385fe31f",
                          "order": 0,
                          "parentId": "26f12887-fe9e-4b52-89fd-2d65c47a8663",
                          "lineItemId": "3682f784-9a7c-461a-902d-428e385fe31f",
                          "tenderId": "2faa9d46-631d-4c72-a069-338e2ad3bdb0",
                          "code": "Fee 10",
                          "chargeCategoryId": null,
                          "description": "FEE 10 - ",
                          "section": "trucking_on",
                          "originalValue": {
                            "included": false,
                            "excluded": false,
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "value": {
                            "included": false,
                            "excluded": false,
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "level": 4
                        }
                      ],
                      "route": "Gothenburg - Shanghai",
                      "vessel": "",
                      "id": "2faa9d46-631d-4c72-a069-338e2ad3bdb0",
                      "pickupTruckType": null,
                      "deliveryTruckType": null,
                      "pickupCarrier": "SACO",
                      "deliveryCarrier": "SACO",
                      "pickupService": "standard",
                      "deliveryService": "standard"
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/quotationTender"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Invalid Charge ID",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "message": "Couldn't find Journey::Result with 'id'=deadbeef",
                  "status": "not_found",
                  "code": 404
                }
              }
            }
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/clients": {
      "get": {
        "summary": "Fetch all clients",
        "tags": [
          "Clients"
        ],
        "description": "Fetch all customer client accounts.",
        "operationId": "getClients",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "Search query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Results per page",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "7af98b67-8d2f-49c0-9d04-43b81e1f28c5",
                      "type": "user",
                      "attributes": {
                        "email": "john.doe.64@itsmycargo.test",
                        "organizationId": "608da9eb-b906-4e76-91dc-b80cbe4e22b2",
                        "firstName": "Guest",
                        "lastName": "User 64",
                        "phone": "081 9847079",
                        "companyName": "Guest Company 64",
                        "role": null
                      }
                    }
                  ],
                  "links": {
                    "first": null,
                    "prev": null,
                    "next": null,
                    "last": null
                  },
                  "meta": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/user"
                      }
                    },
                    "links": {
                      "$ref": "#/components/schemas/paginationLinks"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Invalid Credentials"
          }
        }
      },
      "post": {
        "summary": "Create a new client",
        "tags": [
          "Clients"
        ],
        "description": "Creates a new client for the customer.",
        "operationId": "createClient",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "e130d270-06c3-430c-898f-e1d8c1dbb434",
                    "type": "user",
                    "attributes": {
                      "email": "john@example.com",
                      "organizationId": "3b1208a4-e5c2-4e26-8e4b-173b13b8ca71",
                      "firstName": "John",
                      "lastName": "Doe",
                      "phone": "+1 2345 2345",
                      "companyName": "LumberJacks Ltd",
                      "role": null
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                }
              }
            }
          },
          "400": {
            "description": "invalid request",
            "content": {
              "application/json": {
                "example": {
                  "error": "Validation failed: Email can't be blank, Email is invalid"
                }
              }
            }
          },
          "401": {
            "description": "Invalid Credentials"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/client"
                  }
                },
                "required": [
                  "data"
                ]
              }
            }
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/clients/{id}": {
      "get": {
        "summary": "Fetch specific client",
        "tags": [
          "Clients"
        ],
        "description": "Fetch a given client.",
        "operationId": "getClient",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Client ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "a53493c1-5fd6-4bca-a3b5-129b966f5c7c",
                    "type": "user",
                    "attributes": {
                      "email": "john.doe.71@itsmycargo.test",
                      "organizationId": "786b4720-4646-4226-9db3-a8abba5af059",
                      "firstName": "Guest",
                      "lastName": "User 71",
                      "phone": "081 9847079",
                      "companyName": "Guest Company 71",
                      "role": null
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/user"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Invalid Credentials"
          },
          "404": {
            "description": "Invalid Client ID",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "message": "Couldn't find Users::Client with 'id'=deadbeef [WHERE \"users_clients\".\"organization_id\" = $1 AND \"users_clients\".\"deleted_at\" IS NULL]",
                  "status": "not_found",
                  "code": 404
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Destroy a specific client",
        "tags": [
          "Clients"
        ],
        "description": "Deletes an client.",
        "operationId": "deleteClient",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Client ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation"
          },
          "404": {
            "description": "Invalid Client ID",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "message": "Couldn't find Users::Client with 'id'=deadbeef [WHERE \"users_clients\".\"organization_id\" = $1 AND \"users_clients\".\"deleted_at\" IS NULL]",
                  "status": "not_found",
                  "code": 404
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update",
        "tags": [
          "Clients"
        ],
        "description": "Update client details.",
        "operationId": "updateClient",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Client ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation"
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "example": {
                  "error": [
                    "Email can't be blank",
                    "Email is invalid"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "client": {
                    "$ref": "#/components/schemas/client"
                  }
                },
                "required": [
                  "client"
                ]
              }
            }
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/clients/{id}/password_reset": {
      "patch": {
        "summary": "Password Reset",
        "tags": [
          "Clients"
        ],
        "description": "Resets a client password.",
        "operationId": "passwordReset",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Client ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "password": "OZ47a9GD4SGNJfiU"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "password": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "password"
                      ]
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Invalid Credentials"
          },
          "404": {
            "description": "Invalid Client ID",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "message": "Couldn't find Users::Client with 'id'=deadbeef [WHERE \"users_clients\".\"organization_id\" = $1 AND \"users_clients\".\"deleted_at\" IS NULL]",
                  "status": "not_found",
                  "code": 404
                }
              }
            }
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/dashboard": {
      "get": {
        "summary": "Fetch Dashboard Widget",
        "tags": [
          "Dashboard"
        ],
        "description": "Fetch widget date for the dashboard.",
        "operationId": "getDashboard",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "widget",
            "in": "query",
            "description": "Widget to be fetch",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "description": "Start date of dashboard data",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "description": "End date of dashboard data",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": 0
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "number",
                      "nullable": true
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/equipments": {
      "get": {
        "summary": "Fetch all available equipment",
        "tags": [
          "Quote"
        ],
        "description": "Fetch availavble equipment for the route.",
        "operationId": "getEquipments",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "origin_nexus_id",
            "in": "query",
            "description": "the id of the origin",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "destination_nexus_id",
            "in": "query",
            "description": "the id of the destination",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    "fcl_20",
                    "fcl_40"
                  ]
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Invalid Credentials"
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/result_sets/{result_set_id}/errors": {
      "get": {
        "summary": "Fetch Errors for the Result Set",
        "tags": [
          "Users"
        ],
        "description": "Fetch errors for the given result set.",
        "operationId": "getResultSetErrors",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "result_set_id",
            "in": "path",
            "description": "ResultSet ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "7b5332f2-c731-4040-b6c1-3ad29e3cba74",
                      "type": "error",
                      "attributes": {
                        "id": "7b5332f2-c731-4040-b6c1-3ad29e3cba74",
                        "carrier": "MSC",
                        "code": 1001,
                        "limit": "1000",
                        "modeOfTransport": "ocean",
                        "property": "Weight",
                        "service": "Standard",
                        "value": "1100",
                        "cargoUnitId": "f1d882f9-cff8-44aa-8b2b-c49afce40d9d"
                      }
                    }
                  ],
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/journeyError"
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/groups": {
      "get": {
        "summary": "Fetch all groups",
        "tags": [
          "Groups"
        ],
        "description": "Fetch all groups.",
        "operationId": "getGroups",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "7837cb02-a3a4-47a2-847e-9a7eb3abaa9c",
                      "type": "organizationsGroup",
                      "attributes": {
                        "id": "7837cb02-a3a4-47a2-847e-9a7eb3abaa9c",
                        "name": "Group1"
                      }
                    },
                    {
                      "id": "45dc381e-9ca7-46d1-aaf7-60d4dd61627f",
                      "type": "organizationsGroup",
                      "attributes": {
                        "id": "45dc381e-9ca7-46d1-aaf7-60d4dd61627f",
                        "name": "Group2"
                      }
                    },
                    {
                      "id": "1fa32c49-58f4-49e3-8e27-48e3fa08fc2c",
                      "type": "organizationsGroup",
                      "attributes": {
                        "id": "1fa32c49-58f4-49e3-8e27-48e3fa08fc2c",
                        "name": "Group3"
                      }
                    },
                    {
                      "id": "155f7490-97c7-45e8-99b2-eae50998d31d",
                      "type": "organizationsGroup",
                      "attributes": {
                        "id": "155f7490-97c7-45e8-99b2-eae50998d31d",
                        "name": "Group4"
                      }
                    },
                    {
                      "id": "c2f8a7f9-e97f-4bba-a29e-564211d49fac",
                      "type": "organizationsGroup",
                      "attributes": {
                        "id": "c2f8a7f9-e97f-4bba-a29e-564211d49fac",
                        "name": "Group5"
                      }
                    }
                  ],
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/group"
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Invalid Credentials"
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/itineraries": {
      "get": {
        "summary": "Fetch list of itineraries belonging to an organization",
        "tags": [
          "Quote"
        ],
        "description": "Fetch list of itineraries belonging to an organization",
        "operationId": "getItineraries",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "123",
                      "type": "itinerary",
                      "attributes": {
                        "id": 123,
                        "modeOfTransport": "ocean",
                        "name": "Hamburg - Shanghai"
                      },
                      "relationships": {
                        "stops": {
                          "data": [
                            {
                              "id": "245",
                              "type": "stop"
                            },
                            {
                              "id": "246",
                              "type": "stop"
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "number"
                              },
                              "modeOfTransport": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "modeOfTransport",
                              "name"
                            ]
                          },
                          "relationships": {
                            "type": "object",
                            "properties": {
                              "stops": {
                                "type": "object",
                                "properties": {
                                  "data": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string"
                                        },
                                        "type": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "id",
                                        "type"
                                      ]
                                    }
                                  }
                                },
                                "required": [
                                  "data"
                                ]
                              }
                            },
                            "required": [
                              "stops"
                            ]
                          }
                        },
                        "required": [
                          "id",
                          "type",
                          "attributes",
                          "relationships"
                        ]
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/locations/origins": {
      "get": {
        "summary": "Fetch available origins",
        "tags": [
          "Quote"
        ],
        "description": "Fetch available origins",
        "operationId": "getLocationOrigins",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "Query to search locations",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "ID of location to query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "load_type",
            "in": "query",
            "description": "Load type for location",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "621",
                      "type": "nexus",
                      "attributes": {
                        "id": 621,
                        "name": "Gothenburg",
                        "latitude": 57.694253,
                        "longitude": 11.854048,
                        "modesOfTransport": [
                          "ocean"
                        ],
                        "countryName": "Sweden"
                      }
                    }
                  ],
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/nexus"
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/locations/destinations": {
      "get": {
        "summary": "Fetch available destinations",
        "tags": [
          "Quote"
        ],
        "description": "Fetch available destinations",
        "operationId": "getLocationDestinations",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "Query to search locations",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "ID of location to query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "load_type",
            "in": "query",
            "description": "Load type for location",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "626",
                      "type": "nexus",
                      "attributes": {
                        "id": 626,
                        "name": "Shanghai",
                        "latitude": 31.2231338,
                        "longitude": 120.9162975,
                        "modesOfTransport": [
                          "ocean"
                        ],
                        "countryName": "China"
                      }
                    }
                  ],
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/nexus"
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/oauth/token/info": {
      "get": {
        "summary": "Fetch information of current token",
        "tags": [
          "Authentication"
        ],
        "description": "Fetch information of current token",
        "operationId": "getTokenInfo",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "access_token": "0036022a1606aa2008c328471d243d559ed21ce228625d569ca9e945a72a40a9",
                  "token_type": "Bearer",
                  "scope": "public",
                  "created_at": 1620646139
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "access_token": {
                      "type": "string",
                      "description": "Token used to access this endpoint"
                    },
                    "token_type": {
                      "type": "string",
                      "description": "Type of the token (always Bearer)"
                    },
                    "scope": {
                      "type": "string",
                      "description": "OAuth scopes of the token."
                    },
                    "created_at": {
                      "type": "number",
                      "description": "Timestamp when token was created."
                    }
                  },
                  "required": [
                    "access_token",
                    "token_type",
                    "scope",
                    "created_at"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Invalid Credentials",
            "content": {
              "application/json": {
                "example": {
                  "error": "invalid_request",
                  "error_description": "The request is missing a required parameter, includes an unsupported parameter value, or is otherwise malformed."
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error code describing the encountered error."
                    },
                    "error_description": {
                      "type": "string",
                      "description": "Detailed description of the error occured."
                    }
                  },
                  "required": [
                    "error",
                    "error_description"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/offers": {
      "post": {
        "summary": "Create new offer",
        "tags": [
          "Offer"
        ],
        "description": "Create a new offer. To be able to download quotation results as a PDF, first the offer must be created with results that are to be included in the offer.\nCreating a new offer with the selected result IDs allows the backend system to generate a downloadable PDF for these results.\n",
        "operationId": "createOffer",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "a307f347-8c97-42ab-8e6d-69a23e272ca9",
                    "type": "offer",
                    "attributes": {
                      "id": "a307f347-8c97-42ab-8e6d-69a23e272ca9",
                      "url": "http://localhost:3000/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBdE1FIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--f78acac839fe27c56055a08f14061255c32e747b/offer.pdf?disposition=attachment"
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/offer"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "422": {
            "description": "unprocessable entity",
            "content": {
              "application/json": {
                "example": {
                  "error": "No results provided"
                },
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            }
          },
          "404": {
            "description": "results not found",
            "content": {
              "application/json": {
                "example": {
                  "error": "No results found"
                },
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resultIds": {
                    "description": "array of the ids of the results to be included in the offer",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "resultIds"
                ]
              }
            }
          }
        }
      }
    },
    "/v1/organization": {
      "get": {
        "summary": "Fetch current organization",
        "tags": [
          "Organization"
        ],
        "description": "Fetch information of the current organization, automatically detected by the\nrequester domain (referrer).\n\nCurrent organization is detected automatically based on the following hierachy:\n  1. Referrer domain as is, e.g. yourdemo.itsmycargo.shop\n  2. Slug as subdomain, e.g. yourdemo.lvh.me\n",
        "operationId": "getOrganization",
        "parameters": [
          {
            "name": "Referer",
            "in": "header",
            "description": "HTTP Referrer",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "cb0ffce1-ae0b-4ab8-abef-100cb38c9bb8",
                    "type": "organization",
                    "attributes": {
                      "slug": "test_128",
                      "name": "Freight Spedetion #128"
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/organization"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/v1/organizations": {
      "get": {
        "summary": "Fetch all organizations",
        "tags": [
          "Users"
        ],
        "description": "Fetch all organizations",
        "operationId": "getOrganizations",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [

                  ],
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/organization"
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Invalid Credentials"
          }
        }
      }
    },
    "/v1/organizations/{id}/countries": {
      "get": {
        "summary": "Fetch enabled countries for an organization",
        "tags": [
          "Users"
        ],
        "description": "Fetch enabled countries for an organization",
        "operationId": "getCountries",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "172",
                      "type": "country",
                      "attributes": {
                        "name": "Sweden",
                        "code": "SE",
                        "flag": "https://restcountries.eu/data/sek.svg"
                      }
                    }
                  ],
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/country"
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Invalid Credentials"
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/ports": {
      "get": {
        "summary": "Fetch list of ports",
        "tags": [
          "Ahoy"
        ],
        "description": "Fetch list of ports",
        "operationId": "getPorts",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "location_type",
            "in": "query",
            "description": "Location Type of request origin/destination",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "location_id",
            "in": "query",
            "description": "ID of selected location",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Text input for query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "670",
                      "type": "port",
                      "attributes": {
                        "id": 670,
                        "name": "Shanghai",
                        "hubType": "ocean"
                      }
                    }
                  ],
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "number"
                              },
                              "name": {
                                "type": "string"
                              },
                              "hubType": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "name",
                              "hubType"
                            ]
                          }
                        },
                        "required": [
                          "id",
                          "type",
                          "attributes"
                        ]
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/profile": {
      "get": {
        "summary": "Fetch client profile",
        "tags": [
          "Profiles"
        ],
        "description": "Retrieve user's profile. User's profile includes additional information besides email that are used usually to better display user information, has more detailed contact information etc.\n      User profile includes name (as first name, and last name) which can be used for display purposes.",
        "operationId": "getProfile",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "680b17f6-a5aa-424f-a7d9-3f6671d57235",
                    "type": "profile",
                    "attributes": {
                      "email": "john.doe.121@itsmycargo.test",
                      "firstName": "Guest",
                      "lastName": "User 121"
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/profile"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Invalid Credentials"
          }
        }
      },
      "patch": {
        "summary": "Update",
        "tags": [
          "Profiles"
        ],
        "description": "Update profile details.",
        "operationId": "updateProfile",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "c7cb3294-2809-44d5-a5ca-e7522d1f0ec8",
                    "type": "profile",
                    "attributes": {
                      "email": "john@example.com",
                      "firstName": "John",
                      "lastName": "Doe"
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "example": {
                  "error": [
                    "Email has already been taken"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "profile": {
                    "$ref": "#/components/schemas/profile"
                  }
                },
                "required": [
                  "profile"
                ]
              }
            }
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/queries": {
      "post": {
        "summary": "Create new query",
        "tags": [
          "Query"
        ],
        "description": "Create new query",
        "operationId": "createQuery",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation (Cargo Item)",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "2cbf8004-6262-4eee-b18c-d8529273e834",
                    "type": "query",
                    "attributes": {
                      "id": "2cbf8004-6262-4eee-b18c-d8529273e834",
                      "aggregated": false,
                      "loadType": "cargo_item",
                      "originName": "SEGOT",
                      "destinationName": "CNSHA"
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "originId": {
                    "type": "string",
                    "description": "The Carta ID of the origin point"
                  },
                  "destinationId": {
                    "type": "string",
                    "description": "The Carta ID of the destination point"
                  },
                  "loadType": {
                    "type": "string",
                    "description": "The load type of the query"
                  },
                  "items": {
                    "type": "array",
                    "items": {
                      "oneOf": [
                        {
                          "$ref": "#/components/schemas/item_lcl"
                        },
                        {
                          "$ref": "#/components/schemas/item_aggregated_lcl"
                        },
                        {
                          "$ref": "#/components/schemas/item_fcl"
                        }
                      ]
                    }
                  }
                },
                "required": [
                  "originId",
                  "destinationId",
                  "loadType",
                  "items"
                ]
              }
            }
          }
        }
      },
      "get": {
        "summary": "Fetch all queries",
        "tags": [
          "Query"
        ],
        "description": "Fetch all queries",
        "operationId": "getQueries",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "The attribute by which to sort the Queries",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "direction",
            "in": "query",
            "description": "The defining whether the sorting is ascending or descending",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page of result requested",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "The number of results requested per page",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "c9a5e44b-1d3a-49d7-8711-035071eb66a8",
                      "type": "query",
                      "attributes": {
                        "id": "c9a5e44b-1d3a-49d7-8711-035071eb66a8",
                        "aggregated": false,
                        "loadType": "cargo_item",
                        "originName": "aaaaa",
                        "destinationName": "aaaaa"
                      }
                    },
                    {
                      "id": "1bbcc38f-4079-4b99-91cd-96104f1622e7",
                      "type": "query",
                      "attributes": {
                        "id": "1bbcc38f-4079-4b99-91cd-96104f1622e7",
                        "aggregated": false,
                        "loadType": "cargo_item",
                        "originName": "bbbbb",
                        "destinationName": "bbbbb"
                      }
                    }
                  ],
                  "meta": {
                  },
                  "links": {
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/quotations": {
      "post": {
        "summary": "Create new quotation",
        "tags": [
          "Quote"
        ],
        "description": "Create new quotation",
        "operationId": "createQuotation",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "49038b31-48d1-441f-a18d-dc722aa38d8a",
                    "type": "query",
                    "attributes": {
                      "completed": true,
                      "selectedDate": "2021-05-10T12:29:16.410Z",
                      "loadType": "container",
                      "user": {
                        "data": {
                          "id": "0abf3dde-cab9-4064-8f48-8ba5ea5ada38",
                          "type": "user",
                          "attributes": {
                            "email": "john.doe.181@itsmycargo.test",
                            "organizationId": "6928bf47-a2db-4c7d-8754-9e5e6dbdbc2d",
                            "firstName": "Guest",
                            "lastName": "User 181",
                            "phone": "081 9847079",
                            "companyName": "Guest Company 181",
                            "role": null
                          }
                        },
                        "meta": {
                        },
                        "links": {
                        }
                      },
                      "origin": {
                        "data": {
                          "id": "669",
                          "type": "nexus",
                          "attributes": {
                            "id": 669,
                            "name": "Gothenburg",
                            "latitude": 57.694253,
                            "longitude": 11.854048,
                            "modesOfTransport": [
                              "ocean"
                            ],
                            "countryName": "Sweden"
                          }
                        },
                        "meta": {
                        },
                        "links": {
                        }
                      },
                      "destination": {
                        "data": {
                          "id": "666",
                          "type": "nexus",
                          "attributes": {
                            "id": 666,
                            "name": "Shanghai",
                            "latitude": 31.2231338,
                            "longitude": 120.9162975,
                            "modesOfTransport": [
                              "ocean",
                              "ocean"
                            ],
                            "countryName": "China"
                          }
                        },
                        "meta": {
                        },
                        "links": {
                        }
                      },
                      "containers": {
                        "data": [
                          {
                            "id": "9c04eb28-775c-44a0-b4a8-224189e69344",
                            "type": "fclCargoUnit",
                            "attributes": {
                              "shipmentId": "49038b31-48d1-441f-a18d-dc722aa38d8a",
                              "sizeClass": "fcl_20",
                              "weightClass": null,
                              "payloadInKg": 1.0,
                              "tareWeight": null,
                              "grossWeight": null,
                              "dangerousGoods": false,
                              "cargoClass": "fcl_20",
                              "hsCodes": [

                              ],
                              "customsText": "",
                              "quantity": 1,
                              "unitPrice": {
                              },
                              "contents": "",
                              "equipmentType": "fcl_20"
                            }
                          }
                        ],
                        "meta": {
                        },
                        "links": {
                        }
                      },
                      "cargoItems": {
                        "data": [

                        ],
                        "meta": {
                        },
                        "links": {
                        }
                      },
                      "tenders": {
                        "data": [
                          {
                            "id": "7b9e4ea2-eb48-4294-82b8-4ff525635ecd",
                            "type": "result",
                            "attributes": {
                              "remarks": [

                              ],
                              "carrier": "imc",
                              "modeOfTransport": "ocean",
                              "id": "7b9e4ea2-eb48-4294-82b8-4ff525635ecd",
                              "origin": "Gothenburg",
                              "destination": "Shanghai",
                              "serviceLevel": "standard",
                              "total": {
                                "currency": "EUR",
                                "amount": "250.0"
                              },
                              "quotationId": "49038b31-48d1-441f-a18d-dc722aa38d8a",
                              "transshipment": null,
                              "estimated": false,
                              "validUntil": "2021-11-10T00:00:00.000Z",
                              "pickupTruckType": "",
                              "deliveryTruckType": "",
                              "pickupCarrier": null,
                              "deliveryCarrier": null,
                              "pickupService": null,
                              "deliveryService": null,
                              "exchangeRates": {
                              }
                            }
                          }
                        ],
                        "meta": {
                        },
                        "links": {
                        }
                      }
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "organization_id": {
                    "type": "string"
                  },
                  "quote": {
                    "type": "object",
                    "properties": {
                      "selected_date": {
                        "type": "string"
                      },
                      "organization_id": {
                        "type": "string"
                      },
                      "user_id": {
                        "type": "string"
                      },
                      "origin": {
                        "type": "object",
                        "oneOf": [
                          {
                            "$ref": "#/components/schemas/locationV1Nexus"
                          },
                          {
                            "$ref": "#/components/schemas/locationV1Trucking"
                          }
                        ]
                      },
                      "destination": {
                        "type": "object",
                        "oneOf": [
                          {
                            "$ref": "#/components/schemas/locationV1Nexus"
                          },
                          {
                            "$ref": "#/components/schemas/locationV1Trucking"
                          }
                        ]
                      }
                    },
                    "required": [
                      "selected_date",
                      "organization_id",
                      "user_id",
                      "origin",
                      "destination"
                    ]
                  },
                  "shipment_info": {
                    "type": "object",
                    "properties": {
                      "cargo_item_attributes": {
                        "type": "object",
                        "properties": {
                        }
                      },
                      "containers_attributes": {
                        "type": "object",
                        "properties": {
                        }
                      },
                      "trucking_info": {
                        "type": "object",
                        "properties": {
                        }
                      }
                    },
                    "required": [
                      "cargo_item_attributes",
                      "containers_attributes",
                      "trucking_info"
                    ]
                  }
                },
                "required": [
                  "organization_id",
                  "quote",
                  "shipment_info"
                ]
              }
            }
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/quotations/{id}": {
      "get": {
        "summary": "Fetch existing quotation",
        "tags": [
          "Quote"
        ],
        "description": "Fetch existing quotation",
        "operationId": "getQuotation",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Quotation ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organization_id",
            "in": "query",
            "description": "The current organization ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "abb7b772-32e0-4fd8-8f69-54ece2da7e8a",
                    "type": "query",
                    "attributes": {
                      "completed": true,
                      "selectedDate": "2021-05-11T00:00:00.000Z",
                      "loadType": "cargo_item",
                      "user": {
                        "data": {
                          "id": "943cec99-57fc-4b77-803c-ae3cc3e9273c",
                          "type": "user",
                          "attributes": {
                            "email": "john.doe.184@itsmycargo.test",
                            "organizationId": "f04a41f1-8cc0-4e79-b6ab-400b1f5186fa",
                            "firstName": "Guest",
                            "lastName": "User 184",
                            "phone": "081 9847079",
                            "companyName": "Guest Company 184",
                            "role": null
                          }
                        },
                        "meta": {
                        },
                        "links": {
                        }
                      },
                      "origin": {
                        "data": {
                          "id": "28",
                          "type": "address",
                          "attributes": {
                            "longitude": 11.854048,
                            "latitude": 57.694253,
                            "geocodedAddress": "438 80 Landvetter, Sweden",
                            "street": null,
                            "city": "",
                            "country": "Sweden",
                            "postalCode": "",
                            "name": "438 80 Landvetter, Sweden"
                          }
                        },
                        "meta": {
                        },
                        "links": {
                        }
                      },
                      "destination": {
                        "data": {
                          "id": "0",
                          "type": "address",
                          "attributes": {
                            "longitude": 121.4867159,
                            "latitude": 31.232014,
                            "geocodedAddress": "88 Henan Middle Road, Shanghai",
                            "street": null,
                            "city": "Shanghai",
                            "country": "China",
                            "postalCode": "20001",
                            "name": "88 Henan Middle Road, Shanghai"
                          }
                        },
                        "meta": {
                        },
                        "links": {
                        }
                      },
                      "containers": {
                        "data": [

                        ],
                        "meta": {
                        },
                        "links": {
                        }
                      },
                      "cargoItems": {
                        "data": [
                          {
                            "id": "781ca413-b527-42ab-aa26-cb025cdfe0cc",
                            "type": "lclCargoUnit",
                            "attributes": {
                              "payloadInKg": "1000.0",
                              "length": "100.0",
                              "width": "100.0",
                              "height": "100.0",
                              "dangerousGoods": false,
                              "cargoClass": "lcl",
                              "contents": "",
                              "hsCodes": [

                              ],
                              "cargoItemTypeId": null,
                              "customsText": "",
                              "chargeableWeight": "1000.0",
                              "stackable": true,
                              "quantity": 1,
                              "unitPrice": {
                              },
                              "cargoItemType": {
                                "id": null,
                                "description": "Pallet"
                              }
                            }
                          }
                        ],
                        "meta": {
                        },
                        "links": {
                        }
                      },
                      "tenders": {
                        "data": [
                          {
                            "id": "5922020c-0259-4fd1-b01f-c47ca4335650",
                            "type": "result",
                            "attributes": {
                              "remarks": [

                              ],
                              "carrier": "MSC",
                              "modeOfTransport": "ocean",
                              "id": "5922020c-0259-4fd1-b01f-c47ca4335650",
                              "origin": "438 80 Landvetter, Sweden",
                              "destination": "88 Henan Middle Road, Shanghai",
                              "serviceLevel": "standard",
                              "total": {
                                "currency": "EUR",
                                "amount": "180.0"
                              },
                              "quotationId": "abb7b772-32e0-4fd8-8f69-54ece2da7e8a",
                              "transshipment": null,
                              "estimated": false,
                              "validUntil": "2021-05-24T11:29:18.619Z",
                              "pickupTruckType": "",
                              "deliveryTruckType": "",
                              "pickupCarrier": "SACO",
                              "deliveryCarrier": "SACO",
                              "pickupService": "standard",
                              "deliveryService": "standard",
                              "exchangeRates": {
                                "usd": "0.83",
                                "base": "EUR"
                              }
                            }
                          }
                        ],
                        "meta": {
                        },
                        "links": {
                        }
                      }
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/quotations/{id}/download": {
      "post": {
        "summary": "Download quotation as PDF",
        "tags": [
          "Quote"
        ],
        "description": "Download quotation as PDF",
        "operationId": "downloadQuotation",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Quotation ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organization_id",
            "in": "query",
            "description": "The current organization ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "format",
            "in": "query",
            "description": "The desired download format (pdf/xlsx)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "43ff6334-85e8-4c2c-bfe5-e6c15f202ae4",
                    "type": "file",
                    "attributes": {
                      "url": "http://localhost:3000/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBbmNGIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--958a6e7a46ca3bf1d69d76948eadfc68c7f1c2d4/offer_43ff6334-85e8-4c2c-bfe5-e6c15f202ae4.pdf?disposition=attachment"
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "tenders": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "tenders"
                ]
              }
            }
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/result_sets/{result_set_id}/results": {
      "get": {
        "summary": "Fetch Results for the Result Set",
        "tags": [
          "Results"
        ],
        "description": "Fetch Results for the Result Set",
        "operationId": "getResults",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "result_set_id",
            "in": "path",
            "description": "ResultSet ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "d45ef6bb-4bb5-4a6d-878c-57b78c3d9ceb",
                      "type": "restful",
                      "attributes": {
                        "id": "d45ef6bb-4bb5-4a6d-878c-57b78c3d9ceb"
                      }
                    }
                  ],
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/restfulResponse"
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/quotations/{quotation_id}/schedules/{id}": {
      "get": {
        "summary": "Fetch available schedules",
        "tags": [
          "Quote"
        ],
        "description": "Fetch available schedules",
        "operationId": "getSchedule",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quotation_id",
            "in": "path",
            "description": "The quotation ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The quotation ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "140",
                      "type": "trip",
                      "attributes": {
                        "closing": "2021-05-11",
                        "start": "2021-05-15",
                        "end": "2021-06-14",
                        "service": "slowly",
                        "carrier": "Hapag Lloyd",
                        "vessel": null,
                        "voyageCode": null,
                        "tenderId": "09743331-578c-4c70-9a35-3dd2c51b8de1"
                      }
                    },
                    {
                      "id": "141",
                      "type": "trip",
                      "attributes": {
                        "closing": "2021-05-16",
                        "start": "2021-05-20",
                        "end": "2021-06-19",
                        "service": "slowly",
                        "carrier": "Hapag Lloyd",
                        "vessel": null,
                        "voyageCode": null,
                        "tenderId": "09743331-578c-4c70-9a35-3dd2c51b8de1"
                      }
                    }
                  ],
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "carrier": {
                                "type": "string"
                              },
                              "closing": {
                                "type": "string"
                              },
                              "end": {
                                "type": "string"
                              },
                              "service": {
                                "type": "string"
                              },
                              "start": {
                                "type": "string"
                              },
                              "tenderId": {
                                "type": "string"
                              },
                              "vessel": {
                                "type": "string",
                                "nullable": true
                              },
                              "voyageCode": {
                                "type": "string",
                                "nullable": true
                              }
                            },
                            "required": [
                              "carrier",
                              "closing",
                              "end",
                              "service",
                              "start",
                              "tenderId",
                              "vessel",
                              "voyageCode"
                            ]
                          }
                        },
                        "required": [
                          "id",
                          "type",
                          "attributes"
                        ]
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/itineraries/{id}/schedules/enabled": {
      "get": {
        "summary": "Fetch status of schedules",
        "tags": [
          "Quote"
        ],
        "description": "Fetch status of schedules",
        "operationId": "getScheduleEnabled",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The itinerary ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "enabled": false
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "enabled": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "enabled"
                      ]
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/scope": {
      "get": {
        "summary": "Fetch Scope for the Organization",
        "tags": [
          "Scope"
        ],
        "description": "Fetch Scope for the Organization",
        "operationId": "getScope",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "41e0c3eb-67ec-4ee3-9f27-a24e81bda5b6",
                    "type": "scope",
                    "attributes": {
                      "links": {
                        "about": "",
                        "terms": "",
                        "legal": "",
                        "privacy": ""
                      },
                      "id": "518da5ee-dac7-4620-97f8-d7e552b08005"
                    }
                  },
                  "links": {
                    "about": "",
                    "terms": "",
                    "legal": "",
                    "privacy": ""
                  },
                  "meta": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/scope"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/me/settings": {
      "get": {
        "summary": "Fetch user settings",
        "tags": [
          "Users"
        ],
        "description": "Fetch current settings for the current user. Settings contains information about user's preferred language and\nlocale.\n",
        "operationId": "getSettings",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "150feb89-d9bc-4879-a828-700ccd846231",
                    "type": "setting",
                    "attributes": {
                      "language": "en-GB",
                      "locale": "en-GB"
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/settings"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Invalid Credentials"
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/trucking_availabilities": {
      "get": {
        "summary": "Fetch Available Truckings",
        "tags": [
          "Quote"
        ],
        "description": "Fetch Available Truckings",
        "operationId": "getTruckingAvailabilities",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lat",
            "in": "query",
            "description": "Latitude",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lng",
            "in": "query",
            "description": "Longitude",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "load_type",
            "in": "query",
            "description": "Load type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organization_id",
            "in": "query",
            "description": "Organiztio nID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "client",
            "in": "query",
            "description": "The client id of the query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "target",
            "in": "query",
            "description": "Target",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "truckTypes": [
                    "default"
                  ],
                  "truckingAvailable": true
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "truckTypes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "truckingAvailable": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "truckTypes",
                    "truckingAvailable"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/trucking_counterparts": {
      "get": {
        "summary": "Fetch counterparts fgor trucking",
        "tags": [
          "Quote"
        ],
        "description": "Fetch counterparts fgor trucking",
        "operationId": "getTruckingCounterparts",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lat",
            "in": "query",
            "description": "Latitude",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lng",
            "in": "query",
            "description": "Longitude",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "load_type",
            "in": "query",
            "description": "Load type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organization_id",
            "in": "query",
            "description": "Organization ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "client",
            "in": "query",
            "description": "The client id of the query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "target",
            "in": "query",
            "description": "Target",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "countryCodes": [

                  ],
                  "truckTypes": [

                  ],
                  "truckingAvailable": false
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "countryCodes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "truckTypes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "truckingAvailable": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "countryCodes",
                    "truckTypes",
                    "truckingAvailable"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/trucking_countries": {
      "get": {
        "summary": "Fetch enabled countries for organization",
        "tags": [
          "Trucking"
        ],
        "description": "Fetch enabled countries for organization",
        "operationId": "getTruckingCountries",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "load_type",
            "in": "query",
            "description": "Load Type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "location_type",
            "in": "query",
            "description": "Location Type",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "202",
                      "type": "country",
                      "attributes": {
                        "name": "Sweden",
                        "code": "SE",
                        "flag": "https://restcountries.eu/data/sek.svg"
                      }
                    }
                  ],
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/country"
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Invalid Credentials"
          }
        }
      }
    },
    "/v1/uploads": {
      "post": {
        "summary": "Create a new upload",
        "tags": [
          "Upload"
        ],
        "description": "Create a new upload",
        "operationId": "createUpload",
        "security": [
          {
            "bearerAuth": [

            ]
          }
        ],
        "parameters": [

        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "example": {
                  "message": "File created."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request",
            "content": {
              "application/json": {
                "example": {
                  "message": "Unauthorized Request"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "message": "param is missing or the value is empty: json_data",
                  "status": "bad_request",
                  "code": 400
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "jsonData": {
                    "type": "string",
                    "description": "Provide the data to upload as `application/json`. Serialize the payload as a value for the key `jsonData` (case invariant). Example cURL request:\n```\ncurl --location --request POST 'https://api.itsmycargo.com/v1/uploads' \\\n   --header 'Authorization: Bearer aa0c9a1d-7b50-4c14-ba8e-21a329877ddd' \\\n   --header 'Content-Type: application/json' \\\n   --data-raw '{\n   \"jsonData\": \"{\\\"foo\\\":123}\"\n   }'\n```"
                  }
                }
              }
            }
          },
          "required": true
        }
      }
    },
    "/v1/me": {
      "get": {
        "summary": "Fetch information of current user",
        "tags": [
          "Users"
        ],
        "description": "Fetch information of current user",
        "operationId": "getCurrentUser",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "d3fd04d1-9b69-4da9-8e54-e6b44cd1f0b6",
                    "type": "user",
                    "attributes": {
                      "email": "john.doe.7@itsmycargo.test",
                      "organizationId": "0c81dcd4-6be5-4f66-8e0b-6d0f79fa9dc1",
                      "firstName": "Guest",
                      "lastName": "User 7",
                      "phone": "081 9847079",
                      "companyName": "Guest Company 7",
                      "role": null
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "attributes": {
                          "type": "object",
                          "properties": {
                            "email": {
                              "type": "string",
                              "description": "User's primary email address. This is\n                             validated address that can be used for reaching out."
                            },
                            "organizationId": {
                              "description": "If current user is client, this is the\n                             organization user account is linked with.",
                              "type": "string",
                              "nullable": true
                            },
                            "firstName": {
                              "description": "User's first name, usually given name.",
                              "type": "string"
                            },
                            "lastName": {
                              "description": "User's last name, usually family name.",
                              "type": "string"
                            },
                            "phone": {
                              "description": "User's phone number if given. This generic\n                             information that is not validated or structured.",
                              "type": "string",
                              "nullable": true
                            },
                            "companyName": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "email",
                            "organizationId",
                            "firstName",
                            "lastName",
                            "phone",
                            "companyName"
                          ]
                        }
                      },
                      "required": [
                        "id",
                        "type",
                        "attributes"
                      ]
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Invalid Credentials"
          }
        }
      }
    }
  }
}