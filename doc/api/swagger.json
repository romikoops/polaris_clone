{
  "openapi": "3.0.1",
  "info": {
    "title": "Polaris API",
    "description": "ItsMyCargo Backend API",
    "termsOfService": "https://www.itsmycargo.com/terms",
    "contact": {
      "name": "API Support",
      "url": "https://support.itsmycargo.com",
      "email": "support@itsmycargo.com"
    },
    "version": "2021-11-24"
  },
  "tags": [
    {
      "name": "Ahoy",
      "description": "Ahoy"
    },
    {
      "name": "Authentication",
      "description": "Endpoints related to the current user and authentication."
    },
    {
      "name": "CargoUnits",
      "description": "CargoUnits"
    },
    {
      "name": "Clients",
      "description": "Clients"
    },
    {
      "name": "Dashboard",
      "description": "Dashboard"
    },
    {
      "name": "Groups",
      "description": "Groups"
    },
    {
      "name": "Query",
      "description": "Query"
    },
    {
      "name": "Quote",
      "description": "Quote"
    },
    {
      "name": "Results",
      "description": "Results"
    },
    {
      "name": "Trucking",
      "description": "Trucking"
    },
    {
      "name": "Users",
      "description": "Users"
    }
  ],
  "components": {
    "schemas": {
      "errors": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "object",
            "properties": {
              "message": {
                "description": "error message",
                "type": "string"
              }
            },
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      "company": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the company",
            "type": "string"
          },
          "type": {
            "description": "Generic type of the company",
            "type": "string"
          },
          "attributes": {
            "id": {
              "description": "Unique identifier of the company",
              "type": "string"
            },
            "email": {
              "description": "email of the company",
              "type": "string"
            },
            "name": {
              "description": "name of the company",
              "type": "string"
            },
            "payment_terms": {
              "description": "payment terms set out by the company",
              "type": "string"
            },
            "phone": {
              "description": "phone number of the company",
              "type": "string"
            },
            "vatNumber": {
              "description": "VAT number of the company",
              "type": "string"
            }
          }
        }
      },
      "contact": {
        "type": "object",
        "properties": {
          "address_line_1": {
            "description": "Address line 1",
            "nullable": true,
            "type": "string"
          },
          "address_line_2": {
            "description": "address line 2",
            "nullable": true,
            "type": "string"
          },
          "address_line_3": {
            "description": "address line 3",
            "nullable": true,
            "type": "string"
          },
          "city": {
            "description": "City",
            "nullable": true,
            "type": "string"
          },
          "company_name": {
            "description": "Company name",
            "nullable": true,
            "type": "string"
          },
          "country_code": {
            "description": "Country code",
            "nullable": true,
            "type": "string"
          },
          "email": {
            "description": "Email address",
            "type": "string"
          },
          "function": {
            "description": "Function",
            "nullable": true,
            "type": "string"
          },
          "geocoded_address": {
            "description": "Geocoded address",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "Name",
            "nullable": true,
            "type": "string"
          },
          "phone": {
            "description": "Phone",
            "nullable": true,
            "type": "string"
          },
          "point": {
            "description": "Point",
            "nullable": true,
            "type": "string"
          },
          "postal_code": {
            "description": "Postal code",
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "email"
        ]
      },
      "shipment_request": {
        "type": "object",
        "properties": {
          "result_id": {
            "description": "Result ID",
            "type": "string"
          },
          "company_id": {
            "description": "Company ID",
            "type": "string"
          },
          "client_id": {
            "description": "Client ID",
            "type": "string"
          },
          "with_insurance": {
            "description": "Any insurance on the cargo",
            "type": "boolean",
            "nullable": true
          },
          "with_customs_handling": {
            "description": "Any customs handling service needed",
            "type": "boolean",
            "nullable": true
          },
          "status": {
            "description": "Status of the shipment request",
            "type": "string",
            "nullable": true
          },
          "preferred_voyage": {
            "description": "Preferred voyage",
            "type": "string",
            "nullable": true
          },
          "notes": {
            "description": "Notes about the shipment request",
            "type": "string",
            "nullable": true
          },
          "commercial_value": {
            "description": "Commercial value with integer and currency",
            "type": "object",
            "nullable": true
          },
          "contacts_attributes": {
            "description": "Array of contact attributes as objects",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/contact"
            }
          }
        }
      },
      "shipment_request_params": {
        "type": "object",
        "properties": {
          "withInsurance": {
            "type": "boolean",
            "nullable": true,
            "description": "Any insurance on the cargo"
          },
          "withCustomsHandling": {
            "type": "boolean",
            "nullable": true,
            "description": "Any customs handling service needed"
          },
          "preferredVoyage": {
            "type": "string",
            "nullable": true,
            "description": "Preferred voyage"
          },
          "notes": {
            "type": "string",
            "nullable": true,
            "description": "notes about the shipment request"
          },
          "commercialValueCents": {
            "nullable": true,
            "type": "integer",
            "description": "Commercial value as an integer expressed as cent or other equivalent base unit"
          },
          "commercialValueCurrency": {
            "nullable": true,
            "type": "string",
            "description": "Commercial value's currency in three letter ISO format"
          },
          "contactsAttributes": {
            "type": "array",
            "description": "Contact info for client",
            "items": {
              "$ref": "#/components/schemas/contact"
            }
          }
        },
        "required": [
          "withInsurance",
          "withCustomsHandling",
          "preferredVoyage",
          "notes",
          "commercialValueCents",
          "commercialValueCurrency",
          "contactsAttributes"
        ]
      },
      "cargo_item_type": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the given cargo item type",
            "type": "string"
          },
          "type": {
            "description": "Generic type of the cargo item",
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "width": {
                "description": "Width of the given cargo item type",
                "type": "string",
                "nullable": true,
                "deprecated": true
              },
              "length": {
                "description": "Length of the given cargo item type",
                "type": "string",
                "nullable": true,
                "deprecated": true
              },
              "description": {
                "description": "Descriptive information of the cargo item type",
                "type": "string"
              }
            },
            "required": [
              "width",
              "length"
            ]
          }
        },
        "required": [
          "id",
          "type",
          "attributes"
        ]
      },
      "carrier": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the given Carrier",
            "type": "string"
          },
          "type": {
            "description": "Generic type of the Carrier",
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "id": {
                "description": "The ID of the Carrier record",
                "type": "string"
              },
              "name": {
                "description": "The Carrier's name",
                "type": "string"
              },
              "code": {
                "description": "The Carrier's code. Preferably SCAC or IATA but customs code are allowed.",
                "type": "string"
              },
              "logo": {
                "description": "URL for accesing the logo of the Carrier",
                "type": "string",
                "nullable": true
              }
            },
            "required": [
              "id",
              "name",
              "code",
              "logo"
            ]
          }
        },
        "required": [
          "id",
          "type",
          "attributes"
        ]
      },
      "client": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "company_name": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "house_number": {
            "type": "string"
          },
          "street": {
            "type": "string"
          },
          "postal_code": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "group_id": {
            "type": "string"
          }
        },
        "required": [
          "email",
          "first_name",
          "last_name",
          "company_name",
          "phone",
          "house_number",
          "street",
          "postal_code",
          "country",
          "group_id"
        ]
      },
      "charge": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Charge ID",
            "type": "string"
          },
          "lineItemId": {
            "description": "Line Item",
            "type": "string"
          },
          "tenderId": {
            "description": "Tender",
            "type": "string"
          },
          "chargeCategoryId": {
            "description": "Category of the charge",
            "type": "integer"
          },
          "description": {
            "description": "Description",
            "type": "string"
          },
          "value": {
            "$ref": "#/components/schemas/money"
          },
          "originalValue": {
            "$ref": "#/components/schemas/money"
          },
          "order": {
            "description": "Order of the charges",
            "type": "integer"
          },
          "section": {
            "description": "Section of charge",
            "type": "string"
          },
          "level": {
            "description": "Nesting level",
            "type": "integer"
          },
          "rate": {
            "description": "The rate at which the LineItem was charged",
            "type": "string"
          },
          "rateFactor": {
            "description": "The value (with unit) that was applied to the Rate to achieve the final price of the LineItem",
            "type": "string"
          }
        },
        "required": [
          "id",
          "lineItemId",
          "tenderId",
          "chargeCategoryId",
          "description",
          "value",
          "originalValue",
          "order",
          "section",
          "level"
        ]
      },
      "commodityInfo": {
        "type": "object",
        "properties": {
          "imoClass": {
            "type": "string",
            "enum": [
              "0",
              "1",
              "1.1",
              "1.2",
              "1.3",
              "1.4",
              "1.5",
              "1.6",
              "2",
              "2.1",
              "2.2",
              "2.3",
              "3",
              "4",
              "4.1",
              "4.2",
              "4.3",
              "5",
              "5.1",
              "5.2",
              "6",
              "6.1",
              "6.2",
              "7",
              "7.1",
              "7.2",
              "7.3",
              "7.4",
              "8",
              "9"
            ],
            "nullable": true,
            "description": "Defines the standard IMO class for the dangerous goods that this cargo item might contain. IMO Class is defined as Class and possible sub-class, where class defines top-level category of type of dangerous goods, and sub-class defines more detailed separation of different dangerous goods.\n\nTo see list of possible classes and sub-classes, please see for example https://www.searates.com/reference/imo/\n\nIf the cargo item is known to contain dangerous goods, but the specific class is unknown, please use `0` as IMO class, which is used internally for unknown dangerous goods class.\nIf the cargo item is known to contain no dangerous goods, set this field as `null`.\n"
          },
          "description": {
            "type": "string",
            "description": "The description of the IMO Class/ HSCode chosen"
          },
          "hsCode": {
            "type": "string",
            "nullable": true,
            "description": "The Harmonized Commodity Description and Coding System, also known as the Harmonized System of tariff nomenclature is an internationally standardized system of names and numbers to classify traded products.\nThis code is is used to identify the type of cargo being shipped as it can affect the pricing and routes available\n"
          }
        },
        "required": [
          "description",
          "hsCode",
          "imoClass"
        ]
      },
      "country": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Country ID",
            "type": "string"
          },
          "type": {
            "description": "Country Type",
            "type": "string"
          },
          "attributes": {
            "description": "Country Attributes",
            "type": "object",
            "properties": {
              "name": {
                "description": "Name of the country",
                "type": "string"
              },
              "code": {
                "description": "Country code",
                "type": "string"
              },
              "flag": {
                "description": "Flag of the country",
                "type": "string"
              }
            },
            "required": [
              "name",
              "code",
              "flag"
            ]
          }
        },
        "required": [
          "id",
          "type",
          "attributes"
        ]
      },
      "group": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Group ID",
            "type": "string"
          },
          "type": {
            "description": "Type of group",
            "type": "string"
          },
          "attributes": {
            "description": "Attributes of group",
            "type": "object",
            "properties": {
              "id": {
                "description": "ID of attributes",
                "type": "string"
              },
              "name": {
                "description": "Name of the group",
                "type": "string"
              }
            },
            "required": [
              "id",
              "name"
            ]
          }
        },
        "required": [
          "id",
          "type",
          "attributes"
        ]
      },
      "item": {
        "type": "object",
        "properties": {
          "cargoClass": {
            "description": "Cargo classification code",
            "type": "string",
            "enum": [
              "lcl",
              "aggregated_lcl",
              "fcl_10",
              "fcl_20",
              "fcl_20_ot",
              "fcl_20_rf",
              "fcl_20_frs",
              "fcl_20_frw",
              "fcl_40",
              "fcl_40_hq",
              "fcl_40_ot",
              "fcl_40_rf",
              "fcl_40_hq_rf",
              "fcl_40_frs",
              "fcl_40_frw",
              "fcl_45",
              "fcl_45_hq",
              "fcl_45_rf"
            ]
          },
          "stackable": {
            "description": "If cargo item is stackable or not",
            "type": "boolean"
          },
          "quantity": {
            "description": "Quantity",
            "type": "integer"
          },
          "length": {
            "description": "Length of the item expressed as a decimal on the centimeter (cm) scale",
            "type": "number"
          },
          "width": {
            "description": "Width of the item expressed as a decimal on the centimeter (cm) scale",
            "type": "number"
          },
          "height": {
            "description": "Height of the item expressed as a decimal on the centimeter (cm) scale",
            "type": "number"
          },
          "weight": {
            "description": "Weight of the item expressed as a decimal on the kilogram (kg) scale",
            "type": "number"
          },
          "volume": {
            "description": "Volume of the item expressed as a decimal on the cubic meter (m3) scale",
            "type": "number"
          },
          "commodities": {
            "description": "Commodity codes of the contents",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commodityInfo"
            }
          }
        },
        "required": [
          "stackable",
          "colliType",
          "quantity",
          "length",
          "width",
          "height",
          "weight",
          "commodities"
        ]
      },
      "item_lcl": {
        "type": "object",
        "properties": {
          "cargoClass": {
            "description": "Cargo classification code",
            "type": "string",
            "enum": [
              "lcl"
            ]
          },
          "stackable": {
            "description": "If cargo item is stackable or not",
            "type": "boolean"
          },
          "colliType": {
            "description": "Colli Type: The type of container the items are packed in. One of a preset list",
            "type": "string",
            "enum": [
              "container",
              "barrel",
              "bottle",
              "carton",
              "case",
              "crate",
              "drum",
              "package",
              "pallet",
              "roll",
              "skid",
              "stack",
              "room_temp_reefer",
              "low_temp_reefer"
            ]
          },
          "quantity": {
            "description": "Quantity",
            "type": "integer"
          },
          "length": {
            "description": "Length of the item expressed as a decimal on the centimeter (cm) scale",
            "type": "number"
          },
          "width": {
            "description": "Width of the item expressed as a decimal on the centimeter (cm) scale",
            "type": "number"
          },
          "height": {
            "description": "Height of the item expressed as a decimal on the centimeter (cm) scale",
            "type": "number"
          },
          "weight": {
            "description": "Weight of the item expressed as a decimal on the kilogram (kg) scale",
            "type": "number"
          },
          "commodities": {
            "description": "Commodity codes of the contents",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commodityInfo"
            }
          }
        },
        "required": [
          "stackable",
          "colliType",
          "quantity",
          "length",
          "width",
          "height",
          "weight",
          "commodities",
          "cargoClass"
        ]
      },
      "item_aggregated_lcl": {
        "type": "object",
        "properties": {
          "cargoClass": {
            "description": "Cargo classification code",
            "type": "string",
            "enum": [
              "aggregated_lcl"
            ]
          },
          "stackable": {
            "description": "Aggregated Cargo Item's are always stackable so this property is not required",
            "type": "boolean",
            "nullable": true
          },
          "quantity": {
            "description": "Aggregated Cargo Item's have no defined quantity so this property is null",
            "type": "integer",
            "nullable": true
          },
          "length": {
            "description": "Aggregated Cargo Item's have no defined length so this property is null",
            "type": "number",
            "nullable": true
          },
          "width": {
            "description": "Aggregated Cargo Item's have no defined width so this property is null",
            "type": "number",
            "nullable": true
          },
          "height": {
            "description": "Aggregated Cargo Item's have no defined height so this property is null",
            "type": "number",
            "nullable": true
          },
          "weight": {
            "description": "Weight of the item expressed as a decimal on the kilogram (kg) scale",
            "type": "number"
          },
          "volume": {
            "description": "Volume of the item expressed as a decimal on the cubic meter (m3) scale",
            "type": "number"
          },
          "commodities": {
            "description": "Commodity codes of the contents",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commodityInfo"
            }
          }
        },
        "required": [
          "volume",
          "weight",
          "commodities",
          "cargoClass"
        ]
      },
      "item_fcl": {
        "type": "object",
        "properties": {
          "cargoClass": {
            "description": "Container classification code",
            "type": "string",
            "enum": [
              "fcl_10",
              "fcl_20",
              "fcl_20_ot",
              "fcl_20_rf",
              "fcl_20_frs",
              "fcl_20_frw",
              "fcl_40",
              "fcl_40_hq",
              "fcl_40_ot",
              "fcl_40_rf",
              "fcl_40_hq_rf",
              "fcl_40_frs",
              "fcl_40_frw",
              "fcl_45",
              "fcl_45_hq",
              "fcl_45_rf"
            ]
          },
          "stackable": {
            "description": "If cargo item is stackable or not: N/A for FCL",
            "type": "boolean"
          },
          "quantity": {
            "description": "Quantity",
            "type": "integer"
          },
          "length": {
            "description": "Containers have no defined length so this property is null",
            "type": "integer",
            "nullable": true
          },
          "width": {
            "description": "Containers have no defined width so this property is null",
            "type": "integer",
            "nullable": true
          },
          "height": {
            "description": "Containers have no defined height so this property is null",
            "type": "integer",
            "nullable": true
          },
          "weight": {
            "description": "Weight of the item expressed as a decimal on the kilogram (kg) scale",
            "type": "integer"
          },
          "volume": {
            "description": "Containers have no defined dimensions so this property is null",
            "type": "integer"
          },
          "commodities": {
            "description": "Commodity codes of the contents",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commodityInfo"
            }
          }
        },
        "required": [
          "stackable",
          "colliType",
          "quantity",
          "weight",
          "commodities",
          "cargoClass"
        ]
      },
      "item_response": {
        "type": "object",
        "properties": {
          "attributes": {
            "type": "object",
            "properties": {
              "cargoClass": {
                "description": "Cargo classification code",
                "type": "string",
                "enum": [
                  "lcl",
                  "aggregated_lcl",
                  "fcl_10",
                  "fcl_20",
                  "fcl_20_ot",
                  "fcl_20_rf",
                  "fcl_20_frs",
                  "fcl_20_frw",
                  "fcl_40",
                  "fcl_40_hq",
                  "fcl_40_ot",
                  "fcl_40_rf",
                  "fcl_40_hq_rf",
                  "fcl_40_frs",
                  "fcl_40_frw",
                  "fcl_45",
                  "fcl_45_hq",
                  "fcl_45_rf"
                ]
              },
              "stackable": {
                "description": "If cargo item is stackable or not",
                "type": "boolean"
              },
              "quantity": {
                "description": "Quantity",
                "type": "integer"
              },
              "length": {
                "description": "Length of the item expressed as a decimal on the centimeter (cm) scale",
                "type": "number"
              },
              "width": {
                "description": "Width of the item expressed as a decimal on the centimeter (cm) scale",
                "type": "number"
              },
              "height": {
                "description": "Height of the item expressed as a decimal on the centimeter (cm) scale",
                "type": "number"
              },
              "weight": {
                "description": "Weight of the item expressed as a decimal on the kilogram (kg) scale",
                "type": "number"
              },
              "volume": {
                "description": "Volume of the item expressed as a decimal on the cubic meter (m3) scale",
                "type": "number"
              },
              "commodities": {
                "description": "Commodity codes of the contents",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/commodityInfo"
                }
              }
            },
            "required": [
              "stackable",
              "colliType",
              "quantity",
              "length",
              "width",
              "height",
              "weight",
              "commodities"
            ]
          }
        },
        "required": [
          "attributes"
        ]
      },
      "v1CargoItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID of the Cargo Item"
          },
          "cargo_class": {
            "type": "string",
            "description": "Cargo Class of the Cargo Item. Must be `lcl`"
          },
          "cargo_item_type_id": {
            "type": "string",
            "description": "ID of the CargoItemType - repesenting the Colli Type"
          },
          "contents": {
            "type": "string",
            "description": "String desccribin the Items contents",
            "nullable": true
          },
          "dangerous_goods": {
            "type": "boolean",
            "description": "Whether or not the Cargoitem contains dangerous goods"
          },
          "width": {
            "type": "number",
            "description": "The width of the item in cm"
          },
          "length": {
            "type": "number",
            "description": "The length of the item in cm"
          },
          "height": {
            "type": "number",
            "description": "The height of the item in cm"
          },
          "payload_in_kg": {
            "type": "number",
            "description": "The individual weight of each item in kg"
          },
          "quantity": {
            "type": "number",
            "description": "The number of identical items in the group"
          },
          "stackable": {
            "type": "boolean",
            "description": "Whether these items can be stacked"
          },
          "total_volume": {
            "type": "number",
            "description": "The total volume of all items in the group in cubic meters"
          },
          "total_weight": {
            "type": "number",
            "description": "The total weight of the group in kg."
          }
        }
      },
      "v1Container": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the Container"
          },
          "cargo_class": {
            "type": "string",
            "description": "The Cargo Class of the Container",
            "enum": [
              "fcl_10",
              "fcl_20",
              "fcl_20_ot",
              "fcl_20_rf",
              "fcl_20_frs",
              "fcl_20_frw",
              "fcl_40",
              "fcl_40_hq",
              "fcl_40_ot",
              "fcl_40_rf",
              "fcl_40_hq_rf",
              "fcl_40_frs",
              "fcl_40_frw",
              "fcl_45",
              "fcl_45_hq",
              "fcl_45_rf"
            ]
          },
          "contents": {
            "type": "string",
            "description": "A string describing the contents of the Container",
            "nullable": true
          },
          "dangerous_goods": {
            "type": "boolean",
            "description": "Whether or not the Container holds any dangerous goods"
          },
          "payload_in_kg": {
            "type": "number",
            "description": "The weight of the payload per container in kg"
          },
          "quantity": {
            "type": "number",
            "description": "The number of containers in the group"
          },
          "size_class": {
            "type": "string",
            "description": "Duplicate of Cargo Class: Deprecated",
            "deprecated": true
          }
        }
      },
      "v1ShipmentInfoContainers": {
        "type": "object",
        "properties": {
          "containers_attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1Container"
            }
          },
          "trucking_info": {
            "type": "object",
            "properties": {
              "pre_carriage": {
                "$ref": "#/components/schemas/v1TruckingInfo"
              },
              "on_carriage": {
                "$ref": "#/components/schemas/v1TruckingInfo"
              }
            }
          }
        },
        "required": [
          "containers_attributes",
          "trucking_info"
        ]
      },
      "v1ShipmentInfoCargoItems": {
        "type": "object",
        "properties": {
          "cargo_items_attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1CargoItem"
            }
          },
          "trucking_info": {
            "type": "object",
            "properties": {
              "pre_carriage": {
                "$ref": "#/components/schemas/v1TruckingInfo"
              },
              "on_carriage": {
                "$ref": "#/components/schemas/v1TruckingInfo"
              }
            }
          }
        },
        "required": [
          "cargo_items_attributes",
          "trucking_info"
        ]
      },
      "v1TruckingInfo": {
        "type": "object",
        "properties": {
          "truck_type": {
            "type": "string",
            "description": "Truck type desired for pre/on carriage"
          }
        },
        "nullable": true
      },
      "journeyError": {
        "type": "object",
        "properties": {
          "id": {
            "description": "ID",
            "type": "string"
          },
          "code": {
            "description": "Code",
            "type": "string"
          },
          "service": {
            "description": "Service",
            "type": "string"
          },
          "carrier": {
            "description": "Carrier",
            "type": "string"
          },
          "mode_of_transport": {
            "description": "MOT",
            "type": "string"
          },
          "property": {
            "description": "Property",
            "type": "string"
          },
          "value": {
            "description": "Value",
            "type": "string"
          },
          "limit": {
            "description": "Limit",
            "type": "string"
          }
        },
        "required": [
          "id"
        ]
      },
      "locationV1Nexus": {
        "type": "object",
        "properties": {
          "nexus_id": {
            "type": "integer",
            "description": "The unique identifier of the Location Nexus"
          }
        },
        "required": [
          "nexus_id"
        ]
      },
      "locationV1Trucking": {
        "type": "object",
        "properties": {
          "latitude": {
            "type": "string",
            "description": "The latitude of the Location"
          },
          "longitude": {
            "type": "string",
            "description": "The longitude of the Location"
          }
        },
        "required": [
          "latitude",
          "longitude"
        ]
      },
      "money": {
        "type": "object",
        "properties": {
          "amount": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ],
            "description": "Monetary amount in given currency"
          },
          "currency": {
            "type": "string",
            "description": "ISO 4217 code for currency"
          }
        },
        "required": [
          "amount",
          "currency"
        ]
      },
      "nexus": {
        "type": "object",
        "properties": {
          "id": {
            "description": "ID",
            "type": "string"
          },
          "type": {
            "description": "Type",
            "type": "string"
          },
          "attributes": {
            "description": "Attributes",
            "type": "object",
            "properties": {
              "id": {
                "description": "ID",
                "type": "number"
              },
              "name": {
                "description": "Name",
                "type": "string"
              },
              "locode": {
                "description": "UN/LOCODE",
                "type": "string"
              },
              "latitude": {
                "description": "Latitude",
                "type": "number"
              },
              "longitude": {
                "description": "Longitude",
                "type": "number"
              },
              "modesOfTransport": {
                "description": "MOTs",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "countryName": {
                "description": "Country Name",
                "type": "string"
              }
            },
            "required": [
              "id",
              "name",
              "latitude",
              "longitude",
              "locode",
              "modesOfTransport",
              "countryName"
            ]
          }
        },
        "required": [
          "id",
          "type",
          "attributes"
        ]
      },
      "organization": {
        "type": "object",
        "properties": {
          "id": {
            "description": "ID",
            "type": "string"
          },
          "type": {
            "description": "Type",
            "type": "string"
          },
          "attributes": {
            "description": "Attributes of the organisation.",
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the organisation. Usually their legal business name."
              },
              "slug": {
                "type": "string",
                "description": "Short slug of the organisation that is unique for a single\norganisation. This is usually used as poart of the URL and must\nalways match generic domain requirements.\n"
              }
            },
            "required": [
              "name",
              "slug"
            ]
          }
        },
        "required": [
          "id",
          "type",
          "attributes"
        ]
      },
      "pagination": {
        "type": "object",
        "properties": {
          "page": {
            "description": "Current page",
            "type": "number"
          },
          "perPage": {
            "description": "Items per page",
            "type": "number"
          },
          "totalPages": {
            "description": "Total number of pages",
            "type": "number"
          }
        },
        "required": [
          "page",
          "perPage",
          "totalPages"
        ]
      },
      "paginationLinks": {
        "type": "object",
        "properties": {
          "first": {
            "description": "First page",
            "type": "string",
            "nullable": true
          },
          "prev": {
            "description": "Previous page",
            "type": "string",
            "nullable": true
          },
          "next": {
            "description": "Next page",
            "type": "string",
            "nullable": true
          },
          "last": {
            "description": "Last page",
            "type": "string",
            "nullable": true
          }
        }
      },
      "quotationTender": {
        "type": "object",
        "properties": {
          "data": {
            "description": "Data",
            "type": "object",
            "properties": {
              "id": {
                "description": "ID",
                "type": "string"
              },
              "type": {
                "description": "Type",
                "type": "string"
              },
              "attributes": {
                "description": "Attributes",
                "type": "object",
                "properties": {
                  "charges": {
                    "description": "Charges",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/charge"
                    }
                  },
                  "route": {
                    "description": "Route",
                    "type": "string"
                  },
                  "vessel": {
                    "description": "Vessel",
                    "type": "string"
                  },
                  "id": {
                    "description": "ID",
                    "type": "string"
                  },
                  "pickupTruckType": {
                    "description": "Truck type",
                    "type": "string"
                  },
                  "deliveryTruckType": {
                    "description": "Truck type",
                    "type": "string"
                  },
                  "pickupCarrier": {
                    "description": "Carrier",
                    "type": "string"
                  },
                  "deliveryCarrier": {
                    "description": "Carrier",
                    "type": "string"
                  },
                  "pickupService": {
                    "description": "Service",
                    "type": "string"
                  },
                  "deliveryService": {
                    "description": "Service",
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "route"
                ]
              }
            },
            "required": [
              "id",
              "type",
              "attributes"
            ]
          }
        }
      },
      "restfulResponse": {
        "type": "object",
        "properties": {
          "id": {
            "description": "ID",
            "type": "string"
          }
        }
      },
      "result": {
        "type": "object",
        "properties": {
          "id": {
            "description": "ID",
            "type": "string"
          },
          "carrier": {
            "description": "Name of the Carrier",
            "type": "string"
          },
          "modes_of_transport": {
            "description": "Main Modes of Transport for the route",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "total": {
            "description": "The total value of the Result",
            "schema": {
              "$ref": "#/components/schemas/money"
            }
          },
          "service_level": {
            "description": "Name of the main freight service level",
            "type": "string"
          },
          "valid_until": {
            "description": "Date until which this quote is valid",
            "type": "string"
          },
          "transit_time": {
            "description": "A figure denoting the number of days the journey will likely take",
            "type": "integer",
            "format": "int32"
          },
          "cargo_ready_date": {
            "description": "A date and time indicating after which the cargo will be ready for loading",
            "type": "string",
            "format": "date-time"
          },
          "cargo_delivery_date": {
            "description": "A date and time indicating by when the cargo needs to be delivered by",
            "type": "string",
            "format": "date-time"
          },
          "origin": {
            "description": "The full name of the start point of the quoted journey",
            "type": "string"
          },
          "destination": {
            "description": "The full name of the end point of the quoted journey",
            "type": "string"
          },
          "transshipment": {
            "description": "Information regarding the transhipments (if any) that happen during the main section of the journey",
            "type": "string"
          },
          "numberOfStops": {
            "description": "The number of times the cargo will be loaded and unloaded during the journey",
            "type": "integer"
          }
        }
      },
      "schedule": {
        "type": "object",
        "properties": {
          "id": {
            "description": "ID",
            "type": "string"
          },
          "estimatedDepartureTime": {
            "description": "Estimated departure date",
            "type": "datetime"
          },
          "estimatedArrivalTime": {
            "description": "Estimation of arrival time",
            "type": "datetime"
          },
          "voyageCode": {
            "description": "voyage code",
            "type": "string"
          },
          "vesselNo": {
            "description": "vessel number",
            "type": "string"
          },
          "closingDate": {
            "description": "schedule closing date",
            "type": "datetime"
          },
          "modeOfTransport": {
            "description": "The mode of transport of the schedule",
            "type": "string"
          },
          "transitTime": {
            "description": "The time in days that will take the goods to reach from origin to destination.",
            "type": "integer"
          }
        }
      },
      "offer": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the Offer",
            "type": "string"
          }
        },
        "required": [
          "id"
        ]
      },
      "routeSection": {
        "type": "object",
        "description": "Details regarding the start, end, service and mode of transport of each section of the quoted Journey",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the RouteSection"
          },
          "service": {
            "type": "string",
            "description": "The service level of this part of the journey"
          },
          "carrier": {
            "type": "string",
            "description": "The Carrier operating the service on this part of the journey"
          },
          "modeOfTransport": {
            "type": "string",
            "description": "The mode of transport for the section of the journey."
          },
          "transitTime": {
            "description": "The time in days that this part of the journey will take.",
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "origin": {
            "type": "object",
            "description": "The start point of this section",
            "properties": {
              "$ref": "#/components/schemas/resultDetailedRoutingLocation"
            }
          },
          "destination": {
            "type": "object",
            "description": "The end point of this section",
            "properties": {
              "$ref": "#/components/schemas/resultDetailedRoutingLocation"
            }
          },
          "carrierLogo": {
            "description": "URL for accesing the logo of the route section's Carrier",
            "type": "string",
            "nullable": true
          },
          "transshipment": {
            "description": "Information regarding the transhipments (if any) that happen during this section of the journey",
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "id",
          "service",
          "carrier",
          "modeOfTransport",
          "transitTime",
          "origin",
          "destination",
          "transshipment"
        ]
      },
      "resultDetailedRoutingLocation": {
        "type": "object",
        "description": "A object containing the address, locode and city of the location",
        "properties": {
          "address": {
            "type": "string",
            "description": "The city name or address of the location"
          },
          "locode": {
            "type": "string",
            "description": "The UN/LOCODE of the location",
            "nullable": true
          },
          "city": {
            "type": "string",
            "description": "The city name of the location. Will only differ from name if the location is an Address"
          }
        }
      },
      "settings": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the settings object",
            "type": "string"
          },
          "attributes": {
            "description": "Attributes",
            "type": "object",
            "properties": {
              "language": {
                "type": "string",
                "pattern": "[a-z]{2}-[A-Z]{2}",
                "description": "User's preferred language. Preferred language is given as language\nand country combination, allowing different dialects and languages\nfor each region.\n\nLanguage code is combined with language and country, separated by\ndash. First part of the code, language is the lower-case\ntwo-letter codes as defined by ISO-639-1. Second part is the\nupper-case two-letter codes as defined by ISO-3166-1.\n\nFor example:\n\n* `en-US` - English as spoken in United States of America\n* `en-GB` - English as spoken in United Kingdom and the Northern Ireland\n* `sv-FI` - Swedish as spoken in Finland\n"
              },
              "locale": {
                "type": "string",
                "pattern": "[a-z]{2}-[A-Z]{2}",
                "description": "User's preferred locale. Preferred locale defines how numbers and\ncurrencies, time et al. are displayed in the shop.\n\nLocale code is combined with language and country, separated by\ndash. First part of the code, language is the lower-case\ntwo-letter codes as defined by ISO-639-1. Second part is the\nupper-case two-letter codes as defined by ISO-3166-1.\n\nFor example:\n\n* `en-US` - English as spoken in United States of America\n* `en-GB` - English as spoken in United Kingdom and the Northern Ireland\n* `sv-FI` - Swedish as spoken in Finland\n"
              }
            }
          }
        }
      },
      "scope": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the offer",
            "type": "string"
          },
          "loginMandatory": {
            "type": "boolean",
            "description": "This boolean signals whether it is mandatory for a user to log in before they can access the quoting tool itself"
          },
          "links": {
            "type": "object",
            "properties": {
              "legal": {
                "type": "string",
                "description": "Link to any Legal notices the client wants to display",
                "nullable": true
              },
              "imprint": {
                "type": "string",
                "description": "Link to the 'Imprint' page of the client",
                "nullable": true
              },
              "about": {
                "type": "string",
                "description": "Link to the About Us page of the Clients website",
                "nullable": true
              },
              "privacy": {
                "type": "string",
                "description": "Link to the Client's Privacy Policy",
                "nullable": true
              },
              "terms": {
                "type": "string",
                "description": "Link to the Terms and Conditions the Client operates under",
                "nullable": true
              }
            }
          },
          "authMethods": {
            "type": "array",
            "description": "This contains the auth methods this Organization accepts",
            "schema": "string"
          },
          "loginSamlText": {
            "type": "string",
            "description": "Custom text to be displayed in the 'Log in Via SAML' button"
          }
        }
      },
      "user": {
        "type": "object",
        "properties": {
          "id": {
            "description": "ID",
            "type": "string"
          },
          "type": {
            "description": "Type",
            "type": "string"
          },
          "attributes": {
            "description": "Attributes",
            "type": "object",
            "properties": {
              "email": {
                "description": "Email",
                "type": "string"
              },
              "organizationId": {
                "description": "organization",
                "type": "string"
              },
              "firstName": {
                "description": "First Name",
                "type": "string"
              },
              "lastName": {
                "description": "Last Name",
                "type": "string"
              },
              "phone": {
                "description": "Phone",
                "type": "string",
                "nullable": true
              },
              "companyName": {
                "description": "Company",
                "type": "string"
              }
            },
            "required": [
              "email",
              "organizationId",
              "firstName",
              "lastName",
              "phone",
              "companyName"
            ]
          }
        },
        "required": [
          "id",
          "type",
          "attributes"
        ]
      },
      "v1Client": {
        "type": "object",
        "properties": {
          "id": {
            "description": "ID",
            "type": "string"
          },
          "type": {
            "description": "Type",
            "type": "string"
          },
          "attributes": {
            "description": "Attributes",
            "type": "object",
            "properties": {
              "email": {
                "description": "Email",
                "type": "string"
              },
              "organizationId": {
                "description": "organization",
                "type": "string"
              },
              "firstName": {
                "description": "First Name",
                "type": "string"
              },
              "lastName": {
                "description": "Last Name",
                "type": "string"
              },
              "phone": {
                "description": "Phone",
                "type": "string",
                "nullable": true
              },
              "companyName": {
                "description": "The name of the Company the client belongs to",
                "type": "string"
              },
              "companyId": {
                "description": "The ID of the Company the client belongs to",
                "type": "string"
              },
              "paymentTerms": {
                "description": "The Payment Terms applicable to the client",
                "type": "string"
              }
            },
            "required": [
              "email",
              "organizationId",
              "firstName",
              "lastName",
              "phone",
              "companyName",
              "paymentTerms"
            ]
          }
        },
        "required": [
          "id",
          "type",
          "attributes"
        ]
      },
      "profile": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the profile. Format of UUID.",
            "type": "string"
          },
          "attributes": {
            "description": "Attributes",
            "type": "object",
            "properties": {
              "email": {
                "description": "Email of the client",
                "type": "string"
              },
              "firstName": {
                "description": "First name of the user. This can be missing in case the user either does not have a first (given) name, or does not want it to be used.",
                "type": "string"
              },
              "lastName": {
                "description": "User's last or family name. In cases user only has one name, last name is used for identifying that.",
                "type": "string"
              },
              "phone": {
                "description": "User's phone number for contact purposes",
                "type": "string"
              }
            },
            "required": [
              "email",
              "firstName",
              "lastName"
            ]
          }
        },
        "required": [
          "id",
          "type",
          "attributes"
        ]
      },
      "analyticsCount": {
        "type": "number",
        "nullable": true
      },
      "analyticsTotal": {
        "type": "object",
        "properties": {
          "symbol": {
            "description": "ISO Currency Code for the Total",
            "type": "string"
          },
          "value": {
            "description": "Value in the base unit (cents) of the Total",
            "type": "number"
          }
        }
      },
      "analyticsListCount": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "label": {
              "description": "Label for displaying the context of the result",
              "type": "string"
            },
            "count": {
              "description": "Value of the Analytic result",
              "type": "number"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "oauth": {
        "type": "oauth2",
        "description": "This API uses OAuth2 with the password grant flow.",
        "flows": {
          "password": {
            "tokenUrl": "/oauth/tokens",
            "refreshUrl": "/oauth/refresh",
            "scopes": {
              "public": "Public Access"
            }
          }
        }
      },
      "bearerAuth": {
        "type": "http",
        "description": "Some endpoints authorize via integration token",
        "scheme": "bearer"
      }
    }
  },
  "servers": [
    {
      "url": "https://{host}",
      "variables": {
        "host": {
          "default": "api.itsmycargo.com"
        }
      }
    }
  ],
  "paths": {
    "/v1/organizations/{organization_id}/ahoy": {
      "get": {
        "summary": "Fetch Settings",
        "tags": [
          "Ahoy"
        ],
        "description": "Fetch settings for Ahoy widget.",
        "operationId": "getAhoy",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "endpoint": "test_1.itsmycargo.test",
                  "modes_of_transport": {
                    "air": {
                      "fcl": false,
                      "lcl": true
                    },
                    "rail": {
                      "fcl": false,
                      "lcl": false
                    },
                    "ocean": {
                      "fcl": true,
                      "lcl": true
                    },
                    "truck": {
                      "fcl": false,
                      "lcl": false
                    }
                  },
                  "pre_carriage": true,
                  "on_carriage": true
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "endpoint": {
                      "description": "Endpoint url that Ahoy will redirect to start the booking process",
                      "type": "string"
                    },
                    "pre_carriage": {
                      "description": "Determines if pre-carriage is enabled",
                      "type": "boolean"
                    },
                    "on_carriage": {
                      "description": "Determines if on-carriage is enabled",
                      "type": "boolean"
                    },
                    "modes_of_transport": {
                      "description": "Supported modes of transports",
                      "type": "object",
                      "properties": {
                        "air": {
                          "description": "Supported cargo types for Air Cargo",
                          "type": "object",
                          "properties": {
                            "fcl": {
                              "description": "Determines if FCL is supported",
                              "type": "boolean"
                            },
                            "lcl": {
                              "description": "Determines if LCL is supported",
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "fcl",
                            "lcl"
                          ]
                        },
                        "rail": {
                          "description": "Supported cargo types for Rail Cargo",
                          "type": "object",
                          "properties": {
                            "fcl": {
                              "description": "Determines if FCL is supported",
                              "type": "boolean"
                            },
                            "lcl": {
                              "description": "Determines if LCL is supported",
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "fcl",
                            "lcl"
                          ]
                        },
                        "ocean": {
                          "description": "Supported cargo types for Ocean Cargo",
                          "type": "object",
                          "properties": {
                            "fcl": {
                              "description": "Determines if FCL is supported",
                              "type": "boolean"
                            },
                            "lcl": {
                              "description": "Determines if LCL is supported",
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "fcl",
                            "lcl"
                          ]
                        },
                        "truck": {
                          "description": "Supported cargo types for Trucking Cargo",
                          "type": "object",
                          "properties": {
                            "fcl": {
                              "description": "Determines if FCL is supported",
                              "type": "boolean"
                            },
                            "lcl": {
                              "description": "Determines if LCL is supported",
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "fcl",
                            "lcl"
                          ]
                        }
                      },
                      "required": [
                        "air",
                        "rail",
                        "ocean",
                        "truck"
                      ]
                    }
                  },
                  "required": [
                    "endpoint",
                    "pre_carriage",
                    "on_carriage",
                    "modes_of_transport"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Invalid Customer UUID"
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/cargo_item_types": {
      "get": {
        "summary": "Fetch all available cargo types",
        "tags": [
          "Quote"
        ],
        "description": "Fetches all possible cargo types enabled for the customer.",
        "operationId": "getCargoItemTypes",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "19",
                      "type": "cargoItemType",
                      "attributes": {
                        "width": "101.0",
                        "length": "121.0",
                        "description": "Pallet"
                      }
                    }
                  ],
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/cargo_item_type"
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Invalid Credentials"
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/queries/{query_id}/cargo_units": {
      "get": {
        "summary": "Fetch CargoUnits for the Query",
        "tags": [
          "CargoUnits"
        ],
        "description": "Fetches cargo units for the query.",
        "operationId": "getCargoUnits",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query_id",
            "in": "path",
            "description": "Query ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "6e405e2d-cd40-421e-9bc9-e4f2060cb2cd",
                      "type": "cargoUnit",
                      "attributes": {
                        "cargoClass": "lcl",
                        "colliType": "pallet",
                        "height": 140.0,
                        "length": 80.0,
                        "stackable": false,
                        "quantity": 2,
                        "weight": 3000.0,
                        "width": 120.0,
                        "volume": 1.344,
                        "commodities": [

                        ]
                      }
                    },
                    {
                      "id": "0a51f6bc-7436-4db3-ab6b-057292f84ba3",
                      "type": "cargoUnit",
                      "attributes": {
                        "cargoClass": "lcl",
                        "colliType": "pallet",
                        "height": 140.0,
                        "length": 80.0,
                        "stackable": false,
                        "quantity": 2,
                        "weight": 3000.0,
                        "width": 120.0,
                        "volume": 1.344,
                        "commodities": [

                        ]
                      }
                    },
                    {
                      "id": "2d35c6fe-b268-40c1-880e-d9234e8b97e3",
                      "type": "cargoUnit",
                      "attributes": {
                        "cargoClass": "lcl",
                        "colliType": "pallet",
                        "height": 140.0,
                        "length": 80.0,
                        "stackable": false,
                        "quantity": 2,
                        "weight": 3000.0,
                        "width": 120.0,
                        "volume": 1.344,
                        "commodities": [

                        ]
                      }
                    }
                  ],
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/item_response"
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/queries/{query_id}/cargo_units/{id}": {
      "get": {
        "summary": "Fetch CargoUnit for the Query",
        "tags": [
          "CargoUnit"
        ],
        "description": "Fetch Cargo Unit",
        "operationId": "getCargoUnit",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query_id",
            "in": "path",
            "description": "Query ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "CargoUnit ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "b6d591e6-1253-493e-bd22-ebfd5fe2acaa",
                    "type": "cargoUnit",
                    "attributes": {
                      "cargoClass": "lcl",
                      "colliType": "pallet",
                      "height": 140.0,
                      "length": 80.0,
                      "stackable": false,
                      "quantity": 2,
                      "weight": 3000.0,
                      "width": 120.0,
                      "volume": 1.344,
                      "commodities": [

                      ]
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/item_response"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/carriers": {
      "get": {
        "summary": "Fetch all available carriers",
        "tags": [
          "Carriers"
        ],
        "description": "Fetches all possible carriers enabled for the customer.",
        "operationId": "getCarriers",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "7bc31c6d-a180-404b-8b2c-e7f68546e21a",
                      "type": "carrier",
                      "attributes": {
                        "id": "7bc31c6d-a180-404b-8b2c-e7f68546e21a",
                        "code": "carrier_1",
                        "name": "Carrier - 1",
                        "logo": "http://localhost:3000/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBbzRHIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--20a2e4828e8c773d91bbea78df3f7b18e8a03fe1/test-image.jpg"
                      }
                    },
                    {
                      "id": "68bbae5c-bc08-48db-8675-6d05a909cacf",
                      "type": "carrier",
                      "attributes": {
                        "id": "68bbae5c-bc08-48db-8675-6d05a909cacf",
                        "code": "carrier_2",
                        "name": "Carrier - 2",
                        "logo": "http://localhost:3000/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBbzhHIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--2d7e53ecfe5e1606ea48547e4e112e83d56d287b/test-image.jpg"
                      }
                    },
                    {
                      "id": "a717730d-bd40-4e6d-ba7c-0cde342dd713",
                      "type": "carrier",
                      "attributes": {
                        "id": "a717730d-bd40-4e6d-ba7c-0cde342dd713",
                        "code": "carrier_3",
                        "name": "Carrier - 3",
                        "logo": "http://localhost:3000/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBcEFHIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--a7e21a826512979ff2c36d6f5f811a6c7589e4af/test-image.jpg"
                      }
                    },
                    {
                      "id": "f9cea2e3-0eb8-4fcb-9f4f-7115b830a116",
                      "type": "carrier",
                      "attributes": {
                        "id": "f9cea2e3-0eb8-4fcb-9f4f-7115b830a116",
                        "code": "carrier_4",
                        "name": "Carrier - 4",
                        "logo": "http://localhost:3000/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBcEVHIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--169adede8aba1236a6b21b84dc65d5cdf162ddfb/test-image.jpg"
                      }
                    },
                    {
                      "id": "b2ef4a34-04bb-473b-9ce5-c8069503ebc0",
                      "type": "carrier",
                      "attributes": {
                        "id": "b2ef4a34-04bb-473b-9ce5-c8069503ebc0",
                        "code": "carrier_5",
                        "name": "Carrier - 5",
                        "logo": "http://localhost:3000/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBcElHIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b75c3035c1877fcb77f26990e5fca7de1c4bca50/test-image.jpg"
                      }
                    }
                  ],
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/carrier"
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Invalid Credentials"
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/carriers/{id}": {
      "get": {
        "summary": "Fetch carrier",
        "tags": [
          "Carriers"
        ],
        "description": "Fetches a specific Carrier.",
        "operationId": "getCarrier",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Carrier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "3e559ed6-66a8-406a-abd7-931b595b08eb",
                    "type": "carrier",
                    "attributes": {
                      "id": "3e559ed6-66a8-406a-abd7-931b595b08eb",
                      "code": "carrier_16",
                      "name": "Carrier - 16",
                      "logo": "http://localhost:3000/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBcUFHIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--977853601df3428d59f591f715411c19605e8692/test-image.jpg"
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/carrier"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Invalid Credentials"
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/quotations/{quotation_id}/charges/{id}": {
      "get": {
        "summary": "Fetch tender charges",
        "tags": [
          "Quote"
        ],
        "description": "Fetches available tenders.",
        "operationId": "getCharge",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Trip ID of the tender",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quotation_id",
            "in": "path",
            "description": "The selected quotation ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "4d52ae70-3a9b-4d58-8481-1f351661a13d",
                    "type": "detailedResult",
                    "attributes": {
                      "queryId": "201404cc-3772-4cd6-88ca-343589d89855",
                      "paymentTerms": "Some quotation payment terms",
                      "charges": [
                        {
                          "id": "38ed90e6-6585-42e5-a4cb-38f01e7dc410",
                          "editId": null,
                          "order": 0,
                          "parentId": null,
                          "lineItemId": null,
                          "code": null,
                          "chargeCategoryId": null,
                          "description": null,
                          "section": null,
                          "value": {
                            "amount": "180.0",
                            "currency": "EUR"
                          },
                          "originalValue": {
                            "amount": "180.0",
                            "currency": "EUR"
                          },
                          "tenderId": "4d52ae70-3a9b-4d58-8481-1f351661a13d",
                          "level": 0
                        },
                        {
                          "id": "582ef30b-0cb6-42bf-937f-414c4106b145",
                          "editId": null,
                          "order": 0,
                          "parentId": null,
                          "lineItemId": null,
                          "code": null,
                          "chargeCategoryId": 452,
                          "description": "Trucking pre",
                          "section": "trucking_pre",
                          "value": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "originalValue": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "tenderId": "4d52ae70-3a9b-4d58-8481-1f351661a13d",
                          "level": 1
                        },
                        {
                          "id": "01889a19-292a-46c8-9701-396bed6d88c3",
                          "editId": "b9ac9018-66f8-4339-80a0-591eb7c31cf5",
                          "order": 0,
                          "parentId": "582ef30b-0cb6-42bf-937f-414c4106b145",
                          "lineItemId": null,
                          "code": null,
                          "chargeCategoryId": "",
                          "description": "1 x Pallet",
                          "section": "trucking_pre",
                          "value": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "originalValue": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "tenderId": "4d52ae70-3a9b-4d58-8481-1f351661a13d",
                          "level": 2
                        },
                        {
                          "id": "4758e474-6f2b-4121-9e46-7721c4022875",
                          "editId": null,
                          "order": 0,
                          "parentId": "01889a19-292a-46c8-9701-396bed6d88c3",
                          "lineItemId": null,
                          "code": null,
                          "chargeCategoryId": null,
                          "description": "Fees charged in USD:",
                          "section": "trucking_pre",
                          "value": {
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "originalValue": {
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "tenderId": "4d52ae70-3a9b-4d58-8481-1f351661a13d",
                          "level": 3
                        },
                        {
                          "id": "3e81f0c8-3ce0-4fbe-9ce4-a013c7933e93",
                          "editId": "e05dca14-5abf-47e5-b5ee-f2da041f0f36",
                          "order": 0,
                          "parentId": "01889a19-292a-46c8-9701-396bed6d88c3",
                          "lineItemId": "e05dca14-5abf-47e5-b5ee-f2da041f0f36",
                          "code": "Fee 8",
                          "chargeCategoryId": null,
                          "description": "FEE 8 - ",
                          "section": "trucking_pre",
                          "originalValue": {
                            "included": false,
                            "excluded": false,
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "value": {
                            "included": false,
                            "excluded": false,
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "tenderId": "4d52ae70-3a9b-4d58-8481-1f351661a13d",
                          "level": 4,
                          "rateFactor": null,
                          "rate": null
                        },
                        {
                          "id": "c8b9eeae-de69-4541-a58a-a6ab727c76cc",
                          "editId": null,
                          "order": 1,
                          "parentId": null,
                          "lineItemId": null,
                          "code": null,
                          "chargeCategoryId": 455,
                          "description": "Export",
                          "section": "export",
                          "value": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "originalValue": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "tenderId": "4d52ae70-3a9b-4d58-8481-1f351661a13d",
                          "level": 1
                        },
                        {
                          "id": "7157c928-1b3c-4b2d-b02c-67d932f646bc",
                          "editId": "b9ac9018-66f8-4339-80a0-591eb7c31cf5",
                          "order": 0,
                          "parentId": "c8b9eeae-de69-4541-a58a-a6ab727c76cc",
                          "lineItemId": null,
                          "code": null,
                          "chargeCategoryId": "",
                          "description": "1 x Pallet",
                          "section": "export",
                          "value": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "originalValue": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "tenderId": "4d52ae70-3a9b-4d58-8481-1f351661a13d",
                          "level": 2
                        },
                        {
                          "id": "1f671a56-62de-497b-9296-e3754eb75287",
                          "editId": null,
                          "order": 0,
                          "parentId": "7157c928-1b3c-4b2d-b02c-67d932f646bc",
                          "lineItemId": null,
                          "code": null,
                          "chargeCategoryId": null,
                          "description": "Fees charged in USD:",
                          "section": "export",
                          "value": {
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "originalValue": {
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "tenderId": "4d52ae70-3a9b-4d58-8481-1f351661a13d",
                          "level": 3
                        },
                        {
                          "id": "0074be99-0001-41d9-ab74-ed50eeb02531",
                          "editId": "b5832a0a-f563-4eca-a872-a4012b175a5f",
                          "order": 0,
                          "parentId": "7157c928-1b3c-4b2d-b02c-67d932f646bc",
                          "lineItemId": "b5832a0a-f563-4eca-a872-a4012b175a5f",
                          "code": "Fee 11",
                          "chargeCategoryId": null,
                          "description": "FEE 11 - ",
                          "section": "export",
                          "originalValue": {
                            "included": false,
                            "excluded": false,
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "value": {
                            "included": false,
                            "excluded": false,
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "tenderId": "4d52ae70-3a9b-4d58-8481-1f351661a13d",
                          "level": 4,
                          "rateFactor": null,
                          "rate": null
                        },
                        {
                          "id": "b0aa08a3-093a-463a-860a-ce65d3e849ab",
                          "editId": null,
                          "order": 2,
                          "parentId": null,
                          "lineItemId": null,
                          "code": null,
                          "chargeCategoryId": 454,
                          "description": "Cargo",
                          "section": "cargo",
                          "value": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "originalValue": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "tenderId": "4d52ae70-3a9b-4d58-8481-1f351661a13d",
                          "level": 1
                        },
                        {
                          "id": "19c5d294-28f9-4296-a73c-c48b519d8de5",
                          "editId": "b9ac9018-66f8-4339-80a0-591eb7c31cf5",
                          "order": 0,
                          "parentId": "b0aa08a3-093a-463a-860a-ce65d3e849ab",
                          "lineItemId": null,
                          "code": null,
                          "chargeCategoryId": "",
                          "description": "1 x Pallet",
                          "section": "cargo",
                          "value": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "originalValue": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "tenderId": "4d52ae70-3a9b-4d58-8481-1f351661a13d",
                          "level": 2
                        },
                        {
                          "id": "f8a85a7a-796f-4387-8933-e14a4ab24325",
                          "editId": null,
                          "order": 0,
                          "parentId": "19c5d294-28f9-4296-a73c-c48b519d8de5",
                          "lineItemId": null,
                          "code": null,
                          "chargeCategoryId": null,
                          "description": "Fees charged in USD:",
                          "section": "cargo",
                          "value": {
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "originalValue": {
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "tenderId": "4d52ae70-3a9b-4d58-8481-1f351661a13d",
                          "level": 3
                        },
                        {
                          "id": "06acf7fa-1860-4084-9dcc-0ba073e2a698",
                          "editId": "ff51dbcd-d8d7-4fb0-ba65-4e6ddef442d0",
                          "order": 0,
                          "parentId": "19c5d294-28f9-4296-a73c-c48b519d8de5",
                          "lineItemId": "ff51dbcd-d8d7-4fb0-ba65-4e6ddef442d0",
                          "code": "Fee 14",
                          "chargeCategoryId": null,
                          "description": "FEE 14 - ",
                          "section": "cargo",
                          "originalValue": {
                            "included": false,
                            "excluded": false,
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "value": {
                            "included": false,
                            "excluded": false,
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "tenderId": "4d52ae70-3a9b-4d58-8481-1f351661a13d",
                          "level": 4,
                          "rateFactor": null,
                          "rate": null
                        },
                        {
                          "id": "a439578e-39e3-4774-8970-030f9c113af3",
                          "editId": null,
                          "order": 3,
                          "parentId": null,
                          "lineItemId": null,
                          "code": null,
                          "chargeCategoryId": 456,
                          "description": "Import",
                          "section": "import",
                          "value": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "originalValue": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "tenderId": "4d52ae70-3a9b-4d58-8481-1f351661a13d",
                          "level": 1
                        },
                        {
                          "id": "e924aca2-2696-42ea-bf8b-b998fe0a5aa8",
                          "editId": "b9ac9018-66f8-4339-80a0-591eb7c31cf5",
                          "order": 0,
                          "parentId": "a439578e-39e3-4774-8970-030f9c113af3",
                          "lineItemId": null,
                          "code": null,
                          "chargeCategoryId": "",
                          "description": "1 x Pallet",
                          "section": "import",
                          "value": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "originalValue": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "tenderId": "4d52ae70-3a9b-4d58-8481-1f351661a13d",
                          "level": 2
                        },
                        {
                          "id": "64b9f933-49e8-4f67-a293-2d6a69b616fd",
                          "editId": null,
                          "order": 0,
                          "parentId": "e924aca2-2696-42ea-bf8b-b998fe0a5aa8",
                          "lineItemId": null,
                          "code": null,
                          "chargeCategoryId": null,
                          "description": "Fees charged in USD:",
                          "section": "import",
                          "value": {
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "originalValue": {
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "tenderId": "4d52ae70-3a9b-4d58-8481-1f351661a13d",
                          "level": 3
                        },
                        {
                          "id": "691cfd6c-337e-41ff-8242-bc42e8b7215c",
                          "editId": "755bbc07-79f7-4e1e-ba3b-001c2cafec65",
                          "order": 0,
                          "parentId": "e924aca2-2696-42ea-bf8b-b998fe0a5aa8",
                          "lineItemId": "755bbc07-79f7-4e1e-ba3b-001c2cafec65",
                          "code": "Fee 17",
                          "chargeCategoryId": null,
                          "description": "FEE 17 - ",
                          "section": "import",
                          "originalValue": {
                            "included": false,
                            "excluded": false,
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "value": {
                            "included": false,
                            "excluded": false,
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "tenderId": "4d52ae70-3a9b-4d58-8481-1f351661a13d",
                          "level": 4,
                          "rateFactor": null,
                          "rate": null
                        },
                        {
                          "id": "c1067aef-545e-4e97-8a49-e707366f6b08",
                          "editId": null,
                          "order": 4,
                          "parentId": null,
                          "lineItemId": null,
                          "code": null,
                          "chargeCategoryId": 453,
                          "description": "Trucking on",
                          "section": "trucking_on",
                          "value": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "originalValue": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "tenderId": "4d52ae70-3a9b-4d58-8481-1f351661a13d",
                          "level": 1
                        },
                        {
                          "id": "59171fad-c8ad-4cc7-9841-76539d551737",
                          "editId": "b9ac9018-66f8-4339-80a0-591eb7c31cf5",
                          "order": 0,
                          "parentId": "c1067aef-545e-4e97-8a49-e707366f6b08",
                          "lineItemId": null,
                          "code": null,
                          "chargeCategoryId": "",
                          "description": "1 x Pallet",
                          "section": "trucking_on",
                          "value": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "originalValue": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "tenderId": "4d52ae70-3a9b-4d58-8481-1f351661a13d",
                          "level": 2
                        },
                        {
                          "id": "8cc0b77b-e56a-45d4-acda-6be96a2f84ce",
                          "editId": null,
                          "order": 0,
                          "parentId": "59171fad-c8ad-4cc7-9841-76539d551737",
                          "lineItemId": null,
                          "code": null,
                          "chargeCategoryId": null,
                          "description": "Fees charged in USD:",
                          "section": "trucking_on",
                          "value": {
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "originalValue": {
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "tenderId": "4d52ae70-3a9b-4d58-8481-1f351661a13d",
                          "level": 3
                        },
                        {
                          "id": "e39cf56e-8a30-48d0-913a-ddccd80e2cd6",
                          "editId": "7c2aa0f7-5acd-436e-b00c-92afeef68ec5",
                          "order": 0,
                          "parentId": "59171fad-c8ad-4cc7-9841-76539d551737",
                          "lineItemId": "7c2aa0f7-5acd-436e-b00c-92afeef68ec5",
                          "code": "Fee 20",
                          "chargeCategoryId": null,
                          "description": "FEE 20 - ",
                          "section": "trucking_on",
                          "originalValue": {
                            "included": false,
                            "excluded": false,
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "value": {
                            "included": false,
                            "excluded": false,
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "tenderId": "4d52ae70-3a9b-4d58-8481-1f351661a13d",
                          "level": 4,
                          "rateFactor": null,
                          "rate": null
                        }
                      ],
                      "route": "Gothenburg - Shanghai",
                      "vessel": "",
                      "id": "4d52ae70-3a9b-4d58-8481-1f351661a13d",
                      "pickupTruckType": null,
                      "deliveryTruckType": null,
                      "pickupCarrier": "SACO",
                      "deliveryCarrier": "SACO",
                      "pickupService": "standard",
                      "deliveryService": "standard"
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/quotationTender"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Invalid Charge ID",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "message": "Couldn't find Journey::Result with 'id'=deadbeef",
                  "status": "not_found",
                  "code": 404
                }
              }
            }
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/clients": {
      "get": {
        "summary": "Fetch all clients",
        "tags": [
          "Clients"
        ],
        "description": "Fetch all customer client accounts.",
        "operationId": "getClients",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "Search query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Results per page",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "c9da474d-5e1f-402e-bee8-d2e656158413",
                      "type": "client",
                      "attributes": {
                        "email": "john.doe.66@itsmycargo.test",
                        "organizationId": "5956449e-5342-42dc-8890-52618665770f",
                        "firstName": "Guest",
                        "lastName": "User 66",
                        "phone": "081 9847079",
                        "companyName": "default",
                        "paymentTerms": "Some quotation payment terms",
                        "companyId": "c0984837-8cef-4141-8bd9-c6431b548056"
                      }
                    }
                  ],
                  "links": {
                    "first": "http://www.example.com/v1/organizations/5956449e-5342-42dc-8890-52618665770f/clients?page=1&per_page=1&q=",
                    "prev": null,
                    "next": "http://www.example.com/v1/organizations/5956449e-5342-42dc-8890-52618665770f/clients?page=2&per_page=1&q=",
                    "last": "http://www.example.com/v1/organizations/5956449e-5342-42dc-8890-52618665770f/clients?page=6&per_page=1&q="
                  },
                  "meta": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/v1Client"
                      }
                    },
                    "links": {
                      "$ref": "#/components/schemas/paginationLinks"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Invalid Credentials"
          }
        }
      },
      "post": {
        "summary": "Create a new client",
        "tags": [
          "Clients"
        ],
        "description": "Creates a new client for the customer.",
        "operationId": "createClient",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "9e6ff6da-a285-43ae-9a8e-1c36d46461ad",
                    "type": "client",
                    "attributes": {
                      "email": "john@example.com",
                      "organizationId": "4cd7af11-a579-4abe-9ae8-a9c792464d88",
                      "firstName": "John",
                      "lastName": "Doe",
                      "phone": "+1 2345 2345",
                      "companyName": "default",
                      "paymentTerms": "Some quotation payment terms",
                      "companyId": "cf15e7c4-cab8-4e86-b72a-dcc9aa007d58"
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                }
              }
            }
          },
          "400": {
            "description": "invalid request",
            "content": {
              "application/json": {
                "example": {
                  "error": "Validation failed: Email can't be blank, Email is invalid"
                }
              }
            }
          },
          "401": {
            "description": "Invalid Credentials"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/client"
              }
            }
          },
          "required": true
        }
      }
    },
    "/v1/organizations/{organization_id}/clients/{id}": {
      "get": {
        "summary": "Fetch specific client",
        "tags": [
          "Clients"
        ],
        "description": "Fetch a given client.",
        "operationId": "getClient",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Client ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "816c5094-c7bb-4496-969a-41b177618a12",
                    "type": "client",
                    "attributes": {
                      "email": "john.doe.100@itsmycargo.test",
                      "organizationId": "6e65e392-f2a1-4519-a943-d92c10af4751",
                      "firstName": "Guest",
                      "lastName": "User 100",
                      "phone": "081 9847079",
                      "companyName": "default",
                      "paymentTerms": "Some quotation payment terms",
                      "companyId": "645db36c-b3cf-45c6-a621-7ae44285828c"
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/v1Client"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Invalid Credentials"
          },
          "404": {
            "description": "Invalid Client ID",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "message": "Couldn't find Users::Client with 'id'=deadbeef [WHERE \"users_clients\".\"deleted_at\" IS NULL AND \"users_clients\".\"deleted_at\" IS NULL AND \"users_clients\".\"organization_id\" = $1]",
                  "status": "not_found",
                  "code": 404
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Destroy a specific client",
        "tags": [
          "Clients"
        ],
        "description": "Deletes an client.",
        "operationId": "deleteClient",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Client ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation"
          },
          "404": {
            "description": "Invalid Client ID",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "message": "Couldn't find UserServices::Client with 'id'=deadbeef [WHERE \"users_clients\".\"deleted_at\" IS NULL AND \"users_clients\".\"deleted_at\" IS NULL AND \"users_clients\".\"organization_id\" = $1]",
                  "status": "not_found",
                  "code": 404
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update",
        "tags": [
          "Clients"
        ],
        "description": "Update client details.",
        "operationId": "updateClient",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Client ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation"
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "example": {
                  "error": [
                    "Email can't be blank",
                    "Email is invalid"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "client": {
                    "$ref": "#/components/schemas/client"
                  }
                },
                "required": [
                  "client"
                ]
              }
            }
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/clients/{id}/password_reset": {
      "patch": {
        "summary": "Password Reset",
        "tags": [
          "Clients"
        ],
        "description": "Resets a client password.",
        "operationId": "passwordReset",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Client ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "password": "vCRLCRmfEsTi2Bw7"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "password": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "password"
                      ]
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Invalid Credentials"
          },
          "404": {
            "description": "Invalid Client ID",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "message": "Couldn't find Users::Client with 'id'=deadbeef [WHERE \"users_clients\".\"deleted_at\" IS NULL AND \"users_clients\".\"deleted_at\" IS NULL AND \"users_clients\".\"organization_id\" = $1]",
                  "status": "not_found",
                  "code": 404
                }
              }
            }
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/colli_types": {
      "get": {
        "summary": "Fetch colli types for the Organization",
        "tags": [
          "ColliTypes"
        ],
        "description": "Fetch colli types for the Organization",
        "operationId": "getColliType",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [

                  ]
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/companies/{company_id}": {
      "put": {
        "summary": "Update a company",
        "tags": [
          "Companies"
        ],
        "description": "Update a specific company",
        "operationId": "updateCompany",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "company_id",
            "in": "path",
            "description": "The current company id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "dfdac84d-dd3b-40a4-84fe-6724e9634ed1",
                    "type": "company",
                    "attributes": {
                      "id": "dfdac84d-dd3b-40a4-84fe-6724e9634ed1",
                      "email": "awesome@company.com",
                      "name": "awesome company",
                      "paymentTerms": "an awesome payment term",
                      "phone": "112233",
                      "vatNumber": "VAT12345"
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/company"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "example": {
                  "error": "Please provide at least one param of email, name, paymentTerms, phone, or vatNumber"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "company": {
                    "type": "object",
                    "properties": {
                      "email": {
                        "type": "string",
                        "description": "The email address of the company"
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the company"
                      },
                      "paymentTerms": {
                        "type": "string",
                        "description": "The payment terms, set out by the company"
                      },
                      "phone": {
                        "type": "string",
                        "description": "The phone number of the company"
                      },
                      "vatNumber": {
                        "type": "number",
                        "description": "The VAT number of the company"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/companies/{company_id}": {
      "get": {
        "summary": "Fetch a company",
        "tags": [
          "Companies"
        ],
        "description": "Fetch a specific company",
        "operationId": "getCompany",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "company_id",
            "in": "path",
            "description": "The current company id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "13f3ca3f-62d4-48b6-9614-760edd85892c",
                    "type": "company",
                    "attributes": {
                      "id": "13f3ca3f-62d4-48b6-9614-760edd85892c",
                      "email": "foo@bar.com",
                      "name": "company1",
                      "paymentTerms": "Some quotation payment terms",
                      "phone": "112233",
                      "vatNumber": "DE-VATNUMBER1"
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "attributes": {
                          "$ref": "#/components/schemas/company"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "not found operation",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "message": "Couldn't find Companies::Company with 'id'=non-existent-id [WHERE \"companies_companies\".\"deleted_at\" IS NULL]",
                  "status": "not_found",
                  "code": 404
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update a company",
        "tags": [
          "Companies"
        ],
        "description": "Update a specific company",
        "operationId": "updateCompany",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "company_id",
            "in": "path",
            "description": "The current company id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "1da7c28c-dc51-4358-bd77-8c918bc4a378",
                    "type": "company",
                    "attributes": {
                      "id": "1da7c28c-dc51-4358-bd77-8c918bc4a378",
                      "email": "awesome@company.com",
                      "name": "awesome company",
                      "paymentTerms": "an awesome payment term",
                      "phone": "112233",
                      "vatNumber": "VAT12345"
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/company"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "example": {
                  "error": "Please provide at least one param of email, name, paymentTerms, phone, or vatNumber"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "company": {
                    "type": "object",
                    "properties": {
                      "email": {
                        "type": "string",
                        "description": "The email address of the company"
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the company"
                      },
                      "paymentTerms": {
                        "type": "string",
                        "description": "The payment terms, set out by the company"
                      },
                      "phone": {
                        "type": "string",
                        "description": "The phone number of the company"
                      },
                      "vatNumber": {
                        "type": "number",
                        "description": "The VAT number of the company"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/dashboard": {
      "get": {
        "summary": "Fetch Dashboard Widget",
        "tags": [
          "Dashboard"
        ],
        "description": "Fetch widget date for the dashboard.",
        "operationId": "getDashboard",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "widget",
            "in": "query",
            "description": "Widget to be fetch",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "description": "Start date of dashboard data",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "description": "End date of dashboard data",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": 0
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "oneOf": [
                        {
                          "$ref": "#/components/schemas/analyticsCount"
                        },
                        {
                          "$ref": "#/components/schemas/analyticsTotal"
                        },
                        {
                          "$ref": "#/components/schemas/analyticsListCount"
                        }
                      ]
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/equipments": {
      "get": {
        "summary": "Fetch all available equipment",
        "tags": [
          "Quote"
        ],
        "description": "Fetch availavble equipment for the route.",
        "operationId": "getEquipments",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "origin_nexus_id",
            "in": "query",
            "description": "the id of the origin",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "destination_nexus_id",
            "in": "query",
            "description": "the id of the destination",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    "fcl_20",
                    "fcl_40"
                  ]
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Invalid Credentials"
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/queries/{query_id}/errors": {
      "get": {
        "summary": "Fetch Errors for the Result Set",
        "tags": [
          "Users"
        ],
        "description": "Fetch errors for the given result set.",
        "operationId": "getResultSetErrors",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query_id",
            "in": "path",
            "description": "Query ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "6b85e7ba-5126-4866-a986-abdbc36b1d0a",
                      "type": "error",
                      "attributes": {
                        "id": "6b85e7ba-5126-4866-a986-abdbc36b1d0a",
                        "carrier": "MSC",
                        "code": 1001,
                        "limit": "1000",
                        "modeOfTransport": "ocean",
                        "property": "Weight",
                        "service": "Standard",
                        "value": "1100",
                        "cargoUnitId": "d8bf0396-c7c7-4b1c-b6e1-5b6565c7e802",
                        "queryId": "0f3e965f-771f-4e37-bac9-daf93a7e67b4"
                      }
                    }
                  ],
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/journeyError"
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/groups": {
      "get": {
        "summary": "Fetch all groups",
        "tags": [
          "Groups"
        ],
        "description": "Fetch all groups.",
        "operationId": "getGroups",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "63a081dd-e087-4397-88d8-61d72f88fd92",
                      "type": "organizationsGroup",
                      "attributes": {
                        "id": "63a081dd-e087-4397-88d8-61d72f88fd92",
                        "name": "Group1"
                      }
                    },
                    {
                      "id": "3f5143ad-06d6-4185-a3a9-ffbc475c6206",
                      "type": "organizationsGroup",
                      "attributes": {
                        "id": "3f5143ad-06d6-4185-a3a9-ffbc475c6206",
                        "name": "Group2"
                      }
                    },
                    {
                      "id": "3ca7fe1d-80a7-46f1-9b4d-8658decfbac1",
                      "type": "organizationsGroup",
                      "attributes": {
                        "id": "3ca7fe1d-80a7-46f1-9b4d-8658decfbac1",
                        "name": "Group3"
                      }
                    },
                    {
                      "id": "b72046b3-517d-432a-9015-fab61487133e",
                      "type": "organizationsGroup",
                      "attributes": {
                        "id": "b72046b3-517d-432a-9015-fab61487133e",
                        "name": "Group4"
                      }
                    },
                    {
                      "id": "ea07cb04-aa24-4f1a-a386-ee084d3891ca",
                      "type": "organizationsGroup",
                      "attributes": {
                        "id": "ea07cb04-aa24-4f1a-a386-ee084d3891ca",
                        "name": "Group5"
                      }
                    }
                  ],
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/group"
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Invalid Credentials"
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/itineraries": {
      "get": {
        "summary": "Fetch list of itineraries belonging to an organization",
        "tags": [
          "Quote"
        ],
        "description": "Fetch list of itineraries belonging to an organization",
        "operationId": "getItineraries",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "185",
                      "type": "itinerary",
                      "attributes": {
                        "id": 185,
                        "modeOfTransport": "ocean",
                        "name": "Hamburg - Shanghai"
                      },
                      "relationships": {
                        "stops": {
                          "data": [
                            {
                              "id": "369",
                              "type": "stop"
                            },
                            {
                              "id": "370",
                              "type": "stop"
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "number"
                              },
                              "modeOfTransport": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "modeOfTransport",
                              "name"
                            ]
                          },
                          "relationships": {
                            "type": "object",
                            "properties": {
                              "stops": {
                                "type": "object",
                                "properties": {
                                  "data": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string"
                                        },
                                        "type": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "id",
                                        "type"
                                      ]
                                    }
                                  }
                                },
                                "required": [
                                  "data"
                                ]
                              }
                            },
                            "required": [
                              "stops"
                            ]
                          }
                        },
                        "required": [
                          "id",
                          "type",
                          "attributes",
                          "relationships"
                        ]
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/locations/origins": {
      "get": {
        "summary": "Fetch available origins",
        "tags": [
          "Quote"
        ],
        "description": "Fetch available origins",
        "operationId": "getLocationOrigins",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "Query to search locations",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "ID of location to query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "load_type",
            "in": "query",
            "description": "Load type for location",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "551",
                      "type": "nexus",
                      "attributes": {
                        "id": 551,
                        "name": "Gothenburg",
                        "latitude": 57.694253,
                        "longitude": 11.854048,
                        "modesOfTransport": [
                          "ocean"
                        ],
                        "countryName": "Sweden",
                        "locode": "SEGOT"
                      }
                    }
                  ],
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/nexus"
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/locations/destinations": {
      "get": {
        "summary": "Fetch available destinations",
        "tags": [
          "Quote"
        ],
        "description": "Fetch available destinations",
        "operationId": "getLocationDestinations",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "Query to search locations",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "ID of location to query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "load_type",
            "in": "query",
            "description": "Load type for location",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "554",
                      "type": "nexus",
                      "attributes": {
                        "id": 554,
                        "name": "Shanghai",
                        "latitude": 31.2231338,
                        "longitude": 120.9162975,
                        "modesOfTransport": [
                          "ocean"
                        ],
                        "countryName": "China",
                        "locode": "CNSHA"
                      }
                    }
                  ],
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/nexus"
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/oauth/token/info": {
      "get": {
        "summary": "Fetch information of current token",
        "tags": [
          "Authentication"
        ],
        "description": "Fetch information of current token",
        "operationId": "getTokenInfo",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "access_token": "44aa1f674a11e8ad8cce7480ccb2bfc6102809245d0b17092711c837db5fc01d",
                  "token_type": "Bearer",
                  "scope": "public",
                  "created_at": 1637761727
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "access_token": {
                      "type": "string",
                      "description": "Token used to access this endpoint"
                    },
                    "token_type": {
                      "type": "string",
                      "description": "Type of the token (always Bearer)"
                    },
                    "scope": {
                      "type": "string",
                      "description": "OAuth scopes of the token."
                    },
                    "created_at": {
                      "type": "number",
                      "description": "Timestamp when token was created."
                    }
                  },
                  "required": [
                    "access_token",
                    "token_type",
                    "scope",
                    "created_at"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Invalid Credentials",
            "content": {
              "application/json": {
                "example": {
                  "error": "invalid_request",
                  "error_description": "The request is missing a required parameter, includes an unsupported parameter value, or is otherwise malformed."
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error code describing the encountered error."
                    },
                    "error_description": {
                      "type": "string",
                      "description": "Detailed description of the error occured."
                    }
                  },
                  "required": [
                    "error",
                    "error_description"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/offers": {
      "post": {
        "summary": "Create new offer",
        "tags": [
          "Offer"
        ],
        "description": "Create a new offer. To be able to download quotation results as a PDF, first the offer must be created with results that are to be included in the offer.\nCreating a new offer with the selected result IDs allows the backend system to generate a downloadable PDF for these results.\n",
        "operationId": "createOffer",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "851c361e-fb6e-4d1e-9d8e-9a4247a54a4d",
                    "type": "offer",
                    "attributes": {
                      "id": "851c361e-fb6e-4d1e-9d8e-9a4247a54a4d",
                      "url": "http://localhost:3000/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBZ3dIIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--d8f9a5584e1ad27cbaaf36f6dccae3f236a7a591/offer.pdf?disposition=attachment"
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/offer"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "422": {
            "description": "unprocessable entity",
            "content": {
              "application/json": {
                "example": {
                  "error": "No results provided"
                },
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            }
          },
          "404": {
            "description": "results not found",
            "content": {
              "application/json": {
                "example": {
                  "error": "No results found"
                },
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resultIds": {
                    "description": "array of the ids of the results to be included in the offer",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "resultIds"
                ]
              }
            }
          }
        }
      }
    },
    "/v1/organization": {
      "get": {
        "summary": "Fetch current organization",
        "tags": [
          "Organization"
        ],
        "description": "Fetch information of the current organization, automatically detected by the\nrequester domain (referrer).\n\nCurrent organization is detected automatically based on the following hierachy:\n  1. Referrer domain as is, e.g. yourdemo.itsmycargo.shop\n  2. Slug as subdomain, e.g. yourdemo.lvh.me\n",
        "operationId": "getOrganization",
        "parameters": [
          {
            "name": "Referer",
            "in": "header",
            "description": "HTTP Referrer",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "4a46eb5d-b18e-4415-9285-5b4c934a488b",
                    "type": "organization",
                    "attributes": {
                      "slug": "test_108",
                      "name": "Freight Spedetion #108"
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/organization"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/v1/organizations": {
      "get": {
        "summary": "Fetch all organizations",
        "tags": [
          "Users"
        ],
        "description": "Fetch all organizations",
        "operationId": "getOrganizations",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [

                  ],
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/organization"
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Invalid Credentials"
          }
        }
      }
    },
    "/v1/organizations/{id}/countries": {
      "get": {
        "summary": "Fetch enabled countries for an organization",
        "tags": [
          "Users"
        ],
        "description": "Fetch enabled countries for an organization",
        "operationId": "getCountries",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "255",
                      "type": "country",
                      "attributes": {
                        "name": "Sweden",
                        "code": "SE",
                        "flag": "https://restcountries.eu/data/sek.svg"
                      }
                    }
                  ],
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/country"
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Invalid Credentials"
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/ports": {
      "get": {
        "summary": "Fetch list of ports",
        "tags": [
          "Ahoy"
        ],
        "description": "Fetch list of ports",
        "operationId": "getPorts",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "location_type",
            "in": "query",
            "description": "Location Type of request origin/destination",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "location_id",
            "in": "query",
            "description": "ID of selected location",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Text input for query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "569",
                      "type": "port",
                      "attributes": {
                        "id": 569,
                        "name": "Shanghai",
                        "hubType": "ocean"
                      }
                    }
                  ],
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "number"
                              },
                              "name": {
                                "type": "string"
                              },
                              "hubType": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "name",
                              "hubType"
                            ]
                          }
                        },
                        "required": [
                          "id",
                          "type",
                          "attributes"
                        ]
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/profile": {
      "get": {
        "summary": "Fetch client profile",
        "tags": [
          "Profiles"
        ],
        "description": "Retrieve user's profile. User's profile includes additional information besides email that are used usually to better display user information, has more detailed contact information etc.\n      User profile includes name (as first name, and last name) which can be used for display purposes.",
        "operationId": "getProfile",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "16c4f1cf-37e9-468d-9cda-91b0a8eb21e5",
                    "type": "profile",
                    "attributes": {
                      "email": "john.doe.172@itsmycargo.test",
                      "firstName": "Guest",
                      "lastName": "User 172",
                      "phone": "081 9847079"
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/profile"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Invalid Credentials"
          }
        }
      },
      "patch": {
        "summary": "Update",
        "tags": [
          "Profiles"
        ],
        "description": "Update profile details.",
        "operationId": "updateProfile",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "df639bed-a9c1-4b05-84dc-9f5cee65533e",
                    "type": "profile",
                    "attributes": {
                      "email": "john@example.com",
                      "firstName": "John",
                      "lastName": "Doe",
                      "phone": "081 9847079"
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "example": {
                  "error": [
                    "Email has already been taken"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "profile": {
                    "type": "object",
                    "properties": {
                      "email": {
                        "description": "The new email of the client",
                        "type": "string",
                        "pattern": "email"
                      },
                      "firstName": {
                        "description": "First name of the user",
                        "type": "string"
                      },
                      "lastName": {
                        "description": "Last name of the user",
                        "type": "string"
                      },
                      "password": {
                        "description": "A new password for the user account",
                        "type": "string",
                        "minLength": 8
                      }
                    }
                  }
                },
                "required": [
                  "profile"
                ]
              }
            }
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/queries": {
      "post": {
        "summary": "Create new query",
        "tags": [
          "Query"
        ],
        "description": "Create new query",
        "operationId": "createQuery",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation (Cargo Item)",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "730616ea-3c69-4879-8cd3-d08a3d397dc6",
                    "type": "query",
                    "attributes": {
                      "id": "730616ea-3c69-4879-8cd3-d08a3d397dc6",
                      "aggregated": false,
                      "billable": true,
                      "loadType": "cargo_item",
                      "originName": "SEGOT",
                      "destinationName": "CNSHA",
                      "reference": null,
                      "modesOfTransport": [

                      ],
                      "client": {
                        "data": {
                          "id": "b3d5bfcf-19fa-4ff7-8bdc-ba18e6843c63",
                          "type": "client",
                          "attributes": {
                            "email": "john.doe.190@itsmycargo.test",
                            "organizationId": "54d99346-a9ca-42bd-897a-d2dcfbe6a510",
                            "firstName": "Guest",
                            "lastName": "User 190",
                            "phone": "081 9847079",
                            "companyName": "Guest Company 190"
                          }
                        },
                        "meta": {
                        },
                        "links": {
                        }
                      },
                      "offerId": null,
                      "issueDate": "2021-11-24T13:48:51.004Z",
                      "originId": null,
                      "destinationId": null,
                      "parentId": null,
                      "companyId": null,
                      "cargoReadyDate": "2021-11-24T14:48:50.988Z"
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "parentId": {
                    "type": "string",
                    "description": "The ID of the original Query that the current Query is based off.",
                    "nullable": true
                  },
                  "originId": {
                    "type": "string",
                    "description": "The Carta ID of the origin point"
                  },
                  "destinationId": {
                    "type": "string",
                    "description": "The Carta ID of the destination point"
                  },
                  "loadType": {
                    "type": "string",
                    "description": "The load type of the query"
                  },
                  "cargoReadyDate": {
                    "type": "string",
                    "description": "The date the cargo is expected to be ready for collection/drop off. This date will be used to find what rates are valid for the journey.",
                    "nullable": true
                  },
                  "items": {
                    "type": "array",
                    "items": {
                      "oneOf": [
                        {
                          "$ref": "#/components/schemas/item_lcl"
                        },
                        {
                          "$ref": "#/components/schemas/item_aggregated_lcl"
                        },
                        {
                          "$ref": "#/components/schemas/item_fcl"
                        }
                      ]
                    }
                  }
                },
                "required": [
                  "originId",
                  "destinationId",
                  "loadType",
                  "items"
                ]
              }
            }
          }
        }
      },
      "get": {
        "summary": "Fetch all queries",
        "tags": [
          "Query"
        ],
        "description": "Fetch all queries",
        "operationId": "getQueries",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "The attribute by which to sort the Queries",
            "enum": [
              "load_type",
              "last_name",
              "origin",
              "destination",
              "selected_date",
              "cargo_ready_date",
              "created_at"
            ],
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "direction",
            "in": "query",
            "description": "The defining whether the sorting is ascending or descending",
            "enum": [
              "asc",
              "desc"
            ],
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchBy",
            "in": "query",
            "description": "The attribute of the Query model to search through",
            "enum": [
              "client_email",
              "client_name",
              "company_name",
              "destination",
              "hs_code",
              "imo_class",
              "load_type",
              "origin",
              "reference"
            ],
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchQuery",
            "in": "query",
            "description": "The value we want to use in our search",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page of result requested",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "perPage",
            "in": "query",
            "description": "The number of results requested per page",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "f88e8df6-b6da-4afb-bb40-8d194d675c1e",
                      "type": "query",
                      "attributes": {
                        "id": "f88e8df6-b6da-4afb-bb40-8d194d675c1e",
                        "aggregated": false,
                        "billable": true,
                        "loadType": "cargo_item",
                        "originName": "aaaaa",
                        "destinationName": "aaaaa",
                        "reference": "REFERENCE-42",
                        "modesOfTransport": [
                          "ocean"
                        ],
                        "client": {
                          "data": {
                            "id": "8ffbd358-9979-4595-ad88-ad5ef4bc465e",
                            "type": "client",
                            "attributes": {
                              "email": "john.doe.197@itsmycargo.test",
                              "organizationId": "fd936a10-34ac-4144-9618-964ab73ca0bd",
                              "firstName": "Guest",
                              "lastName": "User 197",
                              "phone": "081 9847079",
                              "companyName": "Guest Company 197"
                            }
                          },
                          "meta": {
                          },
                          "links": {
                          }
                        },
                        "offerId": null,
                        "issueDate": "2021-11-24T11:48:51.365Z",
                        "originId": "GEOID-59",
                        "destinationId": "GEOID-60",
                        "parentId": null,
                        "companyId": "ecb9c2a3-45c9-488b-88fc-1d5188cb0745",
                        "cargoReadyDate": "2021-11-27T13:48:51.365Z"
                      }
                    },
                    {
                      "id": "0a37144c-0740-4f51-8a4a-98421fcca035",
                      "type": "query",
                      "attributes": {
                        "id": "0a37144c-0740-4f51-8a4a-98421fcca035",
                        "aggregated": false,
                        "billable": true,
                        "loadType": "cargo_item",
                        "originName": "bbbbb",
                        "destinationName": "bbbbb",
                        "reference": "REFERENCE-43",
                        "modesOfTransport": [
                          "ocean"
                        ],
                        "client": {
                          "data": {
                            "id": "8ffbd358-9979-4595-ad88-ad5ef4bc465e",
                            "type": "client",
                            "attributes": {
                              "email": "john.doe.197@itsmycargo.test",
                              "organizationId": "fd936a10-34ac-4144-9618-964ab73ca0bd",
                              "firstName": "Guest",
                              "lastName": "User 197",
                              "phone": "081 9847079",
                              "companyName": "Guest Company 197"
                            }
                          },
                          "meta": {
                          },
                          "links": {
                          }
                        },
                        "offerId": null,
                        "issueDate": "2021-11-24T08:48:51.451Z",
                        "originId": "GEOID-61",
                        "destinationId": "GEOID-62",
                        "parentId": null,
                        "companyId": "cee37c16-2189-4e7e-af18-586664544c29",
                        "cargoReadyDate": "2021-11-26T13:48:51.451Z"
                      }
                    }
                  ],
                  "meta": {
                  },
                  "links": {
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/queries/{id}": {
      "get": {
        "summary": "Fetch Query",
        "tags": [
          "Query"
        ],
        "description": "Fetch Query",
        "operationId": "getQuery",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Query ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "cbb40baf-4c9a-4530-bae3-6b4c3a261d5b",
                    "type": "query",
                    "attributes": {
                      "id": "cbb40baf-4c9a-4530-bae3-6b4c3a261d5b",
                      "aggregated": false,
                      "billable": true,
                      "loadType": "cargo_item",
                      "originName": "20457, Hamburg",
                      "destinationName": "Shanghai Airport",
                      "reference": "REFERENCE-46",
                      "modesOfTransport": [
                        "ocean"
                      ],
                      "client": {
                        "data": {
                          "id": "ed2b8ffd-253e-4af5-8039-8f53949d47ff",
                          "type": "client",
                          "attributes": {
                            "email": "john.doe.204@itsmycargo.test",
                            "organizationId": "a1ff7d9e-4d2d-41ab-bbe5-3c23d0529db7",
                            "firstName": "Guest",
                            "lastName": "User 204",
                            "phone": "081 9847079",
                            "companyName": "Guest Company 204"
                          }
                        },
                        "meta": {
                        },
                        "links": {
                        }
                      },
                      "offerId": null,
                      "issueDate": "2021-11-24T13:48:52.000Z",
                      "originId": "GEOID-67",
                      "destinationId": "GEOID-68",
                      "parentId": null,
                      "companyId": "a2edef07-b32b-494e-82e1-8d93e2c89d5e",
                      "cargoReadyDate": "2021-11-25T00:00:00.000Z"
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/quotations": {
      "post": {
        "summary": "Create new quotation",
        "tags": [
          "Quote"
        ],
        "description": "Create new quotation",
        "operationId": "createQuotation",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "2b6e5de3-452f-4782-8225-624597a78ff7",
                    "type": "query",
                    "attributes": {
                      "completed": true,
                      "loadType": "container",
                      "paymentTerms": null,
                      "companyName": null,
                      "parentId": null,
                      "selectedDate": "2021-11-24T14:48:54.367Z",
                      "user": {
                        "data": {
                          "id": "2d5b2ac0-d3d3-4827-9c5a-b75fbf44d342",
                          "type": "user",
                          "attributes": {
                            "email": "john.doe.242@itsmycargo.test",
                            "organizationId": "36cb4277-32a3-491c-b513-78ce800a1091",
                            "firstName": "Guest",
                            "lastName": "User 242",
                            "phone": "081 9847079",
                            "companyName": "Guest Company 242",
                            "role": null
                          }
                        },
                        "meta": {
                        },
                        "links": {
                        }
                      },
                      "creator": {
                        "data": {
                          "id": "2d5b2ac0-d3d3-4827-9c5a-b75fbf44d342",
                          "type": "user",
                          "attributes": {
                            "email": "john.doe.242@itsmycargo.test",
                            "organizationId": "36cb4277-32a3-491c-b513-78ce800a1091",
                            "firstName": "Guest",
                            "lastName": "User 242",
                            "phone": "081 9847079",
                            "companyName": "Guest Company 242",
                            "role": null
                          }
                        },
                        "meta": {
                        },
                        "links": {
                        }
                      },
                      "origin": {
                        "data": {
                          "id": "589",
                          "type": "nexus",
                          "attributes": {
                            "id": 589,
                            "name": "Gothenburg",
                            "latitude": 57.694253,
                            "longitude": 11.854048,
                            "modesOfTransport": [
                              "ocean"
                            ],
                            "countryName": "Sweden",
                            "locode": "SEGOT"
                          }
                        },
                        "meta": {
                        },
                        "links": {
                        }
                      },
                      "destination": {
                        "data": {
                          "id": "588",
                          "type": "nexus",
                          "attributes": {
                            "id": 588,
                            "name": "Shanghai",
                            "latitude": 31.2231338,
                            "longitude": 120.9162975,
                            "modesOfTransport": [
                              "ocean",
                              "ocean"
                            ],
                            "countryName": "China",
                            "locode": "CNSHA"
                          }
                        },
                        "meta": {
                        },
                        "links": {
                        }
                      },
                      "containers": {
                        "data": [
                          {
                            "id": "e15caa79-1f64-4b68-b784-bf232248a8a7",
                            "type": "fclCargoUnit",
                            "attributes": {
                              "shipmentId": "2b6e5de3-452f-4782-8225-624597a78ff7",
                              "sizeClass": "fcl_20",
                              "weightClass": null,
                              "payloadInKg": 1.0,
                              "tareWeight": null,
                              "grossWeight": null,
                              "dangerousGoods": false,
                              "cargoClass": "fcl_20",
                              "hsCodes": [

                              ],
                              "customsText": "",
                              "quantity": 1,
                              "unitPrice": {
                              },
                              "contents": "",
                              "equipmentType": "fcl_20"
                            }
                          }
                        ],
                        "meta": {
                        },
                        "links": {
                        }
                      },
                      "cargoItems": {
                        "data": [

                        ],
                        "meta": {
                        },
                        "links": {
                        }
                      },
                      "tenders": {
                        "data": [
                          {
                            "id": "424fca43-1650-4996-a7c0-f097647116b5",
                            "type": "result",
                            "attributes": {
                              "remarks": [

                              ],
                              "carrier": "IMC",
                              "modeOfTransport": "ocean",
                              "id": "424fca43-1650-4996-a7c0-f097647116b5",
                              "origin": "Gothenburg",
                              "destination": "Shanghai",
                              "originHub": "Gothenburg Port",
                              "destinationHub": "Gothenburg Port 50 Port",
                              "pickupAddress": null,
                              "deliveryAddress": null,
                              "serviceLevel": "standard",
                              "total": {
                                "currency": "EUR",
                                "amount": "250.0"
                              },
                              "quotationId": "2b6e5de3-452f-4782-8225-624597a78ff7",
                              "transshipment": null,
                              "estimated": false,
                              "validUntil": "2022-05-24T23:59:59.999Z",
                              "pickupTruckType": "",
                              "deliveryTruckType": "",
                              "pickupCarrier": null,
                              "deliveryCarrier": null,
                              "pickupService": null,
                              "deliveryService": null,
                              "exchangeRates": {
                              }
                            }
                          }
                        ],
                        "meta": {
                        },
                        "links": {
                        }
                      }
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "quote": {
                    "type": "object",
                    "properties": {
                      "selected_date": {
                        "type": "string"
                      },
                      "user_id": {
                        "type": "string",
                        "nullable": true
                      },
                      "origin": {
                        "type": "object",
                        "oneOf": [
                          {
                            "$ref": "#/components/schemas/locationV1Nexus"
                          },
                          {
                            "$ref": "#/components/schemas/locationV1Trucking"
                          }
                        ]
                      },
                      "destination": {
                        "type": "object",
                        "oneOf": [
                          {
                            "$ref": "#/components/schemas/locationV1Nexus"
                          },
                          {
                            "$ref": "#/components/schemas/locationV1Trucking"
                          }
                        ]
                      }
                    },
                    "required": [
                      "selected_date",
                      "origin",
                      "destination"
                    ]
                  },
                  "shipment_info": {
                    "type": "object",
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/v1ShipmentInfoCargoItems"
                      },
                      {
                        "$ref": "#/components/schemas/v1ShipmentInfoContainers"
                      }
                    ]
                  },
                  "async": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "organization_id",
                  "quote",
                  "shipment_info"
                ]
              }
            }
          }
        }
      },
      "get": {
        "summary": "Fetch quotations",
        "tags": [
          "Quote"
        ],
        "description": "Fetch all Quotations",
        "operationId": "fetchQuotations",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "description": "The beginning of the date range for filtering Queries by their CargoReadyDate",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "description": "The end of the date range for filtering Queries by their CargoReadyDate",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [

                  ],
                  "links": {
                    "first": null,
                    "prev": null,
                    "next": null,
                    "last": null
                  },
                  "meta": {
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/quotations/{id}": {
      "get": {
        "summary": "Fetch existing quotation",
        "tags": [
          "Quote"
        ],
        "description": "Fetch existing quotation",
        "operationId": "getQuotation",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Quotation ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organization_id",
            "in": "query",
            "description": "The current organization ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "51e6d6fe-4bd1-4dc2-9f68-8c1f3ea08751",
                    "type": "query",
                    "attributes": {
                      "completed": true,
                      "loadType": "cargo_item",
                      "paymentTerms": "Some quotation payment terms",
                      "companyName": "company81",
                      "parentId": null,
                      "selectedDate": "2021-11-25T00:00:00.000Z",
                      "user": {
                        "data": {
                          "id": "4d6c9b7c-9216-4276-aa9a-2bae7d5d4da7",
                          "type": "user",
                          "attributes": {
                            "email": "john.doe.274@itsmycargo.test",
                            "organizationId": "50cf78e5-6bf3-40e5-9c13-372b9ffc0517",
                            "firstName": "Guest",
                            "lastName": "User 274",
                            "phone": "081 9847079",
                            "companyName": "Guest Company 274",
                            "role": null
                          }
                        },
                        "meta": {
                        },
                        "links": {
                        }
                      },
                      "creator": {
                        "data": {
                          "id": "00c12f31-67a1-4fd6-ab5b-681967fb26a5",
                          "type": "user",
                          "attributes": {
                            "email": "john.doe.275@itsmycargo.test",
                            "organizationId": "50cf78e5-6bf3-40e5-9c13-372b9ffc0517",
                            "firstName": "Guest",
                            "lastName": "User 275",
                            "phone": "081 9847079",
                            "companyName": "Guest Company 275",
                            "role": null
                          }
                        },
                        "meta": {
                        },
                        "links": {
                        }
                      },
                      "origin": {
                        "data": {
                          "id": "4",
                          "type": "address",
                          "attributes": {
                            "longitude": 11.854048,
                            "latitude": 57.694253,
                            "geocodedAddress": "438 80 Landvetter, Sweden",
                            "street": null,
                            "city": "",
                            "country": "Sweden",
                            "postalCode": "",
                            "name": "438 80 Landvetter, Sweden"
                          }
                        },
                        "meta": {
                        },
                        "links": {
                        }
                      },
                      "destination": {
                        "data": {
                          "id": "0",
                          "type": "address",
                          "attributes": {
                            "longitude": 121.4867159,
                            "latitude": 31.232014,
                            "geocodedAddress": "88 Henan Middle Road, Shanghai",
                            "street": null,
                            "city": "Shanghai",
                            "country": "China",
                            "postalCode": "20001",
                            "name": "88 Henan Middle Road, Shanghai"
                          }
                        },
                        "meta": {
                        },
                        "links": {
                        }
                      },
                      "containers": {
                        "data": [

                        ],
                        "meta": {
                        },
                        "links": {
                        }
                      },
                      "cargoItems": {
                        "data": [
                          {
                            "id": "27e6e495-4694-429e-88b1-970c5dede0ce",
                            "type": "lclCargoUnit",
                            "attributes": {
                              "payloadInKg": "1000.0",
                              "length": "100.0",
                              "width": "100.0",
                              "height": "100.0",
                              "dangerousGoods": false,
                              "cargoClass": "lcl",
                              "contents": "",
                              "hsCodes": [

                              ],
                              "cargoItemTypeId": null,
                              "customsText": "",
                              "chargeableWeight": "1000.0",
                              "stackable": true,
                              "quantity": 1,
                              "unitPrice": {
                              },
                              "cargoItemType": {
                                "id": null,
                                "description": "Pallet"
                              }
                            }
                          }
                        ],
                        "meta": {
                        },
                        "links": {
                        }
                      },
                      "tenders": {
                        "data": [
                          {
                            "id": "793fd8ce-0b78-451d-a3c5-59bcf4ec7ae0",
                            "type": "result",
                            "attributes": {
                              "remarks": [

                              ],
                              "carrier": "MSC",
                              "modeOfTransport": "ocean",
                              "id": "793fd8ce-0b78-451d-a3c5-59bcf4ec7ae0",
                              "origin": "438 80 Landvetter, Sweden",
                              "destination": "88 Henan Middle Road, Shanghai",
                              "originHub": "Gothenburg Port 73 Port",
                              "destinationHub": "Gothenburg Port 74 Port",
                              "pickupAddress": "438 80 Landvetter, Sweden",
                              "deliveryAddress": "88 Henan Middle Road, Shanghai",
                              "serviceLevel": "standard",
                              "total": {
                                "currency": "EUR",
                                "amount": "180.0"
                              },
                              "quotationId": "51e6d6fe-4bd1-4dc2-9f68-8c1f3ea08751",
                              "transshipment": null,
                              "estimated": false,
                              "validUntil": "2021-12-08T13:48:57.240Z",
                              "pickupTruckType": "",
                              "deliveryTruckType": "",
                              "pickupCarrier": "SACO",
                              "deliveryCarrier": "SACO",
                              "pickupService": "standard",
                              "deliveryService": "standard",
                              "exchangeRates": {
                                "usd": "0.833333",
                                "base": "EUR"
                              }
                            }
                          }
                        ],
                        "meta": {
                        },
                        "links": {
                        }
                      }
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/quotations/{id}/download": {
      "post": {
        "summary": "Download quotation as PDF",
        "tags": [
          "Quote"
        ],
        "description": "Download quotation as PDF",
        "operationId": "downloadQuotation",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Quotation ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organization_id",
            "in": "query",
            "description": "The current organization ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "format",
            "in": "query",
            "description": "The desired download format (pdf/xlsx)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "340f0359-1e4a-4f0b-a091-1004a07eab64",
                    "type": "file",
                    "attributes": {
                      "url": "http://localhost:3000/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBcjRIIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--05b074e72914da287df04e35dfdc434b3fa55b7b/offer_340f0359-1e4a-4f0b-a091-1004a07eab64.pdf?disposition=attachment"
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "tenders": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "tenders"
                ]
              }
            }
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/queries/{query_id}/requests": {
      "post": {
        "summary": "Create a Request",
        "tags": [
          "Quote"
        ],
        "description": "Creates a Journey::Request with the provided information",
        "operationId": "createRequest",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query_id",
            "in": "path",
            "description": "The current ID of the Journey::Query you wish to make a Request over.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "status": 200
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/queries/{query_id}/results": {
      "get": {
        "summary": "Fetch Results for the query",
        "tags": [
          "Results"
        ],
        "description": "Fetch Results for the query",
        "operationId": "getResults",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query_id",
            "in": "path",
            "description": "Query ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "c3f7274e-b8dd-44f8-923b-b5f8e710773f",
                      "type": "restful",
                      "attributes": {
                        "id": "c3f7274e-b8dd-44f8-923b-b5f8e710773f"
                      }
                    }
                  ],
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/restfulResponse"
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/results/{id}": {
      "get": {
        "summary": "Fetch Result",
        "tags": [
          "Results"
        ],
        "description": "Fetch Result",
        "operationId": "getResult",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Result ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "333b623a-386f-48c4-9f40-4e551075c997",
                    "type": "result",
                    "attributes": {
                      "id": "333b623a-386f-48c4-9f40-4e551075c997",
                      "carrier": "MSC",
                      "carrierLogo": "http://localhost:3000/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBc1FIIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--307a501337a1095df795943f025faa629b7abf94/test-image.jpg",
                      "modesOfTransport": [
                        "ocean"
                      ],
                      "total": {
                        "value": "36.0",
                        "currency": "EUR"
                      },
                      "serviceLevel": "standard",
                      "validUntil": "2021-12-22T13:49:08.952Z",
                      "transitTime": null,
                      "cargoReadyDate": "2021-11-25T00:00:00.000Z",
                      "cargoDeliveryDate": "2021-12-15T00:00:00.000Z",
                      "origin": "Hamburg",
                      "destination": "Hamburg",
                      "transshipment": null,
                      "numberOfStops": 0,
                      "queryId": "eb955c14-e84b-4733-aa84-abd607cac717"
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "$ref": "#/components/schemas/result"
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/results/{result_id}/route_sections": {
      "get": {
        "summary": "Fetch RouteSection for the Result",
        "tags": [
          "Query"
        ],
        "description": "Fetch RouteSection for the Result",
        "operationId": "getRouteSections",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "result_id",
            "in": "path",
            "description": "Result ID of the RouteSections",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "b5d4303b-a1cd-495f-85e0-2bc205264bf7",
                      "type": "routeSection",
                      "attributes": {
                        "id": "b5d4303b-a1cd-495f-85e0-2bc205264bf7",
                        "service": "standard",
                        "carrier": "Carrier - 23",
                        "carrierLogo": "http://localhost:3000/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBc2NIIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b58e65781bce1be016e0a0ed50b0c4f34debf6db/test-image.jpg",
                        "modeOfTransport": "ocean",
                        "transshipment": null,
                        "transitTime": null,
                        "origin": {
                          "locode": "DEHAM",
                          "city": "",
                          "coordinates": "POINT (11.854048 57.694253)",
                          "address": "Hamburg"
                        },
                        "destination": {
                          "locode": "DEHAM",
                          "city": "",
                          "coordinates": "POINT (11.854048 57.694253)",
                          "address": "Hamburg"
                        }
                      }
                    }
                  ],
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "attributes": {
                            "$ref": "#/components/schemas/routeSection"
                          }
                        },
                        "required": [
                          "attributes"
                        ]
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/quotations/{quotation_id}/schedules/{id}": {
      "get": {
        "summary": "Fetch available schedules",
        "tags": [
          "Quote"
        ],
        "description": "Fetch available schedules",
        "operationId": "getSchedule",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quotation_id",
            "in": "path",
            "description": "The quotation ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The quotation ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "198",
                      "type": "trip",
                      "attributes": {
                        "closing": "2021-11-25",
                        "start": "2021-11-29",
                        "end": "2021-12-29",
                        "service": "slowly",
                        "carrier": "Hapag Lloyd",
                        "vessel": null,
                        "voyageCode": null,
                        "tenderId": "39a7b3be-10b5-4f6c-8dcd-58a93306bb63"
                      }
                    },
                    {
                      "id": "199",
                      "type": "trip",
                      "attributes": {
                        "closing": "2021-11-30",
                        "start": "2021-12-04",
                        "end": "2022-01-03",
                        "service": "slowly",
                        "carrier": "Hapag Lloyd",
                        "vessel": null,
                        "voyageCode": null,
                        "tenderId": "39a7b3be-10b5-4f6c-8dcd-58a93306bb63"
                      }
                    }
                  ],
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "carrier": {
                                "type": "string"
                              },
                              "closing": {
                                "type": "string"
                              },
                              "end": {
                                "type": "string"
                              },
                              "service": {
                                "type": "string"
                              },
                              "start": {
                                "type": "string"
                              },
                              "tenderId": {
                                "type": "string"
                              },
                              "vessel": {
                                "type": "string",
                                "nullable": true
                              },
                              "voyageCode": {
                                "type": "string",
                                "nullable": true
                              }
                            },
                            "required": [
                              "carrier",
                              "closing",
                              "end",
                              "service",
                              "start",
                              "tenderId",
                              "vessel",
                              "voyageCode"
                            ]
                          }
                        },
                        "required": [
                          "id",
                          "type",
                          "attributes"
                        ]
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/itineraries/{id}/schedules/enabled": {
      "get": {
        "summary": "Fetch status of schedules",
        "tags": [
          "Quote"
        ],
        "description": "Fetch status of schedules",
        "operationId": "getScheduleEnabled",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The itinerary ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "enabled": false
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "enabled": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "enabled"
                      ]
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/results/{result_id}/schedules": {
      "get": {
        "summary": "Fetch schedules for a given result",
        "tags": [
          "Schedule"
        ],
        "description": "Fetch all valid schedules for result",
        "operationId": "getSchedules",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "result_id",
            "in": "path",
            "description": "The result ID for which the schedules are to be fetched",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [

                  ],
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/schedule"
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/results/{result_id}/schedules/{id}": {
      "get": {
        "summary": "Fetch schedule the given schedule id",
        "tags": [
          "Schedule"
        ],
        "description": "Fetch all valid schedules for result",
        "operationId": "getSchedule",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "result_id",
            "in": "path",
            "description": "The result ID for which the schedules are to be fetched",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The existing schedule",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "207ec88e-d67a-41aa-b7be-94d2b0bc93c4",
                    "type": "schedule",
                    "attributes": {
                      "id": "207ec88e-d67a-41aa-b7be-94d2b0bc93c4",
                      "vesselName": "saco",
                      "vesselCode": "ab123",
                      "voyageCode": "12345",
                      "origin": "20457, hamburg",
                      "destination": "shanghai airport",
                      "destinationArrival": "2021-12-15T00:00:00.000Z",
                      "originDeparture": "2021-11-25T00:00:00.000Z",
                      "closingDate": "2021-11-25T00:00:00.000Z",
                      "carrier": "msc",
                      "service": "standard",
                      "modeOfTransport": "ocean",
                      "transitTime": 20
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "items": {
                        "$ref": "#/components/schemas/schedule"
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/scope": {
      "get": {
        "summary": "Fetch Scope for the Organization",
        "tags": [
          "Scope"
        ],
        "description": "Fetch Scope for the Organization",
        "operationId": "getScope",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "bd147738-a4e3-442f-8958-9641f09dcdae",
                    "type": "scope",
                    "attributes": {
                      "links": {
                        "about": "",
                        "terms": "",
                        "legal": "",
                        "privacy": ""
                      },
                      "id": "7d4bc0ed-3a9f-4b2d-b32f-a459bc164696",
                      "authMethods": [
                        "password"
                      ],
                      "loginSamlText": "",
                      "loginMandatory": false
                    }
                  },
                  "links": {
                    "about": "",
                    "terms": "",
                    "legal": "",
                    "privacy": ""
                  },
                  "meta": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/scope"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/me/settings": {
      "get": {
        "summary": "Fetch user settings",
        "tags": [
          "Users"
        ],
        "description": "Fetch current settings for the current user. Settings contains information about user's preferred language and\nlocale.\n",
        "operationId": "getSettings",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "7113b2d1-26db-4400-ba35-7cc11cf25d40",
                    "type": "setting",
                    "attributes": {
                      "language": "en-GB",
                      "locale": "en-GB"
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/settings"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Invalid Credentials"
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/shipment_requests/{shipment_request_id}": {
      "get": {
        "summary": "Fetch a shipment request",
        "tags": [
          "ShipmentRequests"
        ],
        "description": "Fetch a specific shipment request",
        "operationId": "getShipmentRequesrt",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shipment_request_id",
            "in": "path",
            "description": "The shipment request ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "b70010e6-eeb8-464c-b907-1351f03b796e",
                    "type": "shipmentRequest",
                    "attributes": {
                      "resultId": "35cf609c-aca2-48fe-aa7c-6fa3654ef6d3",
                      "companyId": "fcd8554b-d6d9-4f36-92aa-2d349c5d505c",
                      "clientId": "5b1beb82-b4d0-44dc-a45b-b8f2eb9735aa",
                      "withInsurance": false,
                      "withCustomsHandling": false,
                      "status": "requested",
                      "preferredVoyage": "1234",
                      "notes": "",
                      "commercialValue": {
                        "value": 10,
                        "currency": "eur"
                      }
                    },
                    "relationships": {
                      "contacts": {
                        "data": [
                          {
                            "id": "61b62121-90d3-4bea-9ee0-4f79178e6b1b",
                            "type": "contact"
                          }
                        ]
                      },
                      "documents": {
                        "data": [
                          {
                            "id": "0b69ba98-3504-4a21-93cb-57d8c015db7b",
                            "type": "document"
                          }
                        ]
                      }
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "attributes": {
                          "$ref": "#/components/schemas/shipment_request"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "not found operation",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "message": "Couldn't find Journey::ShipmentRequest with 'id'=non-existent-id",
                  "status": "not_found",
                  "code": 404
                }
              }
            }
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/results/{result_id}/shipment_requests": {
      "post": {
        "summary": "Create a shipment request",
        "tags": [
          "ShipmentRequests"
        ],
        "description": "Create a shipment request",
        "operationId": "createShipmentRequest",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "result_id",
            "in": "path",
            "description": "The ID of the Result you wish to create ShipmentRequest from",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "b643b331-bc68-4b18-b5be-5723a6e14931",
                    "type": "shipmentRequest",
                    "attributes": {
                      "resultId": "b0573283-6e99-4748-aeaa-aba6e599683b",
                      "companyId": "b659fd68-7148-4595-9a20-11b1c09e8093",
                      "clientId": "33894dd7-2e53-4f41-bac8-0b28d3979829",
                      "withInsurance": false,
                      "withCustomsHandling": false,
                      "status": "requested",
                      "preferredVoyage": "1234",
                      "notes": "Some notes",
                      "commercialValue": {
                        "value": 10,
                        "currency": "eur"
                      }
                    },
                    "relationships": {
                      "contacts": {
                        "data": [
                          {
                            "id": "29ba05ac-adcf-47de-97c3-6a1546f414ec",
                            "type": "contact"
                          }
                        ]
                      },
                      "documents": {
                        "data": [

                        ]
                      }
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "attributes": {
                          "$ref": "#/components/schemas/shipment_request"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "shipmentRequest": {
                    "$ref": "#/components/schemas/shipment_request_params"
                  },
                  "commodityInfos": {
                    "type": "array",
                    "description": "Commodity infos",
                    "items": {
                      "$ref": "#/components/schemas/commodityInfo"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/trucking_availabilities": {
      "get": {
        "summary": "Fetch Available Truckings",
        "tags": [
          "Quote"
        ],
        "description": "Fetch Available Truckings",
        "operationId": "getTruckingAvailabilities",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lat",
            "in": "query",
            "description": "Latitude",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lng",
            "in": "query",
            "description": "Longitude",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "load_type",
            "in": "query",
            "description": "Load type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organization_id",
            "in": "query",
            "description": "Organiztio nID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "client",
            "in": "query",
            "description": "The client id of the query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "target",
            "in": "query",
            "description": "Target",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "truckTypes": [
                    "default"
                  ],
                  "truckingAvailable": true
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "truckTypes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "truckingAvailable": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "truckTypes",
                    "truckingAvailable"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/trucking_counterparts": {
      "get": {
        "summary": "Fetch counterparts fgor trucking",
        "tags": [
          "Quote"
        ],
        "description": "Fetch counterparts fgor trucking",
        "operationId": "getTruckingCounterparts",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lat",
            "in": "query",
            "description": "Latitude",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lng",
            "in": "query",
            "description": "Longitude",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "load_type",
            "in": "query",
            "description": "Load type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organization_id",
            "in": "query",
            "description": "Organization ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "client",
            "in": "query",
            "description": "The client id of the query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "target",
            "in": "query",
            "description": "Target",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "countryCodes": [

                  ],
                  "truckTypes": [

                  ],
                  "truckingAvailable": false
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "countryCodes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "truckTypes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "truckingAvailable": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "countryCodes",
                    "truckTypes",
                    "truckingAvailable"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/trucking_countries": {
      "get": {
        "summary": "Fetch enabled countries for organization",
        "tags": [
          "Trucking"
        ],
        "description": "Fetch enabled countries for organization",
        "operationId": "getTruckingCountries",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "load_type",
            "in": "query",
            "description": "Load Type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "location_type",
            "in": "query",
            "description": "Location Type",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "293",
                      "type": "country",
                      "attributes": {
                        "name": "Sweden",
                        "code": "SE",
                        "flag": "https://restcountries.eu/data/sek.svg"
                      }
                    }
                  ],
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/country"
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Invalid Credentials"
          }
        }
      }
    },
    "/v1/uploads": {
      "post": {
        "summary": "Create a new upload",
        "tags": [
          "Uploads (V1)"
        ],
        "description": "Create a new upload",
        "operationId": "createUpload",
        "security": [
          {
            "bearerAuth": [

            ]
          }
        ],
        "parameters": [

        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "example": {
                  "message": "File created."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request",
            "content": {
              "application/json": {
                "example": {
                  "message": "Unauthorized Request"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "message": "param is missing or the value is empty: json_data",
                  "status": "bad_request",
                  "code": 400
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "jsonData": {
                    "type": "string",
                    "description": "Provide the data to upload as `application/json`. Serialize the payload as a value for the key `jsonData` (case invariant). Example cURL request:\n```\ncurl --location --request POST 'https://api.itsmycargo.com/v1/uploads' \\\n   --header 'Authorization: Bearer aa0c9a1d-7b50-4c14-ba8e-21a329877ddd' \\\n   --header 'Content-Type: application/json' \\\n   --data-raw '{\n   \"jsonData\": \"{\\\"foo\\\":123}\"\n   }'\n```"
                  }
                }
              }
            }
          },
          "required": true
        }
      }
    },
    "/v2/organizations/{organization_id}/uploads": {
      "post": {
        "summary": "Create a new upload",
        "tags": [
          "Uploads (V2)"
        ],
        "description": "Create a new upload",
        "operationId": "createUpload",
        "security": [
          {
            "bearerAuth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "b484ffb1-f29c-4575-973d-45eeae6bffcf",
                    "type": "uploads",
                    "relationships": {
                      "file": {
                        "data": {
                          "id": "00e2f6d1-42a1-4e29-9905-44daf23a1e02",
                          "type": "file"
                        }
                      }
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "description": "Provide the data as a downloadable url under the `file` parameter."
                  }
                }
              }
            }
          },
          "required": true
        }
      }
    },
    "/v2/organizations/{organization_id}/uploads/{id}": {
      "get": {
        "summary": "Fetch Upload",
        "tags": [
          "Uploads (V2)"
        ],
        "description": "Fetch Upload",
        "operationId": "getQuery",
        "security": [
          {
            "bearerAuth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Upload ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "id": "266cf0ca-02ca-44d1-b427-633da294ae75",
                  "organization_id": "70aedad7-cd5a-427f-87ad-3d0508082be8",
                  "file_id": "2ca4c737-7ae2-46e0-ae46-12e27550f664",
                  "user_id": "f4075fa9-fb14-4506-b4f0-4ef46487c6a3",
                  "status": "not_started",
                  "last_job_id": "63546232-fc34-438e-afd1-fe5c33896931",
                  "created_at": "2021-11-24T13:49:14.595Z",
                  "updated_at": "2021-11-24T13:49:14.595Z"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          }
        }
      }
    },
    "/v1/me": {
      "get": {
        "summary": "Fetch information of current user",
        "tags": [
          "Users"
        ],
        "description": "Fetch information of current user",
        "operationId": "getCurrentUser",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "06c29f96-b939-4b5e-b0c7-256d4c380e24",
                    "type": "user",
                    "attributes": {
                      "email": "john.doe.13@itsmycargo.test",
                      "organizationId": "289b0e39-ea45-47cb-8986-a846f90a73ec",
                      "firstName": "Guest",
                      "lastName": "User 13",
                      "phone": "081 9847079",
                      "companyName": "Guest Company 13",
                      "role": null
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "attributes": {
                          "type": "object",
                          "properties": {
                            "email": {
                              "type": "string",
                              "description": "User's primary email address. This is\n                             validated address that can be used for reaching out."
                            },
                            "organizationId": {
                              "description": "If current user is client, this is the\n                             organization user account is linked with.",
                              "type": "string",
                              "nullable": true
                            },
                            "firstName": {
                              "description": "User's first name, usually given name.",
                              "type": "string"
                            },
                            "lastName": {
                              "description": "User's last name, usually family name.",
                              "type": "string"
                            },
                            "phone": {
                              "description": "User's phone number if given. This generic\n                             information that is not validated or structured.",
                              "type": "string",
                              "nullable": true
                            },
                            "companyName": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "email",
                            "organizationId",
                            "firstName",
                            "lastName",
                            "phone",
                            "companyName"
                          ]
                        }
                      },
                      "required": [
                        "id",
                        "type",
                        "attributes"
                      ]
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Invalid Credentials"
          }
        }
      }
    },
    "/v2/users/validate": {
      "get": {
        "summary": "Validate user for the specified email",
        "tags": [
          "Login"
        ],
        "description": "Verify user for the email",
        "operationId": "verify_user",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "description": "email of the users_user",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "15b54e5b-e969-4f91-bda8-b541a5dcfe2a",
                    "type": "user",
                    "attributes": {
                      "id": "15b54e5b-e969-4f91-bda8-b541a5dcfe2a",
                      "firstName": "Guest",
                      "authMethods": [

                      ],
                      "samlIntegrations": [

                      ]
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "properties": {
                        "first_name": {
                          "description": "first name of the user with the specified email",
                          "type": "string"
                        },
                        "auth_methods": {
                          "description": "supported auth methods for the user which depends on the organization.",
                          "type": "array"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    }
  }
}