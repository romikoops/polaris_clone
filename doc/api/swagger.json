{
  "openapi": "3.0.1",
  "info": {
    "title": "Polaris API",
    "description": "ItsMyCargo Backend API",
    "termsOfService": "https://www.itsmycargo.com/terms",
    "contact": {
      "name": "API Support",
      "url": "https://support.itsmycargo.com",
      "email": "support@itsmycargo.com"
    },
    "version": "2022-05-11"
  },
  "tags": [
    {
      "name": "Ahoy",
      "description": "Ahoy"
    },
    {
      "name": "Authentication",
      "description": "Endpoints related to the current user and authentication."
    },
    {
      "name": "CargoUnits",
      "description": "CargoUnits"
    },
    {
      "name": "Clients",
      "description": "Clients"
    },
    {
      "name": "Dashboard",
      "description": "Dashboard"
    },
    {
      "name": "Groups",
      "description": "Groups"
    },
    {
      "name": "Query",
      "description": "Query"
    },
    {
      "name": "Quote",
      "description": "Quote"
    },
    {
      "name": "Results",
      "description": "Results"
    },
    {
      "name": "Trucking",
      "description": "Trucking"
    },
    {
      "name": "Users",
      "description": "Users"
    }
  ],
  "components": {
    "schemas": {
      "errors": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "object",
            "properties": {
              "message": {
                "description": "error message",
                "type": "string"
              }
            },
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      "company": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the company",
            "type": "string"
          },
          "type": {
            "description": "Generic type of the company",
            "type": "string"
          },
          "attributes": {
            "id": {
              "description": "Unique identifier of the company",
              "type": "string"
            },
            "email": {
              "description": "email of the company",
              "type": "string"
            },
            "name": {
              "description": "name of the company",
              "type": "string"
            },
            "paymentTerms": {
              "description": "payment terms set out by the company",
              "type": "string"
            },
            "phone": {
              "description": "phone number of the company",
              "type": "string"
            },
            "vatNumber": {
              "description": "VAT number of the company",
              "type": "string"
            },
            "contactPersonName": {
              "description": "The name of the contact person/employee from the company",
              "type": "string"
            },
            "contactPhone": {
              "description": "The phone number of the contact person from the company",
              "type": "string"
            },
            "contactEmail": {
              "description": "The email of the contact person from the company",
              "type": "string"
            },
            "registrationNumber": {
              "description": "he registration number set by company",
              "type": "string"
            }
          }
        }
      },
      "request_for_quotation": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier for request_for_quotation",
            "type": "string"
          },
          "type": {
            "description": "Generic type of the request_for_quotation",
            "type": "string"
          },
          "attributes": {
            "id": {
              "description": "Unique identifier for request_for_quotation",
              "type": "string"
            },
            "email": {
              "description": "Email of the client requesting for quotation.",
              "type": "string"
            },
            "fullName": {
              "description": "Full Name of the client requesting for quotation.",
              "type": "string"
            },
            "phone": {
              "description": "Phone number of the client requesting for quotation.",
              "type": "string"
            },
            "companyName": {
              "description": "Company name of the client. For a guest user, company name is empty",
              "type": "string"
            },
            "organizationId": {
              "description": "Organization ID",
              "type": "string"
            },
            "queryId": {
              "description": "Query ID",
              "type": "string"
            }
          }
        }
      },
      "file_descriptor": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier for file_descriptor",
            "type": "string"
          },
          "type": {
            "description": "Generic type of the file_descriptor",
            "type": "string"
          },
          "attributes": {
            "organizationId": {
              "description": "Organization ID",
              "type": "string"
            },
            "filePath": {
              "description": "File path description of a file with its name.",
              "type": "string"
            },
            "originator": {
              "description": "Datasource  of the file ex: 'SFTP'.",
              "type": "string"
            },
            "source": {
              "description": "source folder name or bucket name depending on the source_type",
              "type": "string"
            },
            "source_type": {
              "description": "describes the source ex : S3_BUCKET",
              "type": "string"
            },
            "fileCreatedAt": {
              "description": "The birth date and time of the file even before it was synced.",
              "type": "string"
            },
            "fileUpdatedAt": {
              "description": "File updated at date and time in its originator.",
              "type": "string"
            },
            "syncedAt": {
              "description": "Date and time when the file was synced to the source.",
              "type": "string"
            }
          }
        }
      },
      "contact": {
        "type": "object",
        "properties": {
          "address_line_1": {
            "description": "Address line 1",
            "nullable": true,
            "type": "string"
          },
          "address_line_2": {
            "description": "address line 2",
            "nullable": true,
            "type": "string"
          },
          "address_line_3": {
            "description": "address line 3",
            "nullable": true,
            "type": "string"
          },
          "city": {
            "description": "City",
            "nullable": true,
            "type": "string"
          },
          "company_name": {
            "description": "Company name",
            "nullable": true,
            "type": "string"
          },
          "country_code": {
            "description": "Country code",
            "nullable": true,
            "type": "string"
          },
          "email": {
            "description": "Email address",
            "type": "string"
          },
          "function": {
            "description": "Function",
            "nullable": true,
            "type": "string"
          },
          "geocoded_address": {
            "description": "Geocoded address",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "Name",
            "nullable": true,
            "type": "string"
          },
          "phone": {
            "description": "Phone",
            "nullable": true,
            "type": "string"
          },
          "point": {
            "description": "Point",
            "nullable": true,
            "type": "string"
          },
          "postal_code": {
            "description": "Postal code",
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "email"
        ]
      },
      "shipment_request_index": {
        "type": "object",
        "properties": {
          "result_id": {
            "description": "Result ID",
            "type": "string"
          },
          "company_id": {
            "description": "Company ID",
            "type": "string"
          },
          "client_id": {
            "description": "Client ID",
            "type": "string"
          },
          "with_insurance": {
            "description": "Any insurance on the cargo",
            "type": "boolean",
            "nullable": true
          },
          "with_customs_handling": {
            "description": "Any customs handling service needed",
            "type": "boolean",
            "nullable": true
          },
          "status": {
            "description": "Status of the shipment request",
            "type": "string",
            "nullable": true
          },
          "preferred_voyage": {
            "description": "Preferred voyage",
            "type": "string",
            "nullable": true
          },
          "notes": {
            "description": "Notes about the shipment request",
            "type": "string",
            "nullable": true
          },
          "originHub": {
            "description": "Name of the Hub the shipment departs from",
            "type": "string"
          },
          "destinationHub": {
            "description": "Name of the Hub the shipment arrives at.",
            "type": "string"
          },
          "originPickup": {
            "description": "Address where the cargo will be collected if Pre-Carriage is requested",
            "type": "string",
            "nullable": true
          },
          "destinationDropoff": {
            "description": "Address where the cargo will be dropped off if On-Carriage is requested",
            "type": "string",
            "nullable": true
          },
          "requestedAt": {
            "description": "Date the ShipmentRequest was made",
            "type": "string"
          },
          "reference": {
            "description": "The internal reference number from the LineItemSet used to generate the ShipmentRequest",
            "type": "string"
          }
        }
      },
      "shipment_request": {
        "type": "object",
        "properties": {
          "result_id": {
            "description": "Result ID",
            "type": "string"
          },
          "company_id": {
            "description": "Company ID",
            "type": "string"
          },
          "client_id": {
            "description": "Client ID",
            "type": "string"
          },
          "with_insurance": {
            "description": "Any insurance on the cargo",
            "type": "boolean",
            "nullable": true
          },
          "with_customs_handling": {
            "description": "Any customs handling service needed",
            "type": "boolean",
            "nullable": true
          },
          "status": {
            "description": "Status of the shipment request",
            "type": "string",
            "nullable": true
          },
          "preferred_voyage": {
            "description": "Preferred voyage",
            "type": "string",
            "nullable": true
          },
          "notes": {
            "description": "Notes about the shipment request",
            "type": "string",
            "nullable": true
          },
          "commercial_value": {
            "description": "Commercial value with integer and currency",
            "type": "object",
            "nullable": true
          },
          "contacts_attributes": {
            "description": "Array of contact attributes as objects",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/contact"
            }
          }
        }
      },
      "shipment_request_params": {
        "type": "object",
        "properties": {
          "withInsurance": {
            "type": "boolean",
            "nullable": true,
            "description": "Any insurance on the cargo"
          },
          "withCustomsHandling": {
            "type": "boolean",
            "nullable": true,
            "description": "Any customs handling service needed"
          },
          "preferredVoyage": {
            "type": "string",
            "nullable": true,
            "description": "Preferred voyage"
          },
          "notes": {
            "type": "string",
            "nullable": true,
            "description": "notes about the shipment request"
          },
          "commercialValueCents": {
            "nullable": true,
            "type": "integer",
            "description": "Commercial value as an integer expressed as cent or other equivalent base unit"
          },
          "commercialValueCurrency": {
            "nullable": true,
            "type": "string",
            "description": "Commercial value's currency in three letter ISO format"
          },
          "contactsAttributes": {
            "type": "array",
            "description": "Contact info for client",
            "items": {
              "$ref": "#/components/schemas/contact"
            }
          },
          "documents": {
            "type": "array",
            "description": "Multipart form upload of files to be attached to the shipment request",
            "items": {
              "type": "binary"
            }
          }
        },
        "required": [
          "withInsurance",
          "withCustomsHandling",
          "preferredVoyage",
          "notes",
          "commercialValueCents",
          "commercialValueCurrency",
          "contactsAttributes"
        ]
      },
      "theme": {
        "type": "object",
        "properties": {
          "organization_id": {
            "description": "Organization ID",
            "type": "string"
          },
          "name": {
            "description": "Name of the organization",
            "type": "string"
          },
          "background": {
            "description": "Link to uploaded background image",
            "type": "string",
            "nullable": true
          },
          "small_logo": {
            "description": "Small size logo of the organization",
            "type": "string",
            "nullable": true
          },
          "white_logo": {
            "large_logo": "Logo with white background",
            "type": "string",
            "nullable": true
          },
          "wide_logo": {
            "description": "Wide logo of the organization",
            "type": "string",
            "nullable": true
          },
          "landing_page_variant": {
            "description": "Custom theme landing page variants with options such as `default` `quotation_plugin` and `light`",
            "type": "string",
            "enum": [
              "default",
              "quotation_plugin",
              "light"
            ],
            "nullable": true
          },
          "landing_page_hero": {
            "description": "Main landing page similar to background",
            "type": "string",
            "nullable": true
          },
          "landing_page_one": {
            "description": "First landing page image",
            "type": "string",
            "nullable": true
          },
          "landing_page_two": {
            "description": "Second landing page image",
            "type": "string",
            "nullable": true
          },
          "landing_page_three": {
            "description": "Third landing page image",
            "type": "string",
            "nullable": true
          },
          "emails": {
            "description": "List of emails",
            "type": "object",
            "items": {
              "sales": {
                "description": "sales email",
                "type": "object",
                "items": {
                  "general": {
                    "description": "general sales email",
                    "type": "object"
                  }
                }
              },
              "support": {
                "description": "support email",
                "type": "object",
                "items": {
                  "general": {
                    "description": "general support email",
                    "type": "object"
                  }
                }
              }
            }
          },
          "websites": {
            "description": "websites of the organzation",
            "type": "object",
            "nullable": true
          },
          "phones": {
            "description": "phone numbers of the organization",
            "type": "object",
            "nullable": true,
            "items": {
              "main": {
                "description": "organizations main phone number",
                "type": "string"
              },
              "support": {
                "description": "organizations support phone number",
                "type": "string"
              }
            }
          },
          "addresses": {
            "description": "phone numbers of the organization",
            "type": "object",
            "nullable": true,
            "items": {
              "main": {
                "description": "organizations main address",
                "type": "string"
              },
              "components": {
                "description": "organization address components",
                "type": "array"
              }
            }
          }
        }
      },
      "cargo_item_type": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the given cargo item type",
            "type": "string"
          },
          "type": {
            "description": "Generic type of the cargo item",
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "width": {
                "description": "Width of the given cargo item type",
                "type": "string",
                "nullable": true,
                "deprecated": true
              },
              "length": {
                "description": "Length of the given cargo item type",
                "type": "string",
                "nullable": true,
                "deprecated": true
              },
              "description": {
                "description": "Descriptive information of the cargo item type",
                "type": "string"
              }
            },
            "required": [
              "width",
              "length"
            ]
          }
        },
        "required": [
          "id",
          "type",
          "attributes"
        ]
      },
      "carrier": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the given Carrier",
            "type": "string"
          },
          "type": {
            "description": "Generic type of the Carrier",
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "id": {
                "description": "The ID of the Carrier record",
                "type": "string"
              },
              "name": {
                "description": "The Carrier's name",
                "type": "string"
              },
              "code": {
                "description": "The Carrier's code. Preferably SCAC or IATA but customs code are allowed.",
                "type": "string"
              },
              "logo": {
                "description": "URL for accesing the logo of the Carrier",
                "type": "string",
                "nullable": true
              }
            },
            "required": [
              "id",
              "name",
              "code",
              "logo"
            ]
          }
        },
        "required": [
          "id",
          "type",
          "attributes"
        ]
      },
      "client": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "company_name": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "house_number": {
            "type": "string"
          },
          "street": {
            "type": "string"
          },
          "postal_code": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "group_id": {
            "type": "string"
          }
        },
        "required": [
          "email",
          "first_name",
          "last_name",
          "company_name",
          "phone",
          "house_number",
          "street",
          "postal_code",
          "country",
          "group_id"
        ]
      },
      "charge": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Charge ID",
            "type": "string"
          },
          "lineItemId": {
            "description": "Line Item",
            "type": "string"
          },
          "tenderId": {
            "description": "Tender",
            "type": "string"
          },
          "chargeCategoryId": {
            "description": "Category of the charge",
            "type": "integer"
          },
          "description": {
            "description": "Description",
            "type": "string"
          },
          "value": {
            "$ref": "#/components/schemas/money"
          },
          "originalValue": {
            "$ref": "#/components/schemas/money"
          },
          "order": {
            "description": "Order of the charges",
            "type": "integer"
          },
          "section": {
            "description": "Section of charge",
            "type": "string"
          },
          "level": {
            "description": "Nesting level",
            "type": "integer"
          },
          "rate": {
            "description": "The rate at which the LineItem was charged",
            "type": "string"
          },
          "rateFactor": {
            "description": "The value (with unit) that was applied to the Rate to achieve the final price of the LineItem",
            "type": "string"
          }
        },
        "required": [
          "id",
          "lineItemId",
          "tenderId",
          "chargeCategoryId",
          "description",
          "value",
          "originalValue",
          "order",
          "section",
          "level"
        ]
      },
      "v2Charge": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Charge ID",
            "type": "string"
          },
          "description": {
            "description": "Description",
            "type": "string"
          },
          "feeCode": {
            "description": "The fee code describing the Charge",
            "type": "string"
          },
          "value": {
            "$ref": "#/components/schemas/v2Money"
          },
          "unitPrice": {
            "$ref": "#/components/schemas/v2Money"
          },
          "order": {
            "description": "Order of the charges",
            "type": "integer"
          },
          "section": {
            "description": "Section of charge",
            "type": "string"
          },
          "units": {
            "description": "Quantity of cargo this Charge was calculated with",
            "type": "integer"
          }
        },
        "required": [
          "id",
          "description",
          "feeCode",
          "value",
          "unitPrice",
          "order",
          "section",
          "units"
        ]
      },
      "commodityInfo": {
        "type": "object",
        "properties": {
          "imoClass": {
            "type": "string",
            "enum": [
              "0",
              "1",
              "1.1",
              "1.2",
              "1.3",
              "1.4",
              "1.5",
              "1.6",
              "2",
              "2.1",
              "2.2",
              "2.3",
              "3",
              "4",
              "4.1",
              "4.2",
              "4.3",
              "5",
              "5.1",
              "5.2",
              "6",
              "6.1",
              "6.2",
              "7",
              "7.1",
              "7.2",
              "7.3",
              "7.4",
              "8",
              "9"
            ],
            "nullable": true,
            "description": "Defines the standard IMO class for the dangerous goods that this cargo item might contain. IMO Class is defined as Class and possible sub-class, where class defines top-level category of type of dangerous goods, and sub-class defines more detailed separation of different dangerous goods.\n\nTo see list of possible classes and sub-classes, please see for example https://www.searates.com/reference/imo/\n\nIf the cargo item is known to contain dangerous goods, but the specific class is unknown, please use `0` as IMO class, which is used internally for unknown dangerous goods class.\nIf the cargo item is known to contain no dangerous goods, set this field as `null`.\n"
          },
          "description": {
            "type": "string",
            "description": "The description of the IMO Class/ HSCode chosen"
          },
          "hsCode": {
            "type": "string",
            "nullable": true,
            "description": "The Harmonized Commodity Description and Coding System, also known as the Harmonized System of tariff nomenclature is an internationally standardized system of names and numbers to classify traded products.\nThis code is is used to identify the type of cargo being shipped as it can affect the pricing and routes available\n"
          }
        },
        "required": [
          "description",
          "hsCode",
          "imoClass"
        ]
      },
      "country": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Country ID",
            "type": "string"
          },
          "type": {
            "description": "Country Type",
            "type": "string"
          },
          "attributes": {
            "description": "Country Attributes",
            "type": "object",
            "properties": {
              "name": {
                "description": "Name of the country",
                "type": "string"
              },
              "code": {
                "description": "Country code",
                "type": "string"
              },
              "flag": {
                "description": "Flag of the country",
                "type": "string"
              }
            },
            "required": [
              "name",
              "code",
              "flag"
            ]
          }
        },
        "required": [
          "id",
          "type",
          "attributes"
        ]
      },
      "group": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Group ID",
            "type": "string"
          },
          "type": {
            "description": "Type of group",
            "type": "string"
          },
          "attributes": {
            "description": "Attributes of group",
            "type": "object",
            "properties": {
              "id": {
                "description": "ID of attributes",
                "type": "string"
              },
              "name": {
                "description": "Name of the group",
                "type": "string"
              }
            },
            "required": [
              "id",
              "name"
            ]
          }
        },
        "required": [
          "id",
          "type",
          "attributes"
        ]
      },
      "item": {
        "type": "object",
        "properties": {
          "cargoClass": {
            "description": "Cargo classification code",
            "type": "string",
            "enum": [
              "lcl",
              "aggregated_lcl",
              "fcl_10",
              "fcl_20",
              "fcl_20_ot",
              "fcl_20_rf",
              "fcl_20_frs",
              "fcl_20_frw",
              "fcl_40",
              "fcl_40_hq",
              "fcl_40_ot",
              "fcl_40_rf",
              "fcl_40_hq_rf",
              "fcl_40_frs",
              "fcl_40_frw",
              "fcl_45",
              "fcl_45_hq",
              "fcl_45_rf"
            ]
          },
          "stackable": {
            "description": "If cargo item is stackable or not",
            "type": "boolean"
          },
          "quantity": {
            "description": "Quantity",
            "type": "integer"
          },
          "length": {
            "description": "Length of the item expressed as a decimal on the centimeter (cm) scale",
            "type": "number"
          },
          "width": {
            "description": "Width of the item expressed as a decimal on the centimeter (cm) scale",
            "type": "number"
          },
          "height": {
            "description": "Height of the item expressed as a decimal on the centimeter (cm) scale",
            "type": "number"
          },
          "weight": {
            "description": "Weight of the item expressed as a decimal on the kilogram (kg) scale",
            "type": "number"
          },
          "volume": {
            "description": "Volume of the item expressed as a decimal on the cubic meter (m3) scale",
            "type": "number"
          },
          "commodities": {
            "description": "Commodity codes of the contents",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commodityInfo"
            }
          }
        },
        "required": [
          "stackable",
          "colliType",
          "quantity",
          "length",
          "width",
          "height",
          "weight",
          "commodities"
        ]
      },
      "item_lcl": {
        "type": "object",
        "properties": {
          "cargoClass": {
            "description": "Cargo classification code",
            "type": "string",
            "enum": [
              "lcl"
            ]
          },
          "stackable": {
            "description": "If cargo item is stackable or not",
            "type": "boolean"
          },
          "colliType": {
            "description": "Colli Type: The type of container the items are packed in. One of a preset list",
            "type": "string",
            "enum": [
              "container",
              "barrel",
              "bottle",
              "carton",
              "case",
              "crate",
              "drum",
              "package",
              "pallet",
              "roll",
              "skid",
              "stack",
              "room_temp_reefer",
              "low_temp_reefer"
            ]
          },
          "quantity": {
            "description": "Quantity",
            "type": "integer"
          },
          "length": {
            "description": "Length of the item expressed as a decimal on the centimeter (cm) scale",
            "type": "number"
          },
          "width": {
            "description": "Width of the item expressed as a decimal on the centimeter (cm) scale",
            "type": "number"
          },
          "height": {
            "description": "Height of the item expressed as a decimal on the centimeter (cm) scale",
            "type": "number"
          },
          "weight": {
            "description": "Weight of the item expressed as a decimal on the kilogram (kg) scale",
            "type": "number"
          },
          "commodities": {
            "description": "Commodity codes of the contents",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commodityInfo"
            }
          }
        },
        "required": [
          "stackable",
          "colliType",
          "quantity",
          "length",
          "width",
          "height",
          "weight",
          "commodities",
          "cargoClass"
        ]
      },
      "item_aggregated_lcl": {
        "type": "object",
        "properties": {
          "cargoClass": {
            "description": "Cargo classification code",
            "type": "string",
            "enum": [
              "aggregated_lcl"
            ]
          },
          "stackable": {
            "description": "Aggregated Cargo Item's are always stackable so this property is not required",
            "type": "boolean",
            "nullable": true
          },
          "quantity": {
            "description": "Aggregated Cargo Item's have no defined quantity so this property is null",
            "type": "integer",
            "nullable": true
          },
          "length": {
            "description": "Aggregated Cargo Item's have no defined length so this property is null",
            "type": "number",
            "nullable": true
          },
          "width": {
            "description": "Aggregated Cargo Item's have no defined width so this property is null",
            "type": "number",
            "nullable": true
          },
          "height": {
            "description": "Aggregated Cargo Item's have no defined height so this property is null",
            "type": "number",
            "nullable": true
          },
          "weight": {
            "description": "Weight of the item expressed as a decimal on the kilogram (kg) scale",
            "type": "number"
          },
          "volume": {
            "description": "Volume of the item expressed as a decimal on the cubic meter (m3) scale",
            "type": "number"
          },
          "commodities": {
            "description": "Commodity codes of the contents",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commodityInfo"
            },
            "nullable": true
          }
        },
        "required": [
          "volume",
          "weight",
          "cargoClass"
        ]
      },
      "item_fcl": {
        "type": "object",
        "properties": {
          "cargoClass": {
            "description": "Container classification code",
            "type": "string",
            "enum": [
              "fcl_10",
              "fcl_20",
              "fcl_20_ot",
              "fcl_20_rf",
              "fcl_20_frs",
              "fcl_20_frw",
              "fcl_40",
              "fcl_40_hq",
              "fcl_40_ot",
              "fcl_40_rf",
              "fcl_40_hq_rf",
              "fcl_40_frs",
              "fcl_40_frw",
              "fcl_45",
              "fcl_45_hq",
              "fcl_45_rf"
            ]
          },
          "quantity": {
            "description": "Quantity",
            "type": "integer"
          },
          "length": {
            "description": "Containers have no defined length so this property is null",
            "type": "integer",
            "nullable": true
          },
          "width": {
            "description": "Containers have no defined width so this property is null",
            "type": "integer",
            "nullable": true
          },
          "height": {
            "description": "Containers have no defined height so this property is null",
            "type": "integer",
            "nullable": true
          },
          "weight": {
            "description": "Weight of the item expressed as a decimal on the kilogram (kg) scale",
            "type": "integer"
          },
          "volume": {
            "description": "Containers have no defined dimensions so this property is null",
            "type": "integer"
          },
          "commodities": {
            "description": "Commodity codes of the contents",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commodityInfo"
            }
          }
        },
        "required": [
          "stackable",
          "colliType",
          "quantity",
          "weight",
          "commodities",
          "cargoClass"
        ]
      },
      "validation_item_lcl": {
        "allOf": [
          {
            "$ref": "#/components/schemas/item_lcl"
          },
          {
            "type": "object",
            "properties": {
              "id": {
                "description": "A UUID to be used to identify which CargoUnit to render the error on",
                "type": "string"
              }
            },
            "required": [
              "id"
            ]
          }
        ]
      },
      "validation_item_aggregated_lcl": {
        "allOf": [
          {
            "$ref": "#/components/schemas/item_aggregated_lcl"
          },
          {
            "type": "object",
            "properties": {
              "id": {
                "description": "A UUID to be used to identify which CargoUnit to render the error on",
                "type": "string"
              }
            },
            "required": [
              "id"
            ]
          }
        ]
      },
      "validation_item_fcl": {
        "allOf": [
          {
            "$ref": "#/components/schemas/item_fcl"
          },
          {
            "type": "object",
            "properties": {
              "id": {
                "description": "A UUID to be used to identify which CargoUnit to render the error on",
                "type": "string"
              }
            },
            "required": [
              "id"
            ]
          }
        ]
      },
      "item_response": {
        "type": "object",
        "properties": {
          "attributes": {
            "type": "object",
            "properties": {
              "cargoClass": {
                "description": "Cargo classification code",
                "type": "string",
                "enum": [
                  "lcl",
                  "aggregated_lcl",
                  "fcl_10",
                  "fcl_20",
                  "fcl_20_ot",
                  "fcl_20_rf",
                  "fcl_20_frs",
                  "fcl_20_frw",
                  "fcl_40",
                  "fcl_40_hq",
                  "fcl_40_ot",
                  "fcl_40_rf",
                  "fcl_40_hq_rf",
                  "fcl_40_frs",
                  "fcl_40_frw",
                  "fcl_45",
                  "fcl_45_hq",
                  "fcl_45_rf"
                ]
              },
              "stackable": {
                "description": "If cargo item is stackable or not",
                "type": "boolean"
              },
              "quantity": {
                "description": "Quantity",
                "type": "integer"
              },
              "length": {
                "description": "Length of the item expressed as a decimal on the centimeter (cm) scale",
                "type": "number"
              },
              "width": {
                "description": "Width of the item expressed as a decimal on the centimeter (cm) scale",
                "type": "number"
              },
              "height": {
                "description": "Height of the item expressed as a decimal on the centimeter (cm) scale",
                "type": "number"
              },
              "weight": {
                "description": "Weight of the item expressed as a decimal on the kilogram (kg) scale",
                "type": "number"
              },
              "volume": {
                "description": "Volume of the item expressed as a decimal on the cubic meter (m3) scale",
                "type": "number"
              },
              "commodities": {
                "description": "Commodity codes of the contents",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/commodityInfo"
                }
              }
            },
            "required": [
              "stackable",
              "colliType",
              "quantity",
              "length",
              "width",
              "height",
              "weight",
              "commodities"
            ]
          }
        },
        "required": [
          "attributes"
        ]
      },
      "v1CargoItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID of the Cargo Item"
          },
          "cargo_class": {
            "type": "string",
            "description": "Cargo Class of the Cargo Item. Must be `lcl`"
          },
          "cargo_item_type_id": {
            "type": "string",
            "description": "ID of the CargoItemType - repesenting the Colli Type"
          },
          "contents": {
            "type": "string",
            "description": "String desccribin the Items contents",
            "nullable": true
          },
          "dangerous_goods": {
            "type": "boolean",
            "description": "Whether or not the Cargoitem contains dangerous goods"
          },
          "width": {
            "type": "number",
            "description": "The width of the item in cm"
          },
          "length": {
            "type": "number",
            "description": "The length of the item in cm"
          },
          "height": {
            "type": "number",
            "description": "The height of the item in cm"
          },
          "payload_in_kg": {
            "type": "number",
            "description": "The individual weight of each item in kg"
          },
          "quantity": {
            "type": "number",
            "description": "The number of identical items in the group"
          },
          "stackable": {
            "type": "boolean",
            "description": "Whether these items can be stacked"
          },
          "total_volume": {
            "type": "number",
            "description": "The total volume of all items in the group in cubic meters"
          },
          "total_weight": {
            "type": "number",
            "description": "The total weight of the group in kg."
          }
        }
      },
      "v1Container": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the Container"
          },
          "cargo_class": {
            "type": "string",
            "description": "The Cargo Class of the Container",
            "enum": [
              "fcl_10",
              "fcl_20",
              "fcl_20_ot",
              "fcl_20_rf",
              "fcl_20_frs",
              "fcl_20_frw",
              "fcl_40",
              "fcl_40_hq",
              "fcl_40_ot",
              "fcl_40_rf",
              "fcl_40_hq_rf",
              "fcl_40_frs",
              "fcl_40_frw",
              "fcl_45",
              "fcl_45_hq",
              "fcl_45_rf"
            ]
          },
          "contents": {
            "type": "string",
            "description": "A string describing the contents of the Container",
            "nullable": true
          },
          "dangerous_goods": {
            "type": "boolean",
            "description": "Whether or not the Container holds any dangerous goods"
          },
          "payload_in_kg": {
            "type": "number",
            "description": "The weight of the payload per container in kg"
          },
          "quantity": {
            "type": "number",
            "description": "The number of containers in the group"
          },
          "size_class": {
            "type": "string",
            "description": "Duplicate of Cargo Class: Deprecated",
            "deprecated": true
          }
        }
      },
      "v1ShipmentInfoContainers": {
        "type": "object",
        "properties": {
          "containers_attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1Container"
            }
          },
          "trucking_info": {
            "type": "object",
            "properties": {
              "pre_carriage": {
                "$ref": "#/components/schemas/v1TruckingInfo"
              },
              "on_carriage": {
                "$ref": "#/components/schemas/v1TruckingInfo"
              }
            }
          }
        },
        "required": [
          "containers_attributes",
          "trucking_info"
        ]
      },
      "v1ShipmentInfoCargoItems": {
        "type": "object",
        "properties": {
          "cargo_items_attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1CargoItem"
            }
          },
          "trucking_info": {
            "type": "object",
            "properties": {
              "pre_carriage": {
                "$ref": "#/components/schemas/v1TruckingInfo"
              },
              "on_carriage": {
                "$ref": "#/components/schemas/v1TruckingInfo"
              }
            }
          }
        },
        "required": [
          "cargo_items_attributes",
          "trucking_info"
        ]
      },
      "v1TruckingInfo": {
        "type": "object",
        "properties": {
          "truck_type": {
            "type": "string",
            "description": "Truck type desired for pre/on carriage"
          }
        },
        "nullable": true
      },
      "journeyError": {
        "type": "object",
        "properties": {
          "id": {
            "description": "ID",
            "type": "string"
          },
          "code": {
            "description": "Code",
            "type": "string"
          },
          "service": {
            "description": "Service",
            "type": "string"
          },
          "carrier": {
            "description": "Carrier",
            "type": "string"
          },
          "mode_of_transport": {
            "description": "MOT",
            "type": "string"
          },
          "property": {
            "description": "Property",
            "type": "string"
          },
          "value": {
            "description": "Value",
            "type": "string"
          },
          "limit": {
            "description": "Limit",
            "type": "string"
          }
        },
        "required": [
          "id"
        ]
      },
      "locationV1Nexus": {
        "type": "object",
        "properties": {
          "nexus_id": {
            "type": "integer",
            "description": "The unique identifier of the Location Nexus"
          }
        },
        "required": [
          "nexus_id"
        ]
      },
      "locationV1Trucking": {
        "type": "object",
        "properties": {
          "latitude": {
            "type": "string",
            "description": "The latitude of the Location"
          },
          "longitude": {
            "type": "string",
            "description": "The longitude of the Location"
          }
        },
        "required": [
          "latitude",
          "longitude"
        ]
      },
      "money": {
        "type": "object",
        "properties": {
          "amount": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ],
            "description": "Monetary amount in given currency"
          },
          "currency": {
            "type": "string",
            "description": "ISO 4217 code for currency"
          }
        },
        "required": [
          "amount",
          "currency"
        ]
      },
      "v2Money": {
        "type": "object",
        "properties": {
          "value": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ],
            "description": "Monetary amount in given currency"
          },
          "currency": {
            "type": "string",
            "description": "ISO 4217 code for currency"
          }
        },
        "required": [
          "value",
          "currency"
        ]
      },
      "nexus": {
        "type": "object",
        "properties": {
          "id": {
            "description": "ID",
            "type": "string"
          },
          "type": {
            "description": "Type",
            "type": "string"
          },
          "attributes": {
            "description": "Attributes",
            "type": "object",
            "properties": {
              "id": {
                "description": "ID",
                "type": "number"
              },
              "name": {
                "description": "Name",
                "type": "string"
              },
              "locode": {
                "description": "UN/LOCODE",
                "type": "string"
              },
              "latitude": {
                "description": "Latitude",
                "type": "number"
              },
              "longitude": {
                "description": "Longitude",
                "type": "number"
              },
              "modesOfTransport": {
                "description": "MOTs",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "countryName": {
                "description": "Country Name",
                "type": "string"
              }
            },
            "required": [
              "id",
              "name",
              "latitude",
              "longitude",
              "locode",
              "modesOfTransport",
              "countryName"
            ]
          }
        },
        "required": [
          "id",
          "type",
          "attributes"
        ]
      },
      "organization": {
        "type": "object",
        "properties": {
          "id": {
            "description": "ID",
            "type": "string"
          },
          "type": {
            "description": "Type",
            "type": "string"
          },
          "attributes": {
            "description": "Attributes of the organisation.",
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the organisation. Usually their legal business name."
              },
              "slug": {
                "type": "string",
                "description": "Short slug of the organisation that is unique for a single\norganisation. This is usually used as poart of the URL and must\nalways match generic domain requirements.\n"
              }
            },
            "required": [
              "name",
              "slug"
            ]
          }
        },
        "required": [
          "id",
          "type",
          "attributes"
        ]
      },
      "pagination": {
        "type": "object",
        "properties": {
          "page": {
            "description": "Current page",
            "type": "number"
          },
          "perPage": {
            "description": "Items per page",
            "type": "number"
          },
          "totalPages": {
            "description": "Total number of pages",
            "type": "number"
          }
        },
        "required": [
          "page",
          "perPage",
          "totalPages"
        ]
      },
      "paginationLinks": {
        "type": "object",
        "properties": {
          "first": {
            "description": "First page",
            "type": "string",
            "nullable": true
          },
          "prev": {
            "description": "Previous page",
            "type": "string",
            "nullable": true
          },
          "next": {
            "description": "Next page",
            "type": "string",
            "nullable": true
          },
          "last": {
            "description": "Last page",
            "type": "string",
            "nullable": true
          }
        }
      },
      "quotationTender": {
        "type": "object",
        "properties": {
          "data": {
            "description": "Data",
            "type": "object",
            "properties": {
              "id": {
                "description": "ID",
                "type": "string"
              },
              "type": {
                "description": "Type",
                "type": "string"
              },
              "attributes": {
                "description": "Attributes",
                "type": "object",
                "properties": {
                  "charges": {
                    "description": "Charges",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/charge"
                    }
                  },
                  "route": {
                    "description": "Route",
                    "type": "string"
                  },
                  "vessel": {
                    "description": "Vessel",
                    "type": "string"
                  },
                  "id": {
                    "description": "ID",
                    "type": "string"
                  },
                  "pickupTruckType": {
                    "description": "Truck type",
                    "type": "string"
                  },
                  "deliveryTruckType": {
                    "description": "Truck type",
                    "type": "string"
                  },
                  "pickupCarrier": {
                    "description": "Carrier",
                    "type": "string"
                  },
                  "deliveryCarrier": {
                    "description": "Carrier",
                    "type": "string"
                  },
                  "pickupService": {
                    "description": "Service",
                    "type": "string"
                  },
                  "deliveryService": {
                    "description": "Service",
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "route"
                ]
              }
            },
            "required": [
              "id",
              "type",
              "attributes"
            ]
          }
        }
      },
      "restfulResponse": {
        "type": "object",
        "properties": {
          "id": {
            "description": "ID",
            "type": "string"
          }
        }
      },
      "result": {
        "type": "object",
        "properties": {
          "id": {
            "description": "ID",
            "type": "string"
          },
          "carrier": {
            "description": "Name of the Carrier",
            "type": "string"
          },
          "modes_of_transport": {
            "description": "Main Modes of Transport for the route",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "total": {
            "description": "The total value of the Result",
            "schema": {
              "$ref": "#/components/schemas/money"
            }
          },
          "service_level": {
            "description": "Name of the main freight service level",
            "type": "string"
          },
          "valid_until": {
            "description": "Date until which this quote is valid",
            "type": "string"
          },
          "transit_time": {
            "description": "A figure denoting the number of days the journey will likely take",
            "type": "integer",
            "format": "int32"
          },
          "cargo_ready_date": {
            "description": "A date and time indicating after which the cargo will be ready for loading",
            "type": "string",
            "format": "date-time"
          },
          "cargo_delivery_date": {
            "description": "A date and time indicating by when the cargo needs to be delivered by",
            "type": "string",
            "format": "date-time"
          },
          "origin": {
            "description": "The full name of the start point of the quoted journey",
            "type": "string"
          },
          "destination": {
            "description": "The full name of the end point of the quoted journey",
            "type": "string"
          },
          "origin_terminal": {
            "description": "The terminal of the start point of the quoted journey, if the data is present.",
            "type": "string",
            "nullable": true
          },
          "destination_terminal": {
            "description": "The terminal of the end point of the quoted journey, if the data is present.",
            "type": "string",
            "nullable": true
          },
          "transshipment": {
            "description": "Information regarding the transhipments (if any) that happen during the main section of the journey",
            "type": "string"
          },
          "numberOfStops": {
            "description": "The number of times the cargo will be loaded and unloaded during the journey",
            "type": "integer"
          },
          "preCarriage": {
            "description": "Whether or not the Result includes Pre-carriage of any kind",
            "type": "boolean"
          },
          "onCarriage": {
            "description": "Whether or not the Result includes On-carriage of any kind",
            "type": "boolean"
          }
        }
      },
      "schedule": {
        "type": "object",
        "properties": {
          "id": {
            "description": "ID",
            "type": "string"
          },
          "estimatedDepartureTime": {
            "description": "Estimated departure date",
            "type": "datetime"
          },
          "estimatedArrivalTime": {
            "description": "Estimation of arrival time",
            "type": "datetime"
          },
          "voyageCode": {
            "description": "voyage code",
            "type": "string"
          },
          "vesselNo": {
            "description": "vessel number",
            "type": "string"
          },
          "closingDate": {
            "description": "schedule closing date",
            "type": "datetime"
          },
          "modeOfTransport": {
            "description": "The mode of transport of the schedule",
            "type": "string"
          },
          "transitTime": {
            "description": "The time in days that will take the goods to reach from origin to destination.",
            "type": "integer"
          }
        }
      },
      "offer": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the Offer",
            "type": "string"
          }
        },
        "required": [
          "id"
        ]
      },
      "routeSection": {
        "type": "object",
        "description": "Details regarding the start, end, service and mode of transport of each section of the quoted Journey",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the RouteSection"
          },
          "service": {
            "type": "string",
            "description": "The service level of this part of the journey"
          },
          "carrier": {
            "type": "string",
            "description": "The Carrier operating the service on this part of the journey"
          },
          "modeOfTransport": {
            "type": "string",
            "description": "The mode of transport for the section of the journey."
          },
          "transitTime": {
            "description": "The time in days that this part of the journey will take.",
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "origin": {
            "type": "object",
            "description": "The start point of this section",
            "properties": {
              "$ref": "#/components/schemas/resultDetailedRoutingLocation"
            }
          },
          "destination": {
            "type": "object",
            "description": "The end point of this section",
            "properties": {
              "$ref": "#/components/schemas/resultDetailedRoutingLocation"
            }
          },
          "carrierLogo": {
            "description": "URL for accesing the logo of the route section's Carrier",
            "type": "string",
            "nullable": true
          },
          "transshipment": {
            "description": "Information regarding the transhipments (if any) that happen during this section of the journey",
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "id",
          "service",
          "carrier",
          "modeOfTransport",
          "transitTime",
          "origin",
          "destination",
          "transshipment"
        ]
      },
      "resultDetailedRoutingLocation": {
        "type": "object",
        "description": "A object containing the address, locode and city of the location",
        "properties": {
          "address": {
            "type": "string",
            "description": "The city name or address of the location"
          },
          "locode": {
            "type": "string",
            "description": "The UN/LOCODE of the location",
            "nullable": true
          },
          "terminal": {
            "type": "string",
            "description": "The terminal info of the location, if present",
            "nullable": true
          },
          "city": {
            "type": "string",
            "description": "The city name of the location. Will only differ from name if the location is an Address"
          }
        }
      },
      "settings": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the settings object",
            "type": "string"
          },
          "attributes": {
            "description": "Attributes",
            "type": "object",
            "properties": {
              "language": {
                "type": "string",
                "pattern": "[a-z]{2}-[A-Z]{2}",
                "description": "User's preferred language. Preferred language is given as language\nand country combination, allowing different dialects and languages\nfor each region.\n\nLanguage code is combined with language and country, separated by\ndash. First part of the code, language is the lower-case\ntwo-letter codes as defined by ISO-639-1. Second part is the\nupper-case two-letter codes as defined by ISO-3166-1.\n\nFor example:\n\n* `en-US` - English as spoken in United States of America\n* `en-GB` - English as spoken in United Kingdom and the Northern Ireland\n* `sv-FI` - Swedish as spoken in Finland\n"
              },
              "locale": {
                "type": "string",
                "pattern": "[a-z]{2}-[A-Z]{2}",
                "description": "User's preferred locale. Preferred locale defines how numbers and\ncurrencies, time et al. are displayed in the shop.\n\nLocale code is combined with language and country, separated by\ndash. First part of the code, language is the lower-case\ntwo-letter codes as defined by ISO-639-1. Second part is the\nupper-case two-letter codes as defined by ISO-3166-1.\n\nFor example:\n\n* `en-US` - English as spoken in United States of America\n* `en-GB` - English as spoken in United Kingdom and the Northern Ireland\n* `sv-FI` - Swedish as spoken in Finland\n"
              }
            }
          }
        }
      },
      "scope": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the offer",
            "type": "string"
          },
          "loginMandatory": {
            "type": "boolean",
            "description": "This boolean signals whether it is mandatory for a user to log in before they can access the quoting tool itself"
          },
          "registrationProhibited": {
            "type": "boolean",
            "description": "This boolean signals whether it is the case that a user can not register for the quoting tool."
          },
          "links": {
            "type": "object",
            "properties": {
              "legal": {
                "type": "string",
                "description": "Link to any Legal notices the client wants to display",
                "nullable": true
              },
              "imprint": {
                "type": "string",
                "description": "Link to the 'Imprint' page of the client",
                "nullable": true
              },
              "about": {
                "type": "string",
                "description": "Link to the About Us page of the Clients website",
                "nullable": true
              },
              "privacy": {
                "type": "string",
                "description": "Link to the Client's Privacy Policy",
                "nullable": true
              },
              "terms": {
                "type": "string",
                "description": "Link to the Terms and Conditions the Client operates under",
                "nullable": true
              }
            }
          },
          "authMethods": {
            "type": "array",
            "description": "This contains the auth methods this Organization accepts",
            "schema": "string"
          },
          "loginSamlText": {
            "type": "string",
            "description": "Custom text to be displayed in the 'Log in Via SAML' button"
          }
        }
      },
      "user": {
        "type": "object",
        "properties": {
          "id": {
            "description": "ID",
            "type": "string"
          },
          "type": {
            "description": "Type",
            "type": "string"
          },
          "attributes": {
            "description": "Attributes",
            "type": "object",
            "properties": {
              "email": {
                "description": "Email",
                "type": "string"
              },
              "organizationId": {
                "description": "organization",
                "type": "string"
              },
              "firstName": {
                "description": "First Name",
                "type": "string"
              },
              "lastName": {
                "description": "Last Name",
                "type": "string"
              },
              "phone": {
                "description": "Phone",
                "type": "string",
                "nullable": true
              },
              "companyName": {
                "description": "Company",
                "type": "string"
              }
            },
            "required": [
              "email",
              "organizationId",
              "firstName",
              "lastName",
              "phone",
              "companyName"
            ]
          }
        },
        "required": [
          "id",
          "type",
          "attributes"
        ]
      },
      "v1Client": {
        "type": "object",
        "properties": {
          "id": {
            "description": "ID",
            "type": "string"
          },
          "type": {
            "description": "Type",
            "type": "string"
          },
          "attributes": {
            "description": "Attributes",
            "type": "object",
            "properties": {
              "email": {
                "description": "Email",
                "type": "string"
              },
              "organizationId": {
                "description": "organization",
                "type": "string"
              },
              "firstName": {
                "description": "First Name",
                "type": "string"
              },
              "lastName": {
                "description": "Last Name",
                "type": "string"
              },
              "phone": {
                "description": "Phone",
                "type": "string",
                "nullable": true
              },
              "companyName": {
                "description": "The name of the Company the client belongs to",
                "type": "string"
              },
              "companyId": {
                "description": "The ID of the Company the client belongs to",
                "type": "string"
              },
              "paymentTerms": {
                "description": "The Payment Terms applicable to the client",
                "type": "string"
              }
            },
            "required": [
              "email",
              "organizationId",
              "firstName",
              "lastName",
              "phone",
              "companyName",
              "paymentTerms"
            ]
          }
        },
        "required": [
          "id",
          "type",
          "attributes"
        ]
      },
      "profile": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the profile. Format of UUID.",
            "type": "string"
          },
          "attributes": {
            "description": "Attributes",
            "type": "object",
            "properties": {
              "email": {
                "description": "Email of the client",
                "type": "string"
              },
              "firstName": {
                "description": "First name of the user. This can be missing in case the user either does not have a first (given) name, or does not want it to be used.",
                "type": "string"
              },
              "lastName": {
                "description": "User's last or family name. In cases user only has one name, last name is used for identifying that.",
                "type": "string"
              },
              "phone": {
                "description": "User's phone number for contact purposes",
                "type": "string"
              },
              "newUser": {
                "description": "A boolean indicating whether the user has even logged in to the application before",
                "type": "boolean"
              },
              "currency": {
                "description": "The users preferred currency. ISO 4217 3 letter currency code",
                "type": "string"
              },
              "language": {
                "description": "The Users preferred Language eg. en-US",
                "type": "string"
              },
              "locale": {
                "description": "The Users preferred Localization eg. en-US",
                "type": "string"
              }
            },
            "required": [
              "email",
              "firstName",
              "lastName"
            ]
          }
        },
        "required": [
          "id",
          "type",
          "attributes"
        ]
      },
      "analyticsCount": {
        "type": "number",
        "nullable": true
      },
      "analyticsTotal": {
        "type": "object",
        "properties": {
          "symbol": {
            "description": "ISO Currency Code for the Total",
            "type": "string"
          },
          "value": {
            "description": "Value in the base unit (cents) of the Total",
            "type": "number"
          }
        }
      },
      "analyticsListCount": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "label": {
              "description": "Label for displaying the context of the result",
              "type": "string"
            },
            "count": {
              "description": "Value of the Analytic result",
              "type": "number"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "oauth": {
        "type": "oauth2",
        "description": "This API uses OAuth2 with the password grant flow.",
        "flows": {
          "password": {
            "tokenUrl": "/oauth/tokens",
            "refreshUrl": "/oauth/refresh",
            "scopes": {
              "public": "Public Access"
            }
          }
        }
      },
      "bearerAuth": {
        "type": "http",
        "description": "Some endpoints authorize via integration token",
        "scheme": "bearer"
      }
    }
  },
  "servers": [
    {
      "url": "https://{host}",
      "variables": {
        "host": {
          "default": "api.itsmycargo.com"
        }
      }
    }
  ],
  "paths": {
    "/v1/organizations/{organization_id}/ahoy": {
      "get": {
        "summary": "Fetch Settings",
        "tags": [
          "Ahoy"
        ],
        "description": "Fetch settings for Ahoy widget.",
        "operationId": "getAhoy",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "endpoint": "test_1.itsmycargo.test",
                  "modes_of_transport": {
                    "air": {
                      "fcl": false,
                      "lcl": true
                    },
                    "rail": {
                      "fcl": false,
                      "lcl": false
                    },
                    "ocean": {
                      "fcl": true,
                      "lcl": true
                    },
                    "truck": {
                      "fcl": false,
                      "lcl": false
                    }
                  },
                  "pre_carriage": true,
                  "on_carriage": true
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "endpoint": {
                      "description": "Endpoint url that Ahoy will redirect to start the booking process",
                      "type": "string"
                    },
                    "pre_carriage": {
                      "description": "Determines if pre-carriage is enabled",
                      "type": "boolean"
                    },
                    "on_carriage": {
                      "description": "Determines if on-carriage is enabled",
                      "type": "boolean"
                    },
                    "modes_of_transport": {
                      "description": "Supported modes of transports",
                      "type": "object",
                      "properties": {
                        "air": {
                          "description": "Supported cargo types for Air Cargo",
                          "type": "object",
                          "properties": {
                            "fcl": {
                              "description": "Determines if FCL is supported",
                              "type": "boolean"
                            },
                            "lcl": {
                              "description": "Determines if LCL is supported",
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "fcl",
                            "lcl"
                          ]
                        },
                        "rail": {
                          "description": "Supported cargo types for Rail Cargo",
                          "type": "object",
                          "properties": {
                            "fcl": {
                              "description": "Determines if FCL is supported",
                              "type": "boolean"
                            },
                            "lcl": {
                              "description": "Determines if LCL is supported",
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "fcl",
                            "lcl"
                          ]
                        },
                        "ocean": {
                          "description": "Supported cargo types for Ocean Cargo",
                          "type": "object",
                          "properties": {
                            "fcl": {
                              "description": "Determines if FCL is supported",
                              "type": "boolean"
                            },
                            "lcl": {
                              "description": "Determines if LCL is supported",
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "fcl",
                            "lcl"
                          ]
                        },
                        "truck": {
                          "description": "Supported cargo types for Trucking Cargo",
                          "type": "object",
                          "properties": {
                            "fcl": {
                              "description": "Determines if FCL is supported",
                              "type": "boolean"
                            },
                            "lcl": {
                              "description": "Determines if LCL is supported",
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "fcl",
                            "lcl"
                          ]
                        }
                      },
                      "required": [
                        "air",
                        "rail",
                        "ocean",
                        "truck"
                      ]
                    }
                  },
                  "required": [
                    "endpoint",
                    "pre_carriage",
                    "on_carriage",
                    "modes_of_transport"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Invalid Customer UUID"
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/cargo_item_types": {
      "get": {
        "summary": "Fetch all available cargo types",
        "tags": [
          "Quote"
        ],
        "description": "Fetches all possible cargo types enabled for the customer.",
        "operationId": "getCargoItemTypes",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "31",
                      "type": "cargoItemType",
                      "attributes": {
                        "width": "101.0",
                        "length": "121.0",
                        "description": "Pallet"
                      }
                    }
                  ],
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/cargo_item_type"
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Invalid Credentials"
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/queries/{query_id}/cargo_units": {
      "get": {
        "summary": "Fetch CargoUnits for the Query",
        "tags": [
          "CargoUnits"
        ],
        "description": "Fetches cargo units for the query.",
        "operationId": "getCargoUnits",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query_id",
            "in": "path",
            "description": "Query ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "517fc9b6-739d-4313-98e3-e16eef279a42",
                      "type": "cargoUnit",
                      "attributes": {
                        "cargoClass": "lcl",
                        "colliType": "pallet",
                        "height": 140.0,
                        "length": 80.0,
                        "stackable": false,
                        "quantity": 2,
                        "weight": 3000.0,
                        "width": 120.0,
                        "volume": 1.344,
                        "commodities": [

                        ]
                      }
                    },
                    {
                      "id": "0067d0fd-58f8-4c2e-a88b-865d5448c8a5",
                      "type": "cargoUnit",
                      "attributes": {
                        "cargoClass": "lcl",
                        "colliType": "pallet",
                        "height": 140.0,
                        "length": 80.0,
                        "stackable": false,
                        "quantity": 2,
                        "weight": 3000.0,
                        "width": 120.0,
                        "volume": 1.344,
                        "commodities": [

                        ]
                      }
                    },
                    {
                      "id": "a0737e0f-842a-4622-ba2b-a139329c0151",
                      "type": "cargoUnit",
                      "attributes": {
                        "cargoClass": "lcl",
                        "colliType": "pallet",
                        "height": 140.0,
                        "length": 80.0,
                        "stackable": false,
                        "quantity": 2,
                        "weight": 3000.0,
                        "width": 120.0,
                        "volume": 1.344,
                        "commodities": [

                        ]
                      }
                    }
                  ],
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/item_response"
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/queries/{query_id}/cargo_units/{id}": {
      "get": {
        "summary": "Fetch CargoUnit for the Query",
        "tags": [
          "CargoUnit"
        ],
        "description": "Fetch Cargo Unit",
        "operationId": "getCargoUnit",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query_id",
            "in": "path",
            "description": "Query ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "CargoUnit ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "b829c7f5-b458-490a-9507-3626ab48b509",
                    "type": "cargoUnit",
                    "attributes": {
                      "cargoClass": "lcl",
                      "colliType": "pallet",
                      "height": 140.0,
                      "length": 80.0,
                      "stackable": false,
                      "quantity": 2,
                      "weight": 3000.0,
                      "width": 120.0,
                      "volume": 1.344,
                      "commodities": [

                      ]
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/item_response"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/carriers": {
      "get": {
        "summary": "Fetch all available carriers",
        "tags": [
          "Carriers"
        ],
        "description": "Fetches all possible carriers enabled for the customer.",
        "operationId": "getCarriers",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "ea4f76d6-c188-407e-95e6-017cc4e1fc87",
                      "type": "carrier",
                      "attributes": {
                        "id": "ea4f76d6-c188-407e-95e6-017cc4e1fc87",
                        "code": "carrier_1",
                        "name": "Carrier - 1",
                        "logo": "http://localhost:3000/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBZzBTIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b48fb210607c107ae17f3890fd3bb5d0e9111aae/test-image.jpg"
                      }
                    },
                    {
                      "id": "a69ea295-151b-414e-b775-cb7eae26402d",
                      "type": "carrier",
                      "attributes": {
                        "id": "a69ea295-151b-414e-b775-cb7eae26402d",
                        "code": "carrier_2",
                        "name": "Carrier - 2",
                        "logo": "http://localhost:3000/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBZzRTIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--56977b855f704361d3db5fcd51d7d980db47bd11/test-image.jpg"
                      }
                    },
                    {
                      "id": "b275d756-a4ac-4719-b476-17aac0db3883",
                      "type": "carrier",
                      "attributes": {
                        "id": "b275d756-a4ac-4719-b476-17aac0db3883",
                        "code": "carrier_3",
                        "name": "Carrier - 3",
                        "logo": "http://localhost:3000/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBZzhTIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--80c602ae96e19bbc43f5aca54d3b76eb6dfe2562/test-image.jpg"
                      }
                    },
                    {
                      "id": "7781ddb8-289e-4653-a1a3-5b2629fb124f",
                      "type": "carrier",
                      "attributes": {
                        "id": "7781ddb8-289e-4653-a1a3-5b2629fb124f",
                        "code": "carrier_4",
                        "name": "Carrier - 4",
                        "logo": "http://localhost:3000/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBaEFTIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--138ae7b3f23ff4821dd5965b1a3233a3d960261e/test-image.jpg"
                      }
                    },
                    {
                      "id": "5b76345f-005f-4075-a6f0-f28780650dc4",
                      "type": "carrier",
                      "attributes": {
                        "id": "5b76345f-005f-4075-a6f0-f28780650dc4",
                        "code": "carrier_5",
                        "name": "Carrier - 5",
                        "logo": "http://localhost:3000/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBaEVTIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--ced463653bb570ceba1eea594db72b3276d704a8/test-image.jpg"
                      }
                    }
                  ],
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/carrier"
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Invalid Credentials"
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/carriers/{id}": {
      "get": {
        "summary": "Fetch carrier",
        "tags": [
          "Carriers"
        ],
        "description": "Fetches a specific Carrier.",
        "operationId": "getCarrier",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Carrier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "c06c5ffa-1715-4c52-ae74-236b3865969e",
                    "type": "carrier",
                    "attributes": {
                      "id": "c06c5ffa-1715-4c52-ae74-236b3865969e",
                      "code": "carrier_16",
                      "name": "Carrier - 16",
                      "logo": "http://localhost:3000/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBaDhTIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--dde9c60cd6b672683da7422fa4ae787896e4b526/test-image.jpg"
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/carrier"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Invalid Credentials"
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/quotations/{quotation_id}/charges/{id}": {
      "get": {
        "summary": "Fetch tender charges",
        "tags": [
          "Quote"
        ],
        "description": "Fetches available tenders.",
        "operationId": "getCharge",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Trip ID of the tender",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quotation_id",
            "in": "path",
            "description": "The selected quotation ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "a175728e-883d-43ba-84c2-015d760f3ce2",
                    "type": "detailedResult",
                    "attributes": {
                      "queryId": "d7b353a7-2214-496d-b33a-23448227afdc",
                      "paymentTerms": "Some quotation payment terms",
                      "charges": [
                        {
                          "id": "ef44d23e-c6fd-42ed-81a6-95a1ccb25fae",
                          "editId": null,
                          "order": 0,
                          "parentId": null,
                          "lineItemId": null,
                          "code": null,
                          "chargeCategoryId": null,
                          "description": null,
                          "section": null,
                          "value": {
                            "amount": "180.0",
                            "currency": "EUR"
                          },
                          "originalValue": {
                            "amount": "180.0",
                            "currency": "EUR"
                          },
                          "tenderId": "a175728e-883d-43ba-84c2-015d760f3ce2",
                          "level": 0
                        },
                        {
                          "id": "723a9905-6b0d-42e6-b40f-3a1efc8f16fb",
                          "editId": null,
                          "order": 0,
                          "parentId": null,
                          "lineItemId": null,
                          "code": null,
                          "chargeCategoryId": 1438,
                          "description": "Trucking pre",
                          "section": "trucking_pre",
                          "value": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "originalValue": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "tenderId": "a175728e-883d-43ba-84c2-015d760f3ce2",
                          "level": 1
                        },
                        {
                          "id": "e34438a2-adff-477b-99e1-fd6629ed9aff",
                          "editId": "2f027b78-208c-4873-af8c-a740d1643cc4",
                          "order": 0,
                          "parentId": "723a9905-6b0d-42e6-b40f-3a1efc8f16fb",
                          "lineItemId": null,
                          "code": null,
                          "chargeCategoryId": "",
                          "description": "1 x Pallet",
                          "section": "trucking_pre",
                          "value": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "originalValue": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "tenderId": "a175728e-883d-43ba-84c2-015d760f3ce2",
                          "level": 2
                        },
                        {
                          "id": "7ccd3891-1e9c-45ce-8b06-466333b9d29d",
                          "editId": null,
                          "order": 0,
                          "parentId": "e34438a2-adff-477b-99e1-fd6629ed9aff",
                          "lineItemId": null,
                          "code": null,
                          "chargeCategoryId": null,
                          "description": "Fees charged in USD:",
                          "section": "trucking_pre",
                          "value": {
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "originalValue": {
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "tenderId": "a175728e-883d-43ba-84c2-015d760f3ce2",
                          "level": 3
                        },
                        {
                          "id": "a2dfa1cd-5650-4ce6-8e99-cd39194d380e",
                          "editId": "d6f28ec3-fca2-466e-a916-897f4b78a1cd",
                          "order": 0,
                          "parentId": "e34438a2-adff-477b-99e1-fd6629ed9aff",
                          "lineItemId": "d6f28ec3-fca2-466e-a916-897f4b78a1cd",
                          "code": "Fee 8",
                          "chargeCategoryId": null,
                          "description": "FEE 8 - ",
                          "section": "trucking_pre",
                          "originalValue": {
                            "included": false,
                            "excluded": false,
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "value": {
                            "included": false,
                            "excluded": false,
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "tenderId": "a175728e-883d-43ba-84c2-015d760f3ce2",
                          "level": 4,
                          "rateFactor": null,
                          "rate": null
                        },
                        {
                          "id": "a302c122-065d-4dd1-b6a9-91b32282082c",
                          "editId": null,
                          "order": 1,
                          "parentId": null,
                          "lineItemId": null,
                          "code": null,
                          "chargeCategoryId": 1441,
                          "description": "Export",
                          "section": "export",
                          "value": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "originalValue": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "tenderId": "a175728e-883d-43ba-84c2-015d760f3ce2",
                          "level": 1
                        },
                        {
                          "id": "30585f1a-1fe8-4d57-9bfb-99d08ab3aba3",
                          "editId": "2f027b78-208c-4873-af8c-a740d1643cc4",
                          "order": 0,
                          "parentId": "a302c122-065d-4dd1-b6a9-91b32282082c",
                          "lineItemId": null,
                          "code": null,
                          "chargeCategoryId": "",
                          "description": "1 x Pallet",
                          "section": "export",
                          "value": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "originalValue": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "tenderId": "a175728e-883d-43ba-84c2-015d760f3ce2",
                          "level": 2
                        },
                        {
                          "id": "b2a220d1-6f7a-45ad-84c4-30e0cae490ca",
                          "editId": null,
                          "order": 0,
                          "parentId": "30585f1a-1fe8-4d57-9bfb-99d08ab3aba3",
                          "lineItemId": null,
                          "code": null,
                          "chargeCategoryId": null,
                          "description": "Fees charged in USD:",
                          "section": "export",
                          "value": {
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "originalValue": {
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "tenderId": "a175728e-883d-43ba-84c2-015d760f3ce2",
                          "level": 3
                        },
                        {
                          "id": "f095cd43-56d2-4bfb-89c8-fe28802c1e9c",
                          "editId": "2fe874a0-76ab-403b-b96e-0b70a9542c99",
                          "order": 0,
                          "parentId": "30585f1a-1fe8-4d57-9bfb-99d08ab3aba3",
                          "lineItemId": "2fe874a0-76ab-403b-b96e-0b70a9542c99",
                          "code": "Fee 11",
                          "chargeCategoryId": null,
                          "description": "FEE 11 - ",
                          "section": "export",
                          "originalValue": {
                            "included": false,
                            "excluded": false,
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "value": {
                            "included": false,
                            "excluded": false,
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "tenderId": "a175728e-883d-43ba-84c2-015d760f3ce2",
                          "level": 4,
                          "rateFactor": null,
                          "rate": null
                        },
                        {
                          "id": "72385cd0-bd63-4c91-bf8c-31b5b3b276cd",
                          "editId": null,
                          "order": 2,
                          "parentId": null,
                          "lineItemId": null,
                          "code": null,
                          "chargeCategoryId": 1440,
                          "description": "Cargo",
                          "section": "cargo",
                          "value": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "originalValue": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "tenderId": "a175728e-883d-43ba-84c2-015d760f3ce2",
                          "level": 1
                        },
                        {
                          "id": "7074dee4-aa86-4f59-9882-0e1db1d13ca1",
                          "editId": "2f027b78-208c-4873-af8c-a740d1643cc4",
                          "order": 0,
                          "parentId": "72385cd0-bd63-4c91-bf8c-31b5b3b276cd",
                          "lineItemId": null,
                          "code": null,
                          "chargeCategoryId": "",
                          "description": "1 x Pallet",
                          "section": "cargo",
                          "value": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "originalValue": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "tenderId": "a175728e-883d-43ba-84c2-015d760f3ce2",
                          "level": 2
                        },
                        {
                          "id": "6622fe73-18c4-43b5-a9a4-407e94328e1e",
                          "editId": null,
                          "order": 0,
                          "parentId": "7074dee4-aa86-4f59-9882-0e1db1d13ca1",
                          "lineItemId": null,
                          "code": null,
                          "chargeCategoryId": null,
                          "description": "Fees charged in USD:",
                          "section": "cargo",
                          "value": {
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "originalValue": {
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "tenderId": "a175728e-883d-43ba-84c2-015d760f3ce2",
                          "level": 3
                        },
                        {
                          "id": "6414afda-ed6d-4e96-826b-0b7a0ddb0f3f",
                          "editId": "2c2b7b35-1b64-44ed-841c-efcd2e8dfb60",
                          "order": 0,
                          "parentId": "7074dee4-aa86-4f59-9882-0e1db1d13ca1",
                          "lineItemId": "2c2b7b35-1b64-44ed-841c-efcd2e8dfb60",
                          "code": "Fee 14",
                          "chargeCategoryId": null,
                          "description": "FEE 14 - ",
                          "section": "cargo",
                          "originalValue": {
                            "included": false,
                            "excluded": false,
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "value": {
                            "included": false,
                            "excluded": false,
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "tenderId": "a175728e-883d-43ba-84c2-015d760f3ce2",
                          "level": 4,
                          "rateFactor": null,
                          "rate": null
                        },
                        {
                          "id": "02528c16-f84f-49e8-81f0-da86b8b700e8",
                          "editId": null,
                          "order": 3,
                          "parentId": null,
                          "lineItemId": null,
                          "code": null,
                          "chargeCategoryId": 1442,
                          "description": "Import",
                          "section": "import",
                          "value": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "originalValue": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "tenderId": "a175728e-883d-43ba-84c2-015d760f3ce2",
                          "level": 1
                        },
                        {
                          "id": "dfb6231c-d2e9-4153-8904-2fe7f7b25cc1",
                          "editId": "2f027b78-208c-4873-af8c-a740d1643cc4",
                          "order": 0,
                          "parentId": "02528c16-f84f-49e8-81f0-da86b8b700e8",
                          "lineItemId": null,
                          "code": null,
                          "chargeCategoryId": "",
                          "description": "1 x Pallet",
                          "section": "import",
                          "value": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "originalValue": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "tenderId": "a175728e-883d-43ba-84c2-015d760f3ce2",
                          "level": 2
                        },
                        {
                          "id": "68206e95-a765-4bea-83bc-9601ad94e93a",
                          "editId": null,
                          "order": 0,
                          "parentId": "dfb6231c-d2e9-4153-8904-2fe7f7b25cc1",
                          "lineItemId": null,
                          "code": null,
                          "chargeCategoryId": null,
                          "description": "Fees charged in USD:",
                          "section": "import",
                          "value": {
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "originalValue": {
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "tenderId": "a175728e-883d-43ba-84c2-015d760f3ce2",
                          "level": 3
                        },
                        {
                          "id": "4e85e333-e7e9-4c4f-9a15-ac8b1188df7e",
                          "editId": "ed6463e2-797f-498e-a6f5-975a6d31245f",
                          "order": 0,
                          "parentId": "dfb6231c-d2e9-4153-8904-2fe7f7b25cc1",
                          "lineItemId": "ed6463e2-797f-498e-a6f5-975a6d31245f",
                          "code": "Fee 17",
                          "chargeCategoryId": null,
                          "description": "FEE 17 - ",
                          "section": "import",
                          "originalValue": {
                            "included": false,
                            "excluded": false,
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "value": {
                            "included": false,
                            "excluded": false,
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "tenderId": "a175728e-883d-43ba-84c2-015d760f3ce2",
                          "level": 4,
                          "rateFactor": null,
                          "rate": null
                        },
                        {
                          "id": "0c0805ae-82b5-47bf-948e-13c65323ba23",
                          "editId": null,
                          "order": 4,
                          "parentId": null,
                          "lineItemId": null,
                          "code": null,
                          "chargeCategoryId": 1439,
                          "description": "Trucking on",
                          "section": "trucking_on",
                          "value": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "originalValue": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "tenderId": "a175728e-883d-43ba-84c2-015d760f3ce2",
                          "level": 1
                        },
                        {
                          "id": "f83e114b-ebbe-48f1-86e8-c544154f3e00",
                          "editId": "2f027b78-208c-4873-af8c-a740d1643cc4",
                          "order": 0,
                          "parentId": "0c0805ae-82b5-47bf-948e-13c65323ba23",
                          "lineItemId": null,
                          "code": null,
                          "chargeCategoryId": "",
                          "description": "1 x Pallet",
                          "section": "trucking_on",
                          "value": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "originalValue": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "tenderId": "a175728e-883d-43ba-84c2-015d760f3ce2",
                          "level": 2
                        },
                        {
                          "id": "1845ead5-4a5c-4d2a-9543-86a4031aa373",
                          "editId": null,
                          "order": 0,
                          "parentId": "f83e114b-ebbe-48f1-86e8-c544154f3e00",
                          "lineItemId": null,
                          "code": null,
                          "chargeCategoryId": null,
                          "description": "Fees charged in USD:",
                          "section": "trucking_on",
                          "value": {
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "originalValue": {
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "tenderId": "a175728e-883d-43ba-84c2-015d760f3ce2",
                          "level": 3
                        },
                        {
                          "id": "b8badaa5-2b2a-40f5-a67a-ca6ebccc24e5",
                          "editId": "2b112b2a-b883-4981-93f1-3b83aa6a0446",
                          "order": 0,
                          "parentId": "f83e114b-ebbe-48f1-86e8-c544154f3e00",
                          "lineItemId": "2b112b2a-b883-4981-93f1-3b83aa6a0446",
                          "code": "Fee 20",
                          "chargeCategoryId": null,
                          "description": "FEE 20 - ",
                          "section": "trucking_on",
                          "originalValue": {
                            "included": false,
                            "excluded": false,
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "value": {
                            "included": false,
                            "excluded": false,
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "tenderId": "a175728e-883d-43ba-84c2-015d760f3ce2",
                          "level": 4,
                          "rateFactor": null,
                          "rate": null
                        }
                      ],
                      "route": "Gothenburg - Shanghai",
                      "vessel": "",
                      "id": "a175728e-883d-43ba-84c2-015d760f3ce2",
                      "pickupTruckType": null,
                      "deliveryTruckType": null,
                      "pickupCarrier": "SACO",
                      "deliveryCarrier": "SACO",
                      "pickupService": "standard",
                      "deliveryService": "standard"
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/quotationTender"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Invalid Charge ID",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "message": "Couldn't find Journey::Result with 'id'=deadbeef",
                  "status": "not_found",
                  "code": 404
                }
              }
            }
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/results/{result_id}/charges": {
      "get": {
        "summary": "Fetch Charges (Journey::LineItem)",
        "tags": [
          "Quote"
        ],
        "description": "Fetches the Line Items for the Result in question.",
        "operationId": "getCharge",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "result_id",
            "in": "path",
            "description": "The selected result ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "currency",
            "in": "query",
            "description": "Optional currency to convert charges to",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "0137237d-ddef-41bf-b647-2a132087eb62",
                      "type": "charge",
                      "attributes": {
                        "id": "0137237d-ddef-41bf-b647-2a132087eb62",
                        "feeCode": "Fee 50",
                        "description": "",
                        "value": {
                          "value": "23.809523809523808",
                          "currency": "EUR"
                        },
                        "order": 50,
                        "section": "Trucking on",
                        "unitPrice": {
                          "value": "7.936507936507936",
                          "currency": "EUR"
                        },
                        "units": 3
                      }
                    },
                    {
                      "id": "3a94e420-05a8-4ddd-b2cd-e519b0e16dcc",
                      "type": "charge",
                      "attributes": {
                        "id": "3a94e420-05a8-4ddd-b2cd-e519b0e16dcc",
                        "feeCode": "Fee 53",
                        "description": "",
                        "value": {
                          "value": "23.809523809523808",
                          "currency": "EUR"
                        },
                        "order": 53,
                        "section": "Import",
                        "unitPrice": {
                          "value": "7.936507936507936",
                          "currency": "EUR"
                        },
                        "units": 3
                      }
                    },
                    {
                      "id": "4e1d686c-6b62-4d9c-a5ae-6d7121a51428",
                      "type": "charge",
                      "attributes": {
                        "id": "4e1d686c-6b62-4d9c-a5ae-6d7121a51428",
                        "feeCode": "Fee 56",
                        "description": "",
                        "value": {
                          "value": "23.809523809523808",
                          "currency": "EUR"
                        },
                        "order": 56,
                        "section": "Cargo",
                        "unitPrice": {
                          "value": "7.936507936507936",
                          "currency": "EUR"
                        },
                        "units": 3
                      }
                    },
                    {
                      "id": "5d60c61c-f8c6-440f-8244-39830b9b06ba",
                      "type": "charge",
                      "attributes": {
                        "id": "5d60c61c-f8c6-440f-8244-39830b9b06ba",
                        "feeCode": "Fee 59",
                        "description": "",
                        "value": {
                          "value": "23.809523809523808",
                          "currency": "EUR"
                        },
                        "order": 59,
                        "section": "Import",
                        "unitPrice": {
                          "value": "7.936507936507936",
                          "currency": "EUR"
                        },
                        "units": 3
                      }
                    },
                    {
                      "id": "3c886910-bbea-4aa7-a717-b02e7feeebb7",
                      "type": "charge",
                      "attributes": {
                        "id": "3c886910-bbea-4aa7-a717-b02e7feeebb7",
                        "feeCode": "Fee 62",
                        "description": "",
                        "value": {
                          "value": "23.809523809523808",
                          "currency": "EUR"
                        },
                        "order": 62,
                        "section": "Trucking on",
                        "unitPrice": {
                          "value": "7.936507936507936",
                          "currency": "EUR"
                        },
                        "units": 3
                      }
                    }
                  ],
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The ID of the Charge"
                          },
                          "type": {
                            "type": "string"
                          },
                          "attributes": {
                            "$ref": "#/components/schemas/v2Charge"
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Invalid Result ID",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "message": "Couldn't find Journey::Result with 'id'=deadbeef",
                  "status": "not_found",
                  "code": 404
                }
              }
            }
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/clients": {
      "get": {
        "summary": "Fetch all clients",
        "tags": [
          "Clients"
        ],
        "description": "Fetch all customer client accounts.",
        "operationId": "getClients",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "Search query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Results per page",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "157c77f5-9ccd-4264-9665-06f25a266ee0",
                      "type": "client",
                      "attributes": {
                        "email": "john.doe.119@itsmycargo.test",
                        "organizationId": "68a2fad2-d311-4304-ad09-efbba7646e53",
                        "firstName": "Guest",
                        "lastName": "User 119",
                        "phone": "081 9847079",
                        "companyName": "default",
                        "paymentTerms": "Some quotation payment terms",
                        "companyId": "506f8f77-572e-4716-993c-6c021dcda07b"
                      }
                    }
                  ],
                  "links": {
                    "first": "http://www.example.com/v1/organizations/68a2fad2-d311-4304-ad09-efbba7646e53/clients?page=1&per_page=1&q=",
                    "prev": null,
                    "next": "http://www.example.com/v1/organizations/68a2fad2-d311-4304-ad09-efbba7646e53/clients?page=2&per_page=1&q=",
                    "last": "http://www.example.com/v1/organizations/68a2fad2-d311-4304-ad09-efbba7646e53/clients?page=6&per_page=1&q="
                  },
                  "meta": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/v1Client"
                      }
                    },
                    "links": {
                      "$ref": "#/components/schemas/paginationLinks"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Invalid Credentials"
          }
        }
      },
      "post": {
        "summary": "Create a new client",
        "tags": [
          "Clients"
        ],
        "description": "Creates a new client for the customer.",
        "operationId": "createClient",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "5bd0064c-986d-4159-a254-492b5dca73e8",
                    "type": "client",
                    "attributes": {
                      "email": "john@example.com",
                      "organizationId": "0532d4ad-9e9c-4444-9abe-fba937d6249c",
                      "firstName": "John",
                      "lastName": "Doe",
                      "phone": "+1 2345 2345",
                      "companyName": "default",
                      "paymentTerms": "Some quotation payment terms",
                      "companyId": "b38c9918-51d6-4022-878b-f20d39c522ec"
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                }
              }
            }
          },
          "400": {
            "description": "invalid request",
            "content": {
              "application/json": {
                "example": {
                  "error": "Validation failed: Email can't be blank, Email is invalid"
                }
              }
            }
          },
          "401": {
            "description": "Invalid Credentials"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/client"
              }
            }
          },
          "required": true
        }
      }
    },
    "/v1/organizations/{organization_id}/clients/{id}": {
      "get": {
        "summary": "Fetch specific client",
        "tags": [
          "Clients"
        ],
        "description": "Fetch a given client.",
        "operationId": "getClient",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Client ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "0b6dedfa-3a33-4bbf-b4b5-8926e1fd3bdb",
                    "type": "client",
                    "attributes": {
                      "email": "john.doe.149@itsmycargo.test",
                      "organizationId": "134ec172-620c-46ec-9e48-94a19027b600",
                      "firstName": "Guest",
                      "lastName": "User 149",
                      "phone": "081 9847079",
                      "companyName": "default",
                      "paymentTerms": "Some quotation payment terms",
                      "companyId": "deed9dba-704b-4605-9dbe-582349b997eb"
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/v1Client"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Invalid Credentials"
          },
          "404": {
            "description": "Invalid Client ID",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "message": "Couldn't find Users::Client with 'id'=deadbeef [WHERE \"users_clients\".\"deleted_at\" IS NULL AND \"users_clients\".\"deleted_at\" IS NULL AND \"users_clients\".\"organization_id\" = $1]",
                  "status": "not_found",
                  "code": 404
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Destroy a specific client",
        "tags": [
          "Clients"
        ],
        "description": "Deletes an client.",
        "operationId": "deleteClient",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Client ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation"
          },
          "404": {
            "description": "Invalid Client ID",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "message": "Couldn't find UserServices::Client with 'id'=deadbeef [WHERE \"users_clients\".\"deleted_at\" IS NULL AND \"users_clients\".\"deleted_at\" IS NULL AND \"users_clients\".\"organization_id\" = $1]",
                  "status": "not_found",
                  "code": 404
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update",
        "tags": [
          "Clients"
        ],
        "description": "Update client details.",
        "operationId": "updateClient",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Client ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation"
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "example": {
                  "error": [
                    "Email can't be blank",
                    "Email is invalid"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "client": {
                    "$ref": "#/components/schemas/client"
                  }
                },
                "required": [
                  "client"
                ]
              }
            }
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/clients/{id}/password_reset": {
      "patch": {
        "summary": "Password Reset",
        "tags": [
          "Clients"
        ],
        "description": "Resets a client password.",
        "operationId": "passwordReset",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Client ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "password": "s4CbpKwVaa9Dft2f"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "password": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "password"
                      ]
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Invalid Credentials"
          },
          "404": {
            "description": "Invalid Client ID",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "message": "Couldn't find Users::Client with 'id'=deadbeef [WHERE \"users_clients\".\"deleted_at\" IS NULL AND \"users_clients\".\"deleted_at\" IS NULL AND \"users_clients\".\"organization_id\" = $1]",
                  "status": "not_found",
                  "code": 404
                }
              }
            }
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/colli_types": {
      "get": {
        "summary": "Fetch colli types for the Organization",
        "tags": [
          "ColliTypes"
        ],
        "description": "Fetch colli types for the Organization",
        "operationId": "getColliType",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [

                  ]
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/companies/{company_id}": {
      "put": {
        "summary": "Update a company",
        "tags": [
          "Companies"
        ],
        "description": "Update a specific company",
        "operationId": "updateCompany",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "company_id",
            "in": "path",
            "description": "The current company id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "eb3e52e5-d07e-4a0f-b525-bda6b9d88350",
                    "type": "company",
                    "attributes": {
                      "id": "eb3e52e5-d07e-4a0f-b525-bda6b9d88350",
                      "email": "awesome@company.com",
                      "name": "awesome company",
                      "paymentTerms": "an awesome payment term",
                      "phone": "112233",
                      "vatNumber": "VAT12345"
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/company"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "example": {
                  "error": "Please provide at least one param of email, name, paymentTerms, phone, or vatNumber"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "company": {
                    "type": "object",
                    "properties": {
                      "email": {
                        "type": "string",
                        "description": "The email address of the company"
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the company"
                      },
                      "paymentTerms": {
                        "type": "string",
                        "description": "The payment terms, set out by the company"
                      },
                      "phone": {
                        "type": "string",
                        "description": "The phone number of the company"
                      },
                      "vatNumber": {
                        "type": "string",
                        "description": "The VAT number of the company"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/companies/{company_id}": {
      "get": {
        "summary": "Fetch a company",
        "tags": [
          "Companies"
        ],
        "description": "Fetch a specific company",
        "operationId": "getCompany",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "company_id",
            "in": "path",
            "description": "The current company id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "e7b424c2-23eb-4f24-9483-2071174b0098",
                    "type": "company",
                    "attributes": {
                      "id": "e7b424c2-23eb-4f24-9483-2071174b0098",
                      "email": "foo@bar.com",
                      "name": "company1",
                      "paymentTerms": "Some quotation payment terms",
                      "phone": "112233",
                      "vatNumber": "DE-VATNUMBER1",
                      "contactPersonName": null,
                      "contactPhone": null,
                      "contactEmail": null,
                      "registrationNumber": null
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "attributes": {
                          "$ref": "#/components/schemas/company"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "not found operation",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "message": "Couldn't find Companies::Company with 'id'=non-existent-id [WHERE \"companies_companies\".\"deleted_at\" IS NULL]",
                  "status": "not_found",
                  "code": 404
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update a company",
        "tags": [
          "Companies"
        ],
        "description": "Update a specific company",
        "operationId": "updateCompany",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "company_id",
            "in": "path",
            "description": "The current company id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "75326566-5db1-4416-a1d7-cfb8bbcd7f76",
                    "type": "company",
                    "attributes": {
                      "id": "75326566-5db1-4416-a1d7-cfb8bbcd7f76",
                      "email": "awesome@company.com",
                      "name": "awesome company",
                      "paymentTerms": "an awesome payment term",
                      "phone": "112233",
                      "vatNumber": "VAT12345",
                      "contactPersonName": null,
                      "contactPhone": null,
                      "contactEmail": null,
                      "registrationNumber": null
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/company"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "example": {
                  "error": "Please provide at least one param of email, name, paymentTerms, phone, or vatNumber"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "company": {
                    "type": "object",
                    "properties": {
                      "email": {
                        "type": "string",
                        "description": "The email address of the company"
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the company"
                      },
                      "paymentTerms": {
                        "type": "string",
                        "description": "The payment terms, set out by the company"
                      },
                      "phone": {
                        "type": "string",
                        "description": "The phone number of the company"
                      },
                      "vatNumber": {
                        "type": "string",
                        "description": "The VAT number of the company"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a company",
        "tags": [
          "Companies"
        ],
        "description": "Delete a specific company",
        "operationId": "deleteCompany",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "company_id",
            "in": "path",
            "description": "The current company id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "success": true
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/companies": {
      "get": {
        "summary": "Fetch companies",
        "tags": [
          "Companies"
        ],
        "description": "Fetches list of companies",
        "operationId": "getCompanies",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "perPage",
            "in": "query",
            "description": "number of companies per page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "current page number",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "The attribute by which to sort the Companies",
            "enum": [
              "name",
              "country",
              "activity"
            ],
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "direction",
            "in": "query",
            "description": "The defining whether the sorting is ascending or descending",
            "enum": [
              "asc",
              "desc"
            ],
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchBy",
            "in": "query",
            "description": "The attribute of the Company and its related models to search through",
            "enum": [
              "name_search",
              "country_search",
              "activity_search"
            ],
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchQuery",
            "in": "query",
            "description": "The value we want to use in our search",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "beforeDate",
            "in": "query",
            "description": "To filter companies which updated queries before a specific date in `YYYY-mm-dd` format default being today",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "afterDate",
            "in": "query",
            "description": "To filter companies which updated queries after a specific date in `YYYY-mm-dd` format",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [

                  ],
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "attributes": {
                            "$ref": "#/components/schemas/company"
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "example": {
                  "errors": {
                    "search_by": [
                      {
                        "error_code": "INVALID_SEARCH_BY_OPTION",
                        "error_message": "price is unsupported search by option, options available for search by are : [\"name\", \"country\", \"activity\"]"
                      },
                      {
                        "error_code": "SEARCH_QUERY_MISSING",
                        "error_message": "search query needs to be specified with search by"
                      }
                    ],
                    "date": [
                      {
                        "error_code": "INVALID_DATE",
                        "error_message": "supported date format is `YYYY-mm-dd`"
                      }
                    ]
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "properties": {
                        "date": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "error_code": {
                                "type": "string",
                                "description": "describes 422 errors with self explanatory error code `INVALID_DATE`"
                              },
                              "error_message": {
                                "type": "string",
                                "description": "describes the reason for the error with the options to be used for search by"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create new company",
        "tags": [
          "Companies"
        ],
        "description": "Create new company",
        "operationId": "createCompany",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "company creation success",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "ee965ec7-190d-4ca9-9898-46b93fd1f646",
                    "type": "company",
                    "attributes": {
                      "id": "ee965ec7-190d-4ca9-9898-46b93fd1f646",
                      "email": "company@test-company.com",
                      "name": "test-company",
                      "paymentTerms": null,
                      "phone": "1234567890",
                      "vatNumber": null,
                      "contactPersonName": null,
                      "contactPhone": null,
                      "contactEmail": null,
                      "registrationNumber": null
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "attributes": {
                          "$ref": "#/components/schemas/company"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "example": {
                  "error_code": "duplicate_company_record"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "The email address of the company"
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the company"
                  },
                  "paymentTerms": {
                    "type": "string",
                    "description": "The payment terms, set out by the company",
                    "nullable": true
                  },
                  "phone": {
                    "type": "string",
                    "description": "The phone number of the company",
                    "nullable": true
                  },
                  "vatNumber": {
                    "type": "string",
                    "description": "The VAT number of the company",
                    "nullable": true
                  },
                  "contactPersonName": {
                    "type": "string",
                    "description": "The name of the contact person/employee from the company",
                    "nullable": true
                  },
                  "contactPhone": {
                    "type": "string",
                    "description": "The phone number of the contact person from the company",
                    "nullable": true
                  },
                  "contactEmail": {
                    "type": "string",
                    "description": "The email of the contact person from the company",
                    "nullable": true
                  },
                  "registrationNumber": {
                    "type": "string",
                    "description": "The registration number set by company",
                    "nullable": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/countries": {
      "get": {
        "summary": "Fetch a list of countries",
        "tags": [
          "countries"
        ],
        "description": "fetch a list of countries",
        "operationId": "getCountries",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [

                  ],
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "description": "Id of the countries object"
                              },
                              "name": {
                                "description": "Name of the country",
                                "type": "string"
                              },
                              "code": {
                                "description": "Country code",
                                "type": "string"
                              },
                              "flag": {
                                "description": "Url to retrieve flag svg",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/dashboard": {
      "get": {
        "summary": "Fetch Dashboard Widget",
        "tags": [
          "Dashboard"
        ],
        "description": "Fetch widget date for the dashboard.",
        "operationId": "getDashboard",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "widget",
            "in": "query",
            "description": "Widget to be fetch",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "description": "Start date of dashboard data",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "description": "End date of dashboard data",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": 0
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "oneOf": [
                        {
                          "$ref": "#/components/schemas/analyticsCount"
                        },
                        {
                          "$ref": "#/components/schemas/analyticsTotal"
                        },
                        {
                          "$ref": "#/components/schemas/analyticsListCount"
                        }
                      ]
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/equipments": {
      "get": {
        "summary": "Fetch all available equipment",
        "tags": [
          "Quote"
        ],
        "description": "Fetch availavble equipment for the route.",
        "operationId": "getEquipments",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "origin_nexus_id",
            "in": "query",
            "description": "the id of the origin",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "destination_nexus_id",
            "in": "query",
            "description": "the id of the destination",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    "fcl_20",
                    "fcl_40"
                  ]
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Invalid Credentials"
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/queries/{query_id}/errors": {
      "get": {
        "summary": "Fetch Errors for the Result Set",
        "tags": [
          "Users"
        ],
        "description": "Fetch errors for the given result set.",
        "operationId": "getResultSetErrors",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query_id",
            "in": "path",
            "description": "Query ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "274a4845-5e35-433f-8632-d14d05147550",
                      "type": "error",
                      "attributes": {
                        "id": "274a4845-5e35-433f-8632-d14d05147550",
                        "carrier": "MSC",
                        "code": 1001,
                        "limit": "1000",
                        "modeOfTransport": "ocean",
                        "property": "Weight",
                        "service": "Standard",
                        "value": "1100",
                        "cargoUnitId": "875d5d51-df19-4e93-9251-a47869d41f48",
                        "queryId": "ebba95b0-2dae-40a9-b08c-9de0d0396f79"
                      }
                    }
                  ],
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/journeyError"
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/file_descriptors": {
      "post": {
        "summary": "Create a Request",
        "tags": [
          "FileDescriptor"
        ],
        "description": "Creates a File::FileDescriptor with the provided information",
        "operationId": "createFileDescriptor",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [

        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "7af6a46d-8463-46d6-aec3-136b56806e41",
                    "type": "fileDescriptor",
                    "attributes": {
                      "organizationId": "69634582-5d87-424b-bc17-ff026a4349d5",
                      "filePath": "/testing/download/sailing_schedule/test.png",
                      "fileType": "schedule",
                      "originator": "SFTP",
                      "source": "itsmycargo_dataflow",
                      "sourceType": "S3_BUCKET",
                      "status": "ready",
                      "fileCreatedAt": "2022-05-09 12:29:22 UTC",
                      "fileUpdatedAt": "2022-05-09 12:29:22 UTC",
                      "syncedAt": "2022-05-10 12:29:22 UTC"
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "attributes": {
                          "$ref": "#/components/schemas/file_descriptor"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "message": "param is missing or the value is empty: fileDescriptor",
                  "status": "bad_request",
                  "code": 400
                }
              }
            }
          },
          "422": {
            "description": "unprocessable entity",
            "content": {
              "application/json": {
                "example": {
                  "errors": {
                    "date": [
                      {
                        "error_code": "INVALID_DATE",
                        "error_message": "supported date format is `YYYY-mm-dd HH:MM:SS`"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "filePath": {
                    "type": "string",
                    "description": "File path description of a file with its name."
                  },
                  "fileType": {
                    "type": "string",
                    "description": "File identifier matching the uploaders."
                  },
                  "originator": {
                    "type": "string",
                    "description": "Datasource  of the file ex: 'SFTP'."
                  },
                  "source": {
                    "type": "string",
                    "description": "Current address of the file ex: s3 bucket url link."
                  },
                  "sourceType": {
                    "type": "string",
                    "description": "source identifier ex: S3_BUCKET"
                  },
                  "organizationSlug": {
                    "type": "string",
                    "description": "Organization to which the file belong to."
                  },
                  "fileCreatedAt": {
                    "type": "string",
                    "description": "The created date and time of the file even before it was synced."
                  },
                  "fileUpdatedAt": {
                    "type": "string",
                    "description": "File updated at date and time in its originator."
                  },
                  "syncedAt": {
                    "type": "string",
                    "description": "Date and time when the file was synced to the source."
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/groups": {
      "get": {
        "summary": "Fetch all groups",
        "tags": [
          "Groups"
        ],
        "description": "Fetch all groups.",
        "operationId": "getGroups",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "6570afa5-0ef5-4252-a5df-1b558c46c897",
                      "type": "organizationsGroup",
                      "attributes": {
                        "id": "6570afa5-0ef5-4252-a5df-1b558c46c897",
                        "name": "Group1"
                      }
                    },
                    {
                      "id": "adb3d333-ff08-49a0-ae3a-edb911b0d36e",
                      "type": "organizationsGroup",
                      "attributes": {
                        "id": "adb3d333-ff08-49a0-ae3a-edb911b0d36e",
                        "name": "Group2"
                      }
                    },
                    {
                      "id": "6125ed63-0d18-4192-8b59-d15a30b2a1d1",
                      "type": "organizationsGroup",
                      "attributes": {
                        "id": "6125ed63-0d18-4192-8b59-d15a30b2a1d1",
                        "name": "Group3"
                      }
                    },
                    {
                      "id": "68b39eb0-4376-464d-bbbd-5ef6cf6c3504",
                      "type": "organizationsGroup",
                      "attributes": {
                        "id": "68b39eb0-4376-464d-bbbd-5ef6cf6c3504",
                        "name": "Group4"
                      }
                    },
                    {
                      "id": "491f2544-0bbf-4dfc-872e-79e7c8f3439c",
                      "type": "organizationsGroup",
                      "attributes": {
                        "id": "491f2544-0bbf-4dfc-872e-79e7c8f3439c",
                        "name": "Group5"
                      }
                    }
                  ],
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/group"
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Invalid Credentials"
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/itineraries": {
      "get": {
        "summary": "Fetch list of itineraries belonging to an organization",
        "tags": [
          "Quote"
        ],
        "description": "Fetch list of itineraries belonging to an organization",
        "operationId": "getItineraries",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "423",
                      "type": "itinerary",
                      "attributes": {
                        "id": 423,
                        "modeOfTransport": "ocean",
                        "name": "Hamburg - Shanghai"
                      },
                      "relationships": {
                        "stops": {
                          "data": [

                          ]
                        }
                      }
                    }
                  ],
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "number"
                              },
                              "modeOfTransport": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "modeOfTransport",
                              "name"
                            ]
                          },
                          "relationships": {
                            "type": "object",
                            "properties": {
                              "stops": {
                                "type": "object",
                                "properties": {
                                  "data": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string"
                                        },
                                        "type": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "id",
                                        "type"
                                      ]
                                    }
                                  }
                                },
                                "required": [
                                  "data"
                                ]
                              }
                            },
                            "required": [
                              "stops"
                            ]
                          }
                        },
                        "required": [
                          "id",
                          "type",
                          "attributes",
                          "relationships"
                        ]
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/locations/origins": {
      "get": {
        "summary": "Fetch available origins",
        "tags": [
          "Quote"
        ],
        "description": "Fetch available origins",
        "operationId": "getLocationOrigins",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "Query to search locations",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "ID of location to query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "load_type",
            "in": "query",
            "description": "Load type for location",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "1354",
                      "type": "nexus",
                      "attributes": {
                        "id": 1354,
                        "name": "Gothenburg",
                        "latitude": 57.694253,
                        "longitude": 11.854048,
                        "modesOfTransport": [
                          "ocean"
                        ],
                        "countryName": "Sweden",
                        "locode": "SEGOT"
                      }
                    }
                  ],
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/nexus"
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/locations/destinations": {
      "get": {
        "summary": "Fetch available destinations",
        "tags": [
          "Quote"
        ],
        "description": "Fetch available destinations",
        "operationId": "getLocationDestinations",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "Query to search locations",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "ID of location to query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "load_type",
            "in": "query",
            "description": "Load type for location",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "1357",
                      "type": "nexus",
                      "attributes": {
                        "id": 1357,
                        "name": "Shanghai",
                        "latitude": 31.2231338,
                        "longitude": 120.9162975,
                        "modesOfTransport": [
                          "ocean"
                        ],
                        "countryName": "China",
                        "locode": "CNSHA"
                      }
                    }
                  ],
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/nexus"
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/oauth/token/info": {
      "get": {
        "summary": "Fetch information of current token",
        "tags": [
          "Authentication"
        ],
        "description": "Fetch information of current token",
        "operationId": "getTokenInfo",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "access_token": "09K6m09AEMsX_pGekfhNx8wUOhmiv0Me1YuIUIM8P-0",
                  "token_type": "Bearer",
                  "scope": "public",
                  "created_at": 1652272164
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "access_token": {
                      "type": "string",
                      "description": "Token used to access this endpoint"
                    },
                    "token_type": {
                      "type": "string",
                      "description": "Type of the token (always Bearer)"
                    },
                    "scope": {
                      "type": "string",
                      "description": "OAuth scopes of the token."
                    },
                    "created_at": {
                      "type": "number",
                      "description": "Timestamp when token was created."
                    }
                  },
                  "required": [
                    "access_token",
                    "token_type",
                    "scope",
                    "created_at"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "example": {
                  "error": "invalid_request",
                  "error_description": "The request is missing a required parameter, includes an unsupported parameter value, or is otherwise malformed."
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error code describing the encountered error."
                    },
                    "error_description": {
                      "type": "string",
                      "description": "Detailed description of the error occurred."
                    }
                  },
                  "required": [
                    "error",
                    "error_description"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/offers": {
      "post": {
        "summary": "Create new offer",
        "tags": [
          "Offer"
        ],
        "description": "Create a new offer. To be able to download quotation results as a PDF, first the offer must be created with results that are to be included in the offer.\nCreating a new offer with the selected result IDs allows the backend system to generate a downloadable PDF for these results.\n",
        "operationId": "createOffer",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "c481b33b-8b05-4c4a-b5eb-d62f390131f1",
                    "type": "offer",
                    "attributes": {
                      "id": "c481b33b-8b05-4c4a-b5eb-d62f390131f1",
                      "url": "http://localhost:3000/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBaGtUIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b670c0bf17db1bc35ca15c7df1b6023b68bffd68/offer.pdf?disposition=attachment"
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/offer"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "422": {
            "description": "unprocessable entity",
            "content": {
              "application/json": {
                "example": {
                  "error": "No results provided"
                },
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            }
          },
          "404": {
            "description": "results not found",
            "content": {
              "application/json": {
                "example": {
                  "error": "No results found"
                },
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resultIds": {
                    "description": "array of the ids of the results to be included in the offer",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "resultIds"
                ]
              }
            }
          }
        }
      }
    },
    "/v1/organization": {
      "get": {
        "summary": "Fetch current organization",
        "tags": [
          "Organization"
        ],
        "description": "Fetch information of the current organization, automatically detected by the\nrequester domain (referrer).\n\nCurrent organization is detected automatically based on the following hierachy:\n  1. Referrer domain as is, e.g. yourdemo.itsmycargo.shop\n  2. Slug as subdomain, e.g. yourdemo.lvh.me\n",
        "operationId": "getOrganization",
        "parameters": [
          {
            "name": "Referer",
            "in": "header",
            "description": "HTTP Referrer",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "f709577a-e1cf-4449-882e-a73cad3e8de3",
                    "type": "organization",
                    "attributes": {
                      "slug": "test_214",
                      "name": "Freight Spedetion #214"
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/organization"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/v1/organizations": {
      "get": {
        "summary": "Fetch all organizations",
        "tags": [
          "Users"
        ],
        "description": "Fetch all organizations",
        "operationId": "getOrganizations",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [

                  ],
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/organization"
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Invalid Credentials"
          }
        }
      }
    },
    "/v1/organizations/{id}/countries": {
      "get": {
        "summary": "Fetch enabled countries for an organization",
        "tags": [
          "Users"
        ],
        "description": "Fetch enabled countries for an organization",
        "operationId": "getCountries",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "711",
                      "type": "country",
                      "attributes": {
                        "name": "Sweden",
                        "code": "SE",
                        "flag": "https://restcountries.eu/data/sek.svg"
                      }
                    }
                  ],
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/country"
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Invalid Credentials"
          }
        }
      }
    },
    "/v2/passwords/{reset_password_token}": {
      "patch": {
        "summary": "Reset password for the client's password token",
        "tags": [
          "Reset Password"
        ],
        "description": "Resets password for the specified client retrieved from the reset_password_token",
        "operationId": "reset_password",
        "parameters": [
          {
            "name": "reset_password_token",
            "in": "path",
            "description": "one time reset_password_token generated for the client",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Referer",
            "in": "header",
            "description": "HTTP Referrer from which the host/domain information will be extracted",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "success": true
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "example": {
                  "error_code": "password_mismatch"
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error_code": {
                      "type": "string",
                      "description": "describes password errors which is either `password_mismatch` or `weak_password`"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "password": {
                    "type": "string",
                    "description": "new password of the client"
                  },
                  "password_confirmation": {
                    "type": "string",
                    "description": "confirmation on the new password"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/passwords/": {
      "post": {
        "summary": "Request reset password email for an user",
        "tags": [
          "Reset Password"
        ],
        "description": "Request reset password email specified user email",
        "operationId": "reset_password",
        "parameters": [
          {
            "name": "Referer",
            "in": "header",
            "description": "HTTP Referrer from which the host/domain information will be extracted",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "success": true
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "error_code": "user_not_available",
                  "success": false
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error_code": {
                      "type": "string",
                      "description": "describes unauthorized error reason with error codes `user_not_available`, `sso_user_not_supported`, invalid_or_empty_referer"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "email id of the user for resetting password"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/admin/passwords/{reset_password_token}": {
      "patch": {
        "summary": "Reset password for the Admin users password token",
        "tags": [
          "Reset Password"
        ],
        "description": "Resets password for the specified user retrieved from the reset_password_token",
        "operationId": "reset_password",
        "parameters": [
          {
            "name": "reset_password_token",
            "in": "path",
            "description": "one time reset_password_token generated for the User",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "success": true
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "example": {
                  "error_code": "password_mismatch"
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error_code": {
                      "type": "string",
                      "description": "describes password errors which is either `password_mismatch` or `weak_password`"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "password": {
                    "type": "string",
                    "description": "new password of the user"
                  },
                  "password_confirmation": {
                    "type": "string",
                    "description": "confirmation on the new password"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/admin/passwords/": {
      "post": {
        "summary": "Request reset password email for an user",
        "tags": [
          "Reset Password"
        ],
        "description": "Request reset password email specified user email",
        "operationId": "reset_password",
        "parameters": [
          {
            "name": "Referer",
            "in": "header",
            "description": "HTTP Referrer from which the host/domain information will be extracted",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "success": true
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "error_code": "invalid_or_empty_referer",
                  "success": false
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error_code": {
                      "type": "string",
                      "description": "describes unauthorized error reason with error codes `user_not_available`, `sso_user_not_supported`, invalid_or_empty_referer"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "email id of the user for resetting password"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/ports": {
      "get": {
        "summary": "Fetch list of ports",
        "tags": [
          "Ahoy"
        ],
        "description": "Fetch list of ports",
        "operationId": "getPorts",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "location_type",
            "in": "query",
            "description": "Location Type of request origin/destination",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "location_id",
            "in": "query",
            "description": "ID of selected location",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Text input for query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "1355",
                      "type": "port",
                      "attributes": {
                        "id": 1355,
                        "name": "Shanghai",
                        "hubType": "ocean"
                      }
                    }
                  ],
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "number"
                              },
                              "name": {
                                "type": "string"
                              },
                              "hubType": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "name",
                              "hubType"
                            ]
                          }
                        },
                        "required": [
                          "id",
                          "type",
                          "attributes"
                        ]
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/profile": {
      "get": {
        "summary": "Fetch client profile",
        "tags": [
          "Profiles"
        ],
        "description": "Retrieve user's profile. User's profile includes additional information besides email that are used usually to better display user information, has more detailed contact information etc.\n      User profile includes name (as first name, and last name) which can be used for display purposes.",
        "operationId": "getProfile",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "f29d13c4-a09d-4ebe-9a67-55e4ed2988ab",
                    "type": "profile",
                    "attributes": {
                      "email": "john.doe.267@itsmycargo.test",
                      "firstName": "Guest",
                      "lastName": "User 267",
                      "phone": "081 9847079",
                      "currency": "EUR",
                      "language": "en-GB",
                      "locale": "en-GB",
                      "newUser": true
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/profile"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Invalid Credentials"
          }
        }
      },
      "patch": {
        "summary": "Update",
        "tags": [
          "Profiles"
        ],
        "description": "Update profile details.",
        "operationId": "updateProfile",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "b1a9b18f-ddab-4cce-92f5-5bad0023ce56",
                    "type": "profile",
                    "attributes": {
                      "email": "john@example.com",
                      "firstName": "John",
                      "lastName": "Doe",
                      "phone": "081 9847079",
                      "currency": "EUR",
                      "language": "en-GB",
                      "locale": "en-GB",
                      "newUser": true
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "example": {
                  "error": [
                    "Email has already been taken"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "profile": {
                    "type": "object",
                    "properties": {
                      "email": {
                        "description": "The new email of the client",
                        "type": "string",
                        "pattern": "email",
                        "nullable": true
                      },
                      "firstName": {
                        "description": "First name of the user",
                        "type": "string",
                        "nullable": true
                      },
                      "lastName": {
                        "description": "Last name of the user",
                        "type": "string",
                        "nullable": true
                      },
                      "currency": {
                        "description": "ISO 4217 3 letter currency code",
                        "type": "string",
                        "nullable": true
                      },
                      "language": {
                        "description": "Language code eg. en-US",
                        "type": "string",
                        "nullable": true
                      },
                      "locale": {
                        "description": "Localization format eg. en-US",
                        "type": "string",
                        "nullable": true
                      },
                      "password": {
                        "description": "A new password for the user account",
                        "type": "string",
                        "minLength": 8,
                        "nullable": true
                      }
                    }
                  }
                },
                "required": [
                  "profile"
                ]
              }
            }
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/queries": {
      "post": {
        "summary": "Create new query",
        "tags": [
          "Query"
        ],
        "description": "Create new query",
        "operationId": "createQuery",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation (Cargo Item)",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "1e13f539-523a-4fae-a594-8c649d16ade5",
                    "type": "query",
                    "attributes": {
                      "id": "1e13f539-523a-4fae-a594-8c649d16ade5",
                      "billable": true,
                      "loadType": "cargo_item",
                      "originName": "SEGOT",
                      "destinationName": "CNSHA",
                      "reference": null,
                      "modesOfTransport": [

                      ],
                      "client": {
                        "data": {
                          "id": "143e1ebb-cced-4a95-abeb-b9fa3dd6073b",
                          "type": "client",
                          "attributes": {
                            "email": "john.doe.286@itsmycargo.test",
                            "organizationId": "badac39b-0f07-4dc6-b556-0745c81bc821",
                            "firstName": "Guest",
                            "lastName": "User 286",
                            "phone": "081 9847079",
                            "companyName": ""
                          }
                        },
                        "meta": {
                        },
                        "links": {
                        }
                      },
                      "offerId": null,
                      "issueDate": "2022-05-11T12:29:36.690Z",
                      "originId": "xxx1",
                      "destinationId": "xxx2",
                      "parentId": null,
                      "companyId": null,
                      "cargoReadyDate": "2022-05-11T13:29:36.645Z",
                      "currency": "EUR"
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                }
              }
            }
          },
          "422": {
            "description": "invalid request (missing items)",
            "content": {
              "application/json": {
                "example": {
                  "items": [
                    "must be present"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "parentId": {
                    "type": "string",
                    "description": "The ID of the original Query that the current Query is based off.",
                    "nullable": true
                  },
                  "originId": {
                    "type": "string",
                    "description": "The Carta ID of the origin point"
                  },
                  "destinationId": {
                    "type": "string",
                    "description": "The Carta ID of the destination point"
                  },
                  "loadType": {
                    "type": "string",
                    "description": "The load type of the query"
                  },
                  "cargoReadyDate": {
                    "type": "string",
                    "description": "The date the cargo is expected to be ready for collection/drop off. This date will be used to find what rates are valid for the journey.",
                    "nullable": true
                  },
                  "items": {
                    "type": "array",
                    "items": {
                      "anyOf": [
                        {
                          "$ref": "#/components/schemas/item_lcl"
                        },
                        {
                          "$ref": "#/components/schemas/item_aggregated_lcl"
                        },
                        {
                          "$ref": "#/components/schemas/item_fcl"
                        }
                      ]
                    }
                  }
                },
                "required": [
                  "originId",
                  "destinationId",
                  "loadType",
                  "items"
                ]
              }
            }
          }
        }
      },
      "get": {
        "summary": "Fetch all queries",
        "tags": [
          "Query"
        ],
        "description": "Fetch all queries",
        "operationId": "getQueries",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "The attribute by which to sort the Queries",
            "enum": [
              "load_type",
              "last_name",
              "origin",
              "destination",
              "selected_date",
              "cargo_ready_date",
              "created_at"
            ],
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "direction",
            "in": "query",
            "description": "The defining whether the sorting is ascending or descending",
            "enum": [
              "asc",
              "desc"
            ],
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchBy",
            "in": "query",
            "description": "The attribute of the Query model to search through",
            "enum": [
              "client_email",
              "client_name",
              "company_name",
              "destination",
              "hs_code",
              "imo_class",
              "load_type",
              "origin",
              "reference"
            ],
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchQuery",
            "in": "query",
            "description": "The value we want to use in our search",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page of result requested",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "perPage",
            "in": "query",
            "description": "The number of results requested per page",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "26d4799b-3b02-41cd-8866-13619e17648e",
                      "type": "query",
                      "attributes": {
                        "id": "26d4799b-3b02-41cd-8866-13619e17648e",
                        "billable": true,
                        "loadType": "cargo_item",
                        "originName": "aaaaa",
                        "destinationName": "aaaaa",
                        "reference": "REFERENCE-94",
                        "modesOfTransport": [
                          "ocean"
                        ],
                        "client": {
                          "data": {
                            "id": "81d34b09-7cc4-48b5-b764-5b74c0464227",
                            "type": "client",
                            "attributes": {
                              "email": "john.doe.300@itsmycargo.test",
                              "organizationId": "ce279c7b-ce0b-45eb-8043-d56e08752489",
                              "firstName": "Guest",
                              "lastName": "User 300",
                              "phone": "081 9847079",
                              "companyName": ""
                            }
                          },
                          "meta": {
                          },
                          "links": {
                          }
                        },
                        "offerId": null,
                        "issueDate": "2022-05-11T10:29:38.964Z",
                        "originId": "itsmycargo:locode:blb5dabfrwa6ozq",
                        "destinationId": "itsmycargo:locode:74lee67oju4vvwy",
                        "parentId": null,
                        "companyId": "075dbcda-e2e0-4f80-8cb7-4921e9aa2810",
                        "cargoReadyDate": "2022-05-14T12:29:38.964Z",
                        "currency": "EUR"
                      }
                    },
                    {
                      "id": "d2a8579b-f7c0-441e-864a-4425262c894b",
                      "type": "query",
                      "attributes": {
                        "id": "d2a8579b-f7c0-441e-864a-4425262c894b",
                        "billable": true,
                        "loadType": "cargo_item",
                        "originName": "bbbbb",
                        "destinationName": "bbbbb",
                        "reference": "REFERENCE-95",
                        "modesOfTransport": [
                          "ocean"
                        ],
                        "client": {
                          "data": {
                            "id": "81d34b09-7cc4-48b5-b764-5b74c0464227",
                            "type": "client",
                            "attributes": {
                              "email": "john.doe.300@itsmycargo.test",
                              "organizationId": "ce279c7b-ce0b-45eb-8043-d56e08752489",
                              "firstName": "Guest",
                              "lastName": "User 300",
                              "phone": "081 9847079",
                              "companyName": ""
                            }
                          },
                          "meta": {
                          },
                          "links": {
                          }
                        },
                        "offerId": null,
                        "issueDate": "2022-05-11T07:29:39.226Z",
                        "originId": "itsmycargo:locode:blb5dabfrwa6ozq",
                        "destinationId": "itsmycargo:locode:74lee67oju4vvwy",
                        "parentId": null,
                        "companyId": "41bbc1ce-ee9a-49de-911c-bea8a8a84582",
                        "cargoReadyDate": "2022-05-13T12:29:39.225Z",
                        "currency": "EUR"
                      }
                    }
                  ],
                  "meta": {
                  },
                  "links": {
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/queries/{id}": {
      "get": {
        "summary": "Fetch Query",
        "tags": [
          "Query"
        ],
        "description": "Fetch Query",
        "operationId": "getQuery",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Query ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "8f34bc7f-66d2-438b-ae38-0492834328ba",
                    "type": "query",
                    "attributes": {
                      "id": "8f34bc7f-66d2-438b-ae38-0492834328ba",
                      "billable": true,
                      "loadType": "cargo_item",
                      "originName": "20457, Hamburg",
                      "destinationName": "Shanghai Airport",
                      "reference": "REFERENCE-98",
                      "modesOfTransport": [
                        "ocean"
                      ],
                      "client": {
                        "data": {
                          "id": "6d3c1c64-0067-4a1d-acfa-d24481c1a553",
                          "type": "client",
                          "attributes": {
                            "email": "john.doe.307@itsmycargo.test",
                            "organizationId": "78a9b77c-48bc-48b9-892c-95416786deca",
                            "firstName": "Guest",
                            "lastName": "User 307",
                            "phone": "081 9847079",
                            "companyName": ""
                          }
                        },
                        "meta": {
                        },
                        "links": {
                        }
                      },
                      "offerId": null,
                      "issueDate": "2022-05-11T12:29:41.000Z",
                      "originId": "itsmycargo:locode:blb5dabfrwa6ozq",
                      "destinationId": "itsmycargo:locode:74lee67oju4vvwy",
                      "parentId": null,
                      "companyId": "c06e9675-a39f-432f-9667-64dc908f889b",
                      "cargoReadyDate": "2022-05-12T00:00:00.000Z",
                      "currency": "EUR"
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update Query",
        "tags": [
          "Query"
        ],
        "description": "Update Query",
        "operationId": "updateQuery",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Query ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "cb3fd639-3a90-4330-9069-b3ed1271af75",
                    "type": "query",
                    "attributes": {
                      "id": "cb3fd639-3a90-4330-9069-b3ed1271af75",
                      "billable": true,
                      "loadType": "cargo_item",
                      "originName": "20457, Hamburg",
                      "destinationName": "Shanghai Airport",
                      "reference": null,
                      "modesOfTransport": [

                      ],
                      "client": {
                        "data": {
                          "id": "10445a3b-e349-425f-a5a3-c0e0b2d626ad",
                          "type": "client",
                          "attributes": {
                            "email": "john.doe.317@itsmycargo.test",
                            "organizationId": "bb641052-b0aa-4577-8368-7377392973be",
                            "firstName": "Guest",
                            "lastName": "User 317",
                            "phone": "081 9847079",
                            "companyName": ""
                          }
                        },
                        "meta": {
                        },
                        "links": {
                        }
                      },
                      "offerId": null,
                      "issueDate": "2022-05-11T12:29:42.000Z",
                      "originId": "itsmycargo:locode:blb5dabfrwa6ozq",
                      "destinationId": "itsmycargo:locode:74lee67oju4vvwy",
                      "parentId": null,
                      "companyId": null,
                      "cargoReadyDate": "2022-05-12T00:00:00.000Z",
                      "currency": "EUR"
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized as Query has a client already"
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/queries/{query_id}/recalculate": {
      "post": {
        "summary": "Recalculate Query",
        "tags": [
          "Query"
        ],
        "description": "Recalculate Query",
        "operationId": "recalculateQuery",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query_id",
            "in": "path",
            "description": "The Query ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "c47fd677-f6d6-4430-b26a-80c4b96b257d",
                    "type": "query",
                    "attributes": {
                      "id": "c47fd677-f6d6-4430-b26a-80c4b96b257d",
                      "billable": true,
                      "loadType": "cargo_item",
                      "originName": "20457, Hamburg",
                      "destinationName": "Shanghai Airport",
                      "reference": null,
                      "modesOfTransport": [

                      ],
                      "client": {
                        "data": {
                          "id": "c7d88109-2e22-4172-83d5-e13f9c76ad2c",
                          "type": "client",
                          "attributes": {
                            "email": "john.doe.333@itsmycargo.test",
                            "organizationId": "f7a963e3-110b-4baf-95c9-6adfa879ebd6",
                            "firstName": "Guest",
                            "lastName": "User 333",
                            "phone": "081 9847079",
                            "companyName": ""
                          }
                        },
                        "meta": {
                        },
                        "links": {
                        }
                      },
                      "offerId": null,
                      "issueDate": "2022-05-11T12:29:45.710Z",
                      "originId": "xxx1",
                      "destinationId": "xxx2",
                      "parentId": "05ad3e7f-4a53-4195-9c10-98745e472853",
                      "companyId": "7822efaf-c433-4783-9dae-6ddf5dc86958",
                      "cargoReadyDate": "2022-05-12T00:00:00.000Z",
                      "currency": "EUR"
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/quotations": {
      "post": {
        "summary": "Create new quotation",
        "tags": [
          "Quote"
        ],
        "description": "Create new quotation",
        "operationId": "createQuotation",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "6b19198c-d99f-4dbc-bdba-a3acb1098738",
                    "type": "query",
                    "attributes": {
                      "completed": true,
                      "loadType": "container",
                      "paymentTerms": null,
                      "companyName": null,
                      "parentId": null,
                      "selectedDate": "2022-05-11T13:29:51.585Z",
                      "user": {
                        "data": {
                          "id": null,
                          "type": "user",
                          "attributes": {
                            "email": "",
                            "organizationId": "2e1d4918-9d8a-4354-aae2-9002da8e4983",
                            "firstName": "",
                            "lastName": "",
                            "phone": null,
                            "companyName": "",
                            "role": null
                          }
                        },
                        "meta": {
                        },
                        "links": {
                        }
                      },
                      "creator": {
                        "data": {
                          "id": "3607e595-3d23-4a48-bc2c-4bad982b47c7",
                          "type": "user",
                          "attributes": {
                            "email": "john.doe.49@itsmycargo.test",
                            "organizationId": null,
                            "firstName": "Guest",
                            "lastName": "User 49",
                            "phone": "081 9847079",
                            "companyName": "Guest Company 49",
                            "role": "user"
                          }
                        },
                        "meta": {
                        },
                        "links": {
                        }
                      },
                      "origin": {
                        "data": {
                          "id": "1400",
                          "type": "nexus",
                          "attributes": {
                            "id": 1400,
                            "name": "Gothenburg",
                            "latitude": 57.694253,
                            "longitude": 11.854048,
                            "modesOfTransport": [
                              "ocean"
                            ],
                            "countryName": "Sweden",
                            "locode": "SEGOT"
                          }
                        },
                        "meta": {
                        },
                        "links": {
                        }
                      },
                      "destination": {
                        "data": {
                          "id": "1399",
                          "type": "nexus",
                          "attributes": {
                            "id": 1399,
                            "name": "Shanghai",
                            "latitude": 31.2231338,
                            "longitude": 120.9162975,
                            "modesOfTransport": [
                              "ocean"
                            ],
                            "countryName": "China",
                            "locode": "CNSHA"
                          }
                        },
                        "meta": {
                        },
                        "links": {
                        }
                      },
                      "containers": {
                        "data": [
                          {
                            "id": "57ab837c-21c4-4a2b-bf0d-214fa6a0019a",
                            "type": "fclCargoUnit",
                            "attributes": {
                              "shipmentId": "6b19198c-d99f-4dbc-bdba-a3acb1098738",
                              "sizeClass": "fcl_20",
                              "weightClass": null,
                              "payloadInKg": 1.0,
                              "tareWeight": null,
                              "grossWeight": null,
                              "dangerousGoods": false,
                              "cargoClass": "fcl_20",
                              "hsCodes": [

                              ],
                              "customsText": "",
                              "quantity": 1,
                              "unitPrice": {
                              },
                              "contents": "",
                              "equipmentType": "fcl_20"
                            }
                          }
                        ],
                        "meta": {
                        },
                        "links": {
                        }
                      },
                      "cargoItems": {
                        "data": [

                        ],
                        "meta": {
                        },
                        "links": {
                        }
                      },
                      "tenders": {
                        "data": [
                          {
                            "id": "57527e96-8c08-4212-b36f-94fd37979891",
                            "type": "result",
                            "attributes": {
                              "remarks": [

                              ],
                              "carrier": "IMC",
                              "modeOfTransport": "ocean",
                              "id": "57527e96-8c08-4212-b36f-94fd37979891",
                              "origin": "Gothenburg",
                              "destination": "Shanghai",
                              "originHub": "Gothenburg Port",
                              "destinationHub": "Shanghai Port",
                              "pickupAddress": null,
                              "deliveryAddress": null,
                              "serviceLevel": "standard",
                              "total": {
                                "currency": "EUR",
                                "amount": "250.0"
                              },
                              "quotationId": "6b19198c-d99f-4dbc-bdba-a3acb1098738",
                              "transshipment": null,
                              "estimated": false,
                              "validUntil": "2022-11-11T23:59:59.999Z",
                              "pickupTruckType": "",
                              "deliveryTruckType": "",
                              "pickupCarrier": null,
                              "deliveryCarrier": null,
                              "pickupService": null,
                              "deliveryService": null,
                              "exchangeRates": {
                              }
                            }
                          }
                        ],
                        "meta": {
                        },
                        "links": {
                        }
                      }
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "quote": {
                    "type": "object",
                    "properties": {
                      "selected_date": {
                        "type": "string"
                      },
                      "user_id": {
                        "type": "string",
                        "nullable": true
                      },
                      "origin": {
                        "type": "object",
                        "oneOf": [
                          {
                            "$ref": "#/components/schemas/locationV1Nexus"
                          },
                          {
                            "$ref": "#/components/schemas/locationV1Trucking"
                          }
                        ]
                      },
                      "destination": {
                        "type": "object",
                        "oneOf": [
                          {
                            "$ref": "#/components/schemas/locationV1Nexus"
                          },
                          {
                            "$ref": "#/components/schemas/locationV1Trucking"
                          }
                        ]
                      }
                    },
                    "required": [
                      "selected_date",
                      "origin",
                      "destination"
                    ]
                  },
                  "shipment_info": {
                    "type": "object",
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/v1ShipmentInfoCargoItems"
                      },
                      {
                        "$ref": "#/components/schemas/v1ShipmentInfoContainers"
                      }
                    ]
                  },
                  "async": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "organization_id",
                  "quote",
                  "shipment_info"
                ]
              }
            }
          }
        }
      },
      "get": {
        "summary": "Fetch quotations",
        "tags": [
          "Quote"
        ],
        "description": "Fetch all Quotations",
        "operationId": "fetchQuotations",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "description": "The beginning of the date range for filtering Queries by their CargoReadyDate",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "description": "The end of the date range for filtering Queries by their CargoReadyDate",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [

                  ],
                  "links": {
                    "first": null,
                    "prev": null,
                    "next": null,
                    "last": null
                  },
                  "meta": {
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/quotations/{id}": {
      "get": {
        "summary": "Fetch existing quotation",
        "tags": [
          "Quote"
        ],
        "description": "Fetch existing quotation",
        "operationId": "getQuotation",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Quotation ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organization_id",
            "in": "query",
            "description": "The current organization ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "8a48b115-1b6c-4b65-9e3d-e3ef9f1e012a",
                    "type": "query",
                    "attributes": {
                      "completed": true,
                      "loadType": "cargo_item",
                      "paymentTerms": "Some quotation payment terms",
                      "companyName": "company147",
                      "parentId": null,
                      "selectedDate": "2022-05-12T00:00:00.000Z",
                      "user": {
                        "data": {
                          "id": "7c0b6137-502b-4134-84b9-d0a95c753b37",
                          "type": "user",
                          "attributes": {
                            "email": "john.doe.401@itsmycargo.test",
                            "organizationId": "bb2e8325-3f62-4426-9020-eabe02c98070",
                            "firstName": "Guest",
                            "lastName": "User 401",
                            "phone": "081 9847079",
                            "companyName": "Guest Company 401",
                            "role": null
                          }
                        },
                        "meta": {
                        },
                        "links": {
                        }
                      },
                      "creator": {
                        "data": {
                          "id": "5019e2b7-d11c-4180-a0e1-2b99a5468161",
                          "type": "user",
                          "attributes": {
                            "email": "john.doe.402@itsmycargo.test",
                            "organizationId": "bb2e8325-3f62-4426-9020-eabe02c98070",
                            "firstName": "Guest",
                            "lastName": "User 402",
                            "phone": "081 9847079",
                            "companyName": "Guest Company 402",
                            "role": null
                          }
                        },
                        "meta": {
                        },
                        "links": {
                        }
                      },
                      "origin": {
                        "data": {
                          "id": "635",
                          "type": "address",
                          "attributes": {
                            "longitude": 11.854048,
                            "latitude": 57.694253,
                            "geocodedAddress": "",
                            "street": null,
                            "city": "Shanghai",
                            "country": "China",
                            "postalCode": "",
                            "name": ""
                          }
                        },
                        "meta": {
                        },
                        "links": {
                        }
                      },
                      "destination": {
                        "data": {
                          "id": "0",
                          "type": "address",
                          "attributes": {
                            "longitude": 121.4867159,
                            "latitude": 31.232014,
                            "geocodedAddress": "88 Henan Middle Road, Shanghai",
                            "street": null,
                            "city": "",
                            "country": "China",
                            "postalCode": "",
                            "name": "88 Henan Middle Road, Shanghai"
                          }
                        },
                        "meta": {
                        },
                        "links": {
                        }
                      },
                      "containers": {
                        "data": [

                        ],
                        "meta": {
                        },
                        "links": {
                        }
                      },
                      "cargoItems": {
                        "data": [
                          {
                            "id": "7363ed6b-f88f-4536-bb2e-4319613980d4",
                            "type": "lclCargoUnit",
                            "attributes": {
                              "payloadInKg": "1000.0",
                              "length": "100.0",
                              "width": "100.0",
                              "height": "100.0",
                              "dangerousGoods": false,
                              "cargoClass": "lcl",
                              "contents": "",
                              "hsCodes": [

                              ],
                              "cargoItemTypeId": null,
                              "customsText": "",
                              "chargeableWeight": "1000.0",
                              "stackable": true,
                              "quantity": 1,
                              "unitPrice": {
                              },
                              "cargoItemType": {
                                "id": null,
                                "description": "Pallet"
                              }
                            }
                          }
                        ],
                        "meta": {
                        },
                        "links": {
                        }
                      },
                      "tenders": {
                        "data": [
                          {
                            "id": "ea40da00-4d98-4cf9-a189-d1cc5cc443ce",
                            "type": "result",
                            "attributes": {
                              "remarks": [

                              ],
                              "carrier": "MSC",
                              "modeOfTransport": "ocean",
                              "id": "ea40da00-4d98-4cf9-a189-d1cc5cc443ce",
                              "origin": "438 80 Landvetter, Sweden",
                              "destination": "88 Henan Middle Road, Shanghai",
                              "originHub": "Hamburg Port",
                              "destinationHub": "Shanghai Port",
                              "pickupAddress": "",
                              "deliveryAddress": "88 Henan Middle Road, Shanghai",
                              "serviceLevel": "standard",
                              "total": {
                                "currency": "EUR",
                                "amount": "180.0"
                              },
                              "quotationId": "8a48b115-1b6c-4b65-9e3d-e3ef9f1e012a",
                              "transshipment": null,
                              "estimated": false,
                              "validUntil": "2022-05-25T12:29:59.006Z",
                              "pickupTruckType": "",
                              "deliveryTruckType": "",
                              "pickupCarrier": "SACO",
                              "deliveryCarrier": "SACO",
                              "pickupService": "standard",
                              "deliveryService": "standard",
                              "exchangeRates": {
                                "usd": "0.833333",
                                "base": "EUR"
                              }
                            }
                          }
                        ],
                        "meta": {
                        },
                        "links": {
                        }
                      }
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/quotations/{id}/download": {
      "post": {
        "summary": "Download quotation as PDF",
        "tags": [
          "Quote"
        ],
        "description": "Download quotation as PDF",
        "operationId": "downloadQuotation",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Quotation ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organization_id",
            "in": "query",
            "description": "The current organization ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "format",
            "in": "query",
            "description": "The desired download format (pdf/xlsx)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "624eacfe-24b2-4529-a475-0e4c3d7dbb94",
                    "type": "file",
                    "attributes": {
                      "url": "http://localhost:3000/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBdXdUIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--57d1a53921c9046f989319094c84993795687ec1/offer_624eacfe-24b2-4529-a475-0e4c3d7dbb94.pdf?disposition=attachment"
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "tenders": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "tenders"
                ]
              }
            }
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/queries/{query_id}/request_for_quotations": {
      "post": {
        "summary": "Create a Request",
        "tags": [
          "Quote"
        ],
        "description": "Creates a Journey::Request with the provided information",
        "operationId": "createRequest",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query_id",
            "in": "path",
            "description": "The current ID of the Journey::Query you wish to make a Request over.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "25c01a1d-066e-49d4-a63c-6f3cae488d4d",
                    "type": "requestForQuotation",
                    "attributes": {
                      "id": "25c01a1d-066e-49d4-a63c-6f3cae488d4d",
                      "fullName": "John Doe",
                      "email": "john.doe@example.com",
                      "phone": "+49-4647484950",
                      "companyName": "company172",
                      "organizationId": "236c0a58-e055-45e2-badc-d394d7aa7695",
                      "queryId": "ff76cd58-dcca-4207-8082-7d53bd666b00"
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "attributes": {
                          "$ref": "#/components/schemas/request_for_quotation"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "message": "param is missing or the value is empty: fullName",
                  "status": "bad_request",
                  "code": 400
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "Email of the client requesting for quotation."
                  },
                  "fullName": {
                    "type": "string",
                    "description": "Name of the client requesting for quotation."
                  },
                  "phone": {
                    "type": "string",
                    "description": "Phone number of the client requesting for quotation."
                  },
                  "note": {
                    "type": "string",
                    "description": "Any additional information regarding the request."
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/queries/{query_id}/results": {
      "get": {
        "summary": "Fetch Results for the query",
        "tags": [
          "Results"
        ],
        "description": "Fetch Results for the query",
        "operationId": "getResults",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query_id",
            "in": "path",
            "description": "Query ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "6bfeb4d8-6b2e-4a37-aee3-28477a1f934b",
                      "type": "restful",
                      "attributes": {
                        "id": "6bfeb4d8-6b2e-4a37-aee3-28477a1f934b"
                      }
                    }
                  ],
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/restfulResponse"
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/results/{id}": {
      "get": {
        "summary": "Fetch Result",
        "tags": [
          "Results"
        ],
        "description": "Fetch Result",
        "operationId": "getResult",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Result ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "f26e32c2-a088-46ca-aff1-d966cd451759",
                    "type": "result",
                    "attributes": {
                      "id": "f26e32c2-a088-46ca-aff1-d966cd451759",
                      "carrier": "MSC",
                      "carrierLogo": "http://localhost:3000/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBdklUIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--9301c9a42b59f99ccb6deeca7f3021da0bfd81d9/test-image.jpg",
                      "modesOfTransport": [
                        "ocean"
                      ],
                      "total": {
                        "value": "36.0",
                        "currency": "EUR"
                      },
                      "serviceLevel": "standard",
                      "validUntil": "2022-06-08T12:30:22.699Z",
                      "transitTime": null,
                      "cargoReadyDate": "2022-05-12T00:00:00.000Z",
                      "cargoDeliveryDate": null,
                      "origin": "Hamburg",
                      "destination": "Hamburg",
                      "transshipment": null,
                      "numberOfStops": 0,
                      "queryId": "959bcef5-4f02-4c5d-b105-a6a4e5b3c924",
                      "originTerminal": null,
                      "destinationTerminal": null,
                      "preCarriage": false,
                      "onCarriage": false
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "$ref": "#/components/schemas/result"
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/results/{result_id}/route_sections": {
      "get": {
        "summary": "Fetch RouteSection for the Result",
        "tags": [
          "Query"
        ],
        "description": "Fetch RouteSection for the Result",
        "operationId": "getRouteSections",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "result_id",
            "in": "path",
            "description": "Result ID of the RouteSections",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "de112b28-fd19-4f2c-816f-6f980ff58880",
                      "type": "routeSection",
                      "attributes": {
                        "id": "de112b28-fd19-4f2c-816f-6f980ff58880",
                        "service": "standard",
                        "carrier": "Carrier - 23",
                        "carrierLogo": "http://localhost:3000/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBdlFUIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--84e887bd29a849c9ecc9509658f1c91c37d9c41a/test-image.jpg",
                        "modeOfTransport": "ocean",
                        "transshipment": null,
                        "transitTime": null,
                        "origin": {
                          "terminal": null,
                          "locode": "DEHAM",
                          "city": "",
                          "coordinates": "POINT (11.854048 57.694253)",
                          "address": "Hamburg"
                        },
                        "destination": {
                          "terminal": null,
                          "locode": "DEHAM",
                          "city": "",
                          "coordinates": "POINT (11.854048 57.694253)",
                          "address": "Hamburg"
                        }
                      }
                    }
                  ],
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "attributes": {
                            "$ref": "#/components/schemas/routeSection"
                          }
                        },
                        "required": [
                          "attributes"
                        ]
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/quotations/{quotation_id}/schedules/{id}": {
      "get": {
        "summary": "Fetch available schedules",
        "tags": [
          "Quote"
        ],
        "description": "Fetch available schedules",
        "operationId": "getSchedule",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quotation_id",
            "in": "path",
            "description": "The quotation ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The quotation ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "520",
                      "type": "trip",
                      "attributes": {
                        "closing": "2022-05-12",
                        "start": "2022-05-16",
                        "end": "2022-06-15",
                        "service": "slowly",
                        "carrier": "Hapag Lloyd",
                        "vessel": null,
                        "voyageCode": null,
                        "tenderId": "fbe16968-d402-4384-8ca3-844190683dd5"
                      }
                    },
                    {
                      "id": "521",
                      "type": "trip",
                      "attributes": {
                        "closing": "2022-05-17",
                        "start": "2022-05-21",
                        "end": "2022-06-20",
                        "service": "slowly",
                        "carrier": "Hapag Lloyd",
                        "vessel": null,
                        "voyageCode": null,
                        "tenderId": "fbe16968-d402-4384-8ca3-844190683dd5"
                      }
                    }
                  ],
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "carrier": {
                                "type": "string"
                              },
                              "closing": {
                                "type": "string"
                              },
                              "end": {
                                "type": "string"
                              },
                              "service": {
                                "type": "string"
                              },
                              "start": {
                                "type": "string"
                              },
                              "tenderId": {
                                "type": "string"
                              },
                              "vessel": {
                                "type": "string",
                                "nullable": true
                              },
                              "voyageCode": {
                                "type": "string",
                                "nullable": true
                              }
                            },
                            "required": [
                              "carrier",
                              "closing",
                              "end",
                              "service",
                              "start",
                              "tenderId",
                              "vessel",
                              "voyageCode"
                            ]
                          }
                        },
                        "required": [
                          "id",
                          "type",
                          "attributes"
                        ]
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/itineraries/{id}/schedules/enabled": {
      "get": {
        "summary": "Fetch status of schedules",
        "tags": [
          "Quote"
        ],
        "description": "Fetch status of schedules",
        "operationId": "getScheduleEnabled",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The itinerary ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "enabled": false
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "enabled": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "enabled"
                      ]
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/results/{result_id}/schedules": {
      "get": {
        "summary": "Fetch schedules for a given result",
        "tags": [
          "Schedule"
        ],
        "description": "Fetch all valid schedules for result",
        "operationId": "getSchedules",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "result_id",
            "in": "path",
            "description": "The result ID for which the schedules are to be fetched",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [

                  ],
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/schedule"
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/results/{result_id}/schedules/{id}": {
      "get": {
        "summary": "Fetch schedule the given schedule id",
        "tags": [
          "Schedule"
        ],
        "description": "Fetch all valid schedules for result",
        "operationId": "getSchedule",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "result_id",
            "in": "path",
            "description": "The result ID for which the schedules are to be fetched",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The existing schedule",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "b8639f7b-d823-4d4e-bdc7-798763f768b3",
                    "type": "schedule",
                    "attributes": {
                      "id": "b8639f7b-d823-4d4e-bdc7-798763f768b3",
                      "vesselName": "saco",
                      "vesselCode": "ab123",
                      "voyageCode": "12345",
                      "origin": "20457, hamburg",
                      "destination": "shanghai airport",
                      "destinationArrival": "2022-06-01T00:00:00.000Z",
                      "originDeparture": "2022-05-12T00:00:00.000Z",
                      "closingDate": "2022-05-12T00:00:00.000Z",
                      "carrier": "msc",
                      "service": "standard",
                      "modeOfTransport": "ocean",
                      "transitTime": 20
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "items": {
                        "$ref": "#/components/schemas/schedule"
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/scope": {
      "get": {
        "summary": "Fetch Scope for the Organization",
        "tags": [
          "Scope"
        ],
        "description": "Fetch Scope for the Organization",
        "operationId": "getScope",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "1c8a21d7-abc9-4fa0-b542-4dd73a25ad10",
                    "type": "scope",
                    "attributes": {
                      "links": {
                        "about": "",
                        "terms": "",
                        "legal": "",
                        "privacy": ""
                      },
                      "id": "f052d257-a6dc-44b0-85d4-753728a39555",
                      "authMethods": [
                        "password"
                      ],
                      "loginSamlText": "",
                      "loginMandatory": false,
                      "registrationProhibited": false
                    }
                  },
                  "links": {
                    "about": "",
                    "terms": "",
                    "legal": "",
                    "privacy": ""
                  },
                  "meta": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/scope"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/me/settings": {
      "get": {
        "summary": "Fetch user settings",
        "tags": [
          "Users"
        ],
        "description": "Fetch current settings for the current user. Settings contains information about user's preferred language and\nlocale.\n",
        "operationId": "getSettings",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "df53dc6b-387d-4224-8645-c15ca0ff368e",
                    "type": "setting",
                    "attributes": {
                      "language": "en-GB",
                      "locale": "en-GB"
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/settings"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Invalid Credentials"
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/shipment_requests": {
      "get": {
        "summary": "Fetch all shipment requests for a client",
        "tags": [
          "ShipmentRequests"
        ],
        "description": "Fetch all shipment requests",
        "operationId": "getShipmentRequests",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "The attribute by which to sort the Shipment Requests",
            "enum": [
              "created_at",
              "origin",
              "destination"
            ],
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "direction",
            "in": "query",
            "description": "The defining whether the sorting is ascending or descending",
            "enum": [
              "asc",
              "desc"
            ],
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page of Shipment Requests requested",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "perPage",
            "in": "query",
            "description": "The number of Shipment Requests requested per page",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchBy",
            "in": "query",
            "description": "The attribute of the shipment requests and its related models to search through",
            "enum": [
              "origin_search",
              "destination_search",
              "status_search",
              "reference_search"
            ],
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchQuery",
            "in": "query",
            "description": "The value we want to use in our search",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [

                  ],
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/shipment_request_index"
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/shipment_requests/{shipment_request_id}": {
      "get": {
        "summary": "Fetch a shipment request",
        "tags": [
          "ShipmentRequests"
        ],
        "description": "Fetch a specific shipment request",
        "operationId": "getShipmentRequesrt",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shipment_request_id",
            "in": "path",
            "description": "The shipment request ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "0289507e-cbb5-432e-854f-c751760b3c58",
                    "type": "shipmentRequest",
                    "attributes": {
                      "resultId": "1ebace7a-de45-4ee2-aaa0-373a26882e6d",
                      "companyId": "1c8f59b5-168b-4f9f-923c-d1251020c45a",
                      "clientId": "ac614d28-e139-494b-84b6-d21b22f03d82",
                      "withInsurance": false,
                      "withCustomsHandling": false,
                      "status": "requested",
                      "preferredVoyage": "1234",
                      "notes": "",
                      "commercialValue": {
                        "value": 10,
                        "currency": "eur"
                      }
                    },
                    "relationships": {
                      "contacts": {
                        "data": [
                          {
                            "id": "2bd23bd6-07cb-4c31-b36e-356846a9474e",
                            "type": "contact"
                          }
                        ]
                      },
                      "documents": {
                        "data": [
                          {
                            "id": "5875c555-3593-4cc8-b206-2fe4c3046a3b",
                            "type": "document"
                          }
                        ]
                      }
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "attributes": {
                          "$ref": "#/components/schemas/shipment_request"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "not found operation",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "message": "Couldn't find Journey::ShipmentRequest with 'id'=non-existent-id",
                  "status": "not_found",
                  "code": 404
                }
              }
            }
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/results/{result_id}/shipment_requests": {
      "post": {
        "summary": "Create a shipment request",
        "tags": [
          "ShipmentRequests"
        ],
        "description": "Create a shipment request",
        "operationId": "createShipmentRequest",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "result_id",
            "in": "path",
            "description": "The ID of the Result you wish to create ShipmentRequest from",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "f2f2ec8c-f1c5-4114-ad9f-db313c4119c0",
                    "type": "shipmentRequest",
                    "attributes": {
                      "resultId": "556f6432-95d1-4df8-af92-bde50724aacc",
                      "companyId": "458a6fbc-c8a4-4342-afa5-8fe5ac209662",
                      "clientId": "b161561a-1e61-4a3a-bf01-631fc259d5dd",
                      "withInsurance": false,
                      "withCustomsHandling": false,
                      "status": "requested",
                      "preferredVoyage": "1234",
                      "notes": "Some notes",
                      "commercialValue": {
                        "value": 10,
                        "currency": "eur"
                      }
                    },
                    "relationships": {
                      "contacts": {
                        "data": [
                          {
                            "id": "fdc8e40f-cb26-4bdc-afb4-d13b0c638428",
                            "type": "contact"
                          }
                        ]
                      },
                      "documents": {
                        "data": [
                          {
                            "id": "202a6ad9-5f63-403a-bfbc-93a6c350ae8d",
                            "type": "document"
                          }
                        ]
                      }
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "attributes": {
                          "$ref": "#/components/schemas/shipment_request"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "422": {
            "description": "invalid file type",
            "content": {
              "application/json": {
                "example": {
                  "errors": {
                    "documents.file": [
                      {
                        "error_code": "INVALID_CONTENT_TYPE",
                        "error_message": "Must be one of the following file types: .xlsx, .doc, .docx, .xls, .pdf, .jpg, .jpeg, .png"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/shipment_request_params"
              }
            }
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/theme": {
      "get": {
        "summary": "Fetch theme information for organization",
        "tags": [
          "Theme"
        ],
        "description": "Fetch theme information for a given organization",
        "operationId": "getTheme",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "481b4626-78d6-4977-b94a-c990eca1ba24",
                    "type": "theme",
                    "attributes": {
                      "id": "481b4626-78d6-4977-b94a-c990eca1ba24",
                      "organizationId": "ca473d93-a5cd-446f-9131-1fb197dd06d8",
                      "emails": {
                        "sales": {
                          "general": "sales.general@demo.com"
                        },
                        "support": {
                          "general": "support@demo.com"
                        }
                      },
                      "websites": {
                      },
                      "addresses": {
                        "main": "Brooktorkai 7, 20457 Hamburg, Germany",
                        "components": [

                        ]
                      },
                      "emailLinks": {
                      },
                      "name": "Freight Spedetion #436",
                      "phones": {
                        "main": "+46 31-85 32 00",
                        "support": "0173042031020"
                      },
                      "background": "",
                      "smallLogo": "",
                      "largeLogo": "",
                      "whiteLogo": "",
                      "wideLogo": "",
                      "landingPageVariant": "default",
                      "landingPageHero": "",
                      "landingPageOne": "",
                      "landingPageTwo": "",
                      "landingPageThree": ""
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "items": {
                        "$ref": "#/components/schemas/theme"
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/trucking_availabilities": {
      "get": {
        "summary": "Fetch Available Truckings",
        "tags": [
          "Quote"
        ],
        "description": "Fetch Available Truckings",
        "operationId": "getTruckingAvailabilities",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lat",
            "in": "query",
            "description": "Latitude",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lng",
            "in": "query",
            "description": "Longitude",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "load_type",
            "in": "query",
            "description": "Load type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organization_id",
            "in": "query",
            "description": "Organiztio nID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "client",
            "in": "query",
            "description": "The client id of the query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "target",
            "in": "query",
            "description": "Target",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "truckTypes": [
                    "default"
                  ],
                  "truckingAvailable": true
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "truckTypes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "truckingAvailable": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "truckTypes",
                    "truckingAvailable"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/trucking_counterparts": {
      "get": {
        "summary": "Fetch counterparts fgor trucking",
        "tags": [
          "Quote"
        ],
        "description": "Fetch counterparts fgor trucking",
        "operationId": "getTruckingCounterparts",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lat",
            "in": "query",
            "description": "Latitude",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lng",
            "in": "query",
            "description": "Longitude",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "load_type",
            "in": "query",
            "description": "Load type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organization_id",
            "in": "query",
            "description": "Organization ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "client",
            "in": "query",
            "description": "The client id of the query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "target",
            "in": "query",
            "description": "Target",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "countryCodes": [

                  ],
                  "truckTypes": [

                  ],
                  "truckingAvailable": false
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "countryCodes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "truckTypes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "truckingAvailable": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "countryCodes",
                    "truckTypes",
                    "truckingAvailable"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/trucking_countries": {
      "get": {
        "summary": "Fetch enabled countries for organization",
        "tags": [
          "Trucking"
        ],
        "description": "Fetch enabled countries for organization",
        "operationId": "getTruckingCountries",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "load_type",
            "in": "query",
            "description": "Load Type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "location_type",
            "in": "query",
            "description": "Location Type",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "757",
                      "type": "country",
                      "attributes": {
                        "name": "Sweden",
                        "code": "SE",
                        "flag": "https://restcountries.eu/data/sek.svg"
                      }
                    }
                  ],
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/country"
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Invalid Credentials"
          }
        }
      }
    },
    "/v1/uploads": {
      "post": {
        "summary": "Create a new upload",
        "tags": [
          "Uploads (V1)"
        ],
        "description": "Create a new upload",
        "operationId": "createUpload",
        "security": [
          {
            "bearerAuth": [

            ]
          }
        ],
        "parameters": [

        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "example": {
                  "message": "File created."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request",
            "content": {
              "application/json": {
                "example": {
                  "message": "Unauthorized Request"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "message": "param is missing or the value is empty: json_data",
                  "status": "bad_request",
                  "code": 400
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "jsonData": {
                    "type": "string",
                    "description": "Provide the data to upload as `application/json`. Serialize the payload as a value for the key `jsonData` (case invariant). Example cURL request:\n```\ncurl --location --request POST 'https://api.itsmycargo.com/v1/uploads' \\\n   --header 'Authorization: Bearer aa0c9a1d-7b50-4c14-ba8e-21a329877ddd' \\\n   --header 'Content-Type: application/json' \\\n   --data-raw '{\n   \"jsonData\": \"{\\\"foo\\\":123}\"\n   }'\n```"
                  }
                }
              }
            }
          },
          "required": true
        }
      }
    },
    "/v2/organizations/{organization_id}/uploads": {
      "post": {
        "summary": "Create a new upload",
        "tags": [
          "Uploads (V2)"
        ],
        "description": "Create a new upload",
        "operationId": "createUpload",
        "security": [
          {
            "bearerAuth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "497b57d6-7a68-4ca1-839f-abb8949561f9",
                    "type": "uploads",
                    "relationships": {
                      "file": {
                        "data": {
                          "id": "ed737087-6a81-4a5f-804d-b0cac12d9114",
                          "type": "file"
                        }
                      }
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "description": "Provide the data as a downloadable url under the `file` parameter."
                  }
                }
              }
            }
          },
          "required": true
        }
      }
    },
    "/v2/organizations/{organization_id}/uploads/{id}": {
      "get": {
        "summary": "Fetch Upload",
        "tags": [
          "Uploads (V2)"
        ],
        "description": "Fetch Upload",
        "operationId": "getQuery",
        "security": [
          {
            "bearerAuth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Upload ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "id": "453e23ca-2247-4b5c-9753-26e58430687b",
                  "organization_id": "04e238f7-c936-4c71-96ac-775406185ef4",
                  "file_id": "4b0f1ef6-d47d-4c9e-ad57-cf46db595c4f",
                  "user_id": "60f0a17f-1452-42f3-a7df-79609c4696b8",
                  "status": "not_started",
                  "last_job_id": "63546232-fc34-438e-afd1-fe5c33896931",
                  "created_at": "2022-05-11T12:30:38.406Z",
                  "updated_at": "2022-05-11T12:30:38.406Z"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          }
        }
      }
    },
    "/v1/me": {
      "get": {
        "summary": "Fetch information of current user",
        "tags": [
          "Users"
        ],
        "description": "Fetch information of current user",
        "operationId": "getCurrentUser",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "b63c6a34-5ce3-4075-973c-8dace47b1224",
                    "type": "user",
                    "attributes": {
                      "email": "john.doe.67@itsmycargo.test",
                      "organizationId": "494ca260-cbda-45ca-b30e-26cdff4239da",
                      "firstName": "Guest",
                      "lastName": "User 67",
                      "phone": "081 9847079",
                      "companyName": "Guest Company 67",
                      "role": null
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "attributes": {
                          "type": "object",
                          "properties": {
                            "email": {
                              "type": "string",
                              "description": "User's primary email address. This is\n                             validated address that can be used for reaching out."
                            },
                            "organizationId": {
                              "description": "If current user is client, this is the\n                             organization user account is linked with.",
                              "type": "string",
                              "nullable": true
                            },
                            "firstName": {
                              "description": "User's first name, usually given name.",
                              "type": "string"
                            },
                            "lastName": {
                              "description": "User's last name, usually family name.",
                              "type": "string"
                            },
                            "phone": {
                              "description": "User's phone number if given. This generic\n                             information that is not validated or structured.",
                              "type": "string",
                              "nullable": true
                            },
                            "companyName": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "email",
                            "organizationId",
                            "firstName",
                            "lastName",
                            "phone",
                            "companyName"
                          ]
                        }
                      },
                      "required": [
                        "id",
                        "type",
                        "attributes"
                      ]
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Invalid Credentials"
          }
        }
      }
    },
    "/v2/users/validate": {
      "get": {
        "summary": "Validate user for the specified email",
        "tags": [
          "Users"
        ],
        "description": "Verify user for the email",
        "operationId": "verify_user",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "description": "email of the users_user",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "a0477654-d818-49d4-9a99-b44b3b4b2a56",
                    "type": "user",
                    "attributes": {
                      "id": "a0477654-d818-49d4-9a99-b44b3b4b2a56",
                      "firstName": "Guest",
                      "authMethods": [
                        "password"
                      ],
                      "samlIntegrations": [

                      ]
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "attributes": {
                          "type": "object",
                          "properties": {
                            "firstName": {
                              "description": "User's first name, usually given name.",
                              "type": "string"
                            },
                            "authMethods": {
                              "description": "auth methods for users",
                              "type": "array"
                            },
                            "samlIntegrations": {
                              "description": "information required to support SAML workflow from frontend such button and redirection url",
                              "type": "array"
                            }
                          },
                          "required": [
                            "firstName",
                            "authMethods",
                            "samlIntegrations"
                          ]
                        }
                      },
                      "required": [
                        "id",
                        "type",
                        "attributes"
                      ]
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/validation": {
      "post": {
        "summary": "Create new Validation",
        "tags": [
          "Validations"
        ],
        "description": "Validate Query inputs and receive error and warnings if items exceed preset limits",
        "operationId": "createValidations",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation (Cargo Item)",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "6d385da4-1299-4c76-9ada-d579fd3cda7f",
                      "type": "validationError",
                      "attributes": {
                        "id": "6d385da4-1299-4c76-9ada-d579fd3cda7f",
                        "limit": "0.1 m",
                        "attribute": "width",
                        "message": "Width exceeds the limit of 0.1 m",
                        "code": 4003
                      }
                    },
                    {
                      "id": "6d385da4-1299-4c76-9ada-d579fd3cda7f",
                      "type": "validationError",
                      "attributes": {
                        "id": "6d385da4-1299-4c76-9ada-d579fd3cda7f",
                        "limit": "0.1 m",
                        "attribute": "height",
                        "message": "Height exceeds the limit of 0.1 m",
                        "code": 4002
                      }
                    },
                    {
                      "id": "6d385da4-1299-4c76-9ada-d579fd3cda7f",
                      "type": "validationError",
                      "attributes": {
                        "id": "6d385da4-1299-4c76-9ada-d579fd3cda7f",
                        "limit": "10 kg",
                        "attribute": "weight",
                        "message": "Weight exceeds the limit of 10 kg",
                        "code": 4001
                      }
                    }
                  ],
                  "meta": {
                  },
                  "links": {
                  }
                }
              }
            }
          },
          "422": {
            "description": "invalid request (missing items)",
            "content": {
              "application/json": {
                "example": {
                  "types": [
                    "is missing"
                  ],
                  "items": [
                    "must be present"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "originId": {
                    "type": "string",
                    "description": "The Carta ID of the origin point"
                  },
                  "destinationId": {
                    "type": "string",
                    "description": "The Carta ID of the destination point"
                  },
                  "loadType": {
                    "type": "string",
                    "description": "The load type of the query"
                  },
                  "types": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "The type of the query",
                      "enum": [
                        "cargo_item",
                        "routing"
                      ]
                    }
                  },
                  "items": {
                    "type": "array",
                    "items": {
                      "anyOf": [
                        {
                          "$ref": "#/components/schemas/validation_item_lcl"
                        },
                        {
                          "$ref": "#/components/schemas/validation_item_aggregated_lcl"
                        },
                        {
                          "$ref": "#/components/schemas/validation_item_fcl"
                        }
                      ]
                    }
                  }
                },
                "required": [
                  "originId",
                  "destinationId",
                  "loadType",
                  "items"
                ]
              }
            }
          }
        }
      }
    }
  }
}