{
  "openapi": "3.0.1",
  "info": {
    "title": "Polaris API",
    "description": "ItsMyCargo Backend API",
    "termsOfService": "https://www.itsmycargo.com/terms",
    "contact": {
      "name": "API Support",
      "url": "https://support.itsmycargo.com",
      "email": "support@itsmycargo.com"
    },
    "version": "2021-12-15"
  },
  "tags": [
    {
      "name": "Ahoy",
      "description": "Ahoy"
    },
    {
      "name": "Authentication",
      "description": "Endpoints related to the current user and authentication."
    },
    {
      "name": "CargoUnits",
      "description": "CargoUnits"
    },
    {
      "name": "Clients",
      "description": "Clients"
    },
    {
      "name": "Dashboard",
      "description": "Dashboard"
    },
    {
      "name": "Groups",
      "description": "Groups"
    },
    {
      "name": "Query",
      "description": "Query"
    },
    {
      "name": "Quote",
      "description": "Quote"
    },
    {
      "name": "Results",
      "description": "Results"
    },
    {
      "name": "Trucking",
      "description": "Trucking"
    },
    {
      "name": "Users",
      "description": "Users"
    }
  ],
  "components": {
    "schemas": {
      "errors": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "object",
            "properties": {
              "message": {
                "description": "error message",
                "type": "string"
              }
            },
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      "company": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the company",
            "type": "string"
          },
          "type": {
            "description": "Generic type of the company",
            "type": "string"
          },
          "attributes": {
            "id": {
              "description": "Unique identifier of the company",
              "type": "string"
            },
            "email": {
              "description": "email of the company",
              "type": "string"
            },
            "name": {
              "description": "name of the company",
              "type": "string"
            },
            "paymentTerms": {
              "description": "payment terms set out by the company",
              "type": "string"
            },
            "phone": {
              "description": "phone number of the company",
              "type": "string"
            },
            "vatNumber": {
              "description": "VAT number of the company",
              "type": "string"
            },
            "contactPersonName": {
              "description": "The name of the contact person/employee from the company",
              "type": "string"
            },
            "contactPhone": {
              "description": "The phone number of the contact person from the company",
              "type": "string"
            },
            "contactEmail": {
              "description": "The email of the contact person from the company",
              "type": "string"
            },
            "registrationNumber": {
              "description": "he registration number set by company",
              "type": "string"
            }
          }
        }
      },
      "contact": {
        "type": "object",
        "properties": {
          "address_line_1": {
            "description": "Address line 1",
            "nullable": true,
            "type": "string"
          },
          "address_line_2": {
            "description": "address line 2",
            "nullable": true,
            "type": "string"
          },
          "address_line_3": {
            "description": "address line 3",
            "nullable": true,
            "type": "string"
          },
          "city": {
            "description": "City",
            "nullable": true,
            "type": "string"
          },
          "company_name": {
            "description": "Company name",
            "nullable": true,
            "type": "string"
          },
          "country_code": {
            "description": "Country code",
            "nullable": true,
            "type": "string"
          },
          "email": {
            "description": "Email address",
            "type": "string"
          },
          "function": {
            "description": "Function",
            "nullable": true,
            "type": "string"
          },
          "geocoded_address": {
            "description": "Geocoded address",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "Name",
            "nullable": true,
            "type": "string"
          },
          "phone": {
            "description": "Phone",
            "nullable": true,
            "type": "string"
          },
          "point": {
            "description": "Point",
            "nullable": true,
            "type": "string"
          },
          "postal_code": {
            "description": "Postal code",
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "email"
        ]
      },
      "shipment_request_index": {
        "type": "object",
        "properties": {
          "result_id": {
            "description": "Result ID",
            "type": "string"
          },
          "company_id": {
            "description": "Company ID",
            "type": "string"
          },
          "client_id": {
            "description": "Client ID",
            "type": "string"
          },
          "with_insurance": {
            "description": "Any insurance on the cargo",
            "type": "boolean",
            "nullable": true
          },
          "with_customs_handling": {
            "description": "Any customs handling service needed",
            "type": "boolean",
            "nullable": true
          },
          "status": {
            "description": "Status of the shipment request",
            "type": "string",
            "nullable": true
          },
          "preferred_voyage": {
            "description": "Preferred voyage",
            "type": "string",
            "nullable": true
          },
          "notes": {
            "description": "Notes about the shipment request",
            "type": "string",
            "nullable": true
          },
          "originHub": {
            "description": "Name of the Hub the shipment departs from",
            "type": "string"
          },
          "destinationHub": {
            "description": "Name of the Hub the shipment arrives at.",
            "type": "string"
          },
          "originPickup": {
            "description": "Address where the cargo will be collected if Pre-Carriage is requested",
            "type": "string",
            "nullable": true
          },
          "destinationDropoff": {
            "description": "Address where the cargo will be dropped off if On-Carriage is requested",
            "type": "string",
            "nullable": true
          },
          "requestedAt": {
            "description": "Date the ShipmentRequest was made",
            "type": "string"
          },
          "reference": {
            "description": "The internal reference number from the LineItemSet used to generate the ShipmentRequest",
            "type": "string"
          }
        }
      },
      "shipment_request": {
        "type": "object",
        "properties": {
          "result_id": {
            "description": "Result ID",
            "type": "string"
          },
          "company_id": {
            "description": "Company ID",
            "type": "string"
          },
          "client_id": {
            "description": "Client ID",
            "type": "string"
          },
          "with_insurance": {
            "description": "Any insurance on the cargo",
            "type": "boolean",
            "nullable": true
          },
          "with_customs_handling": {
            "description": "Any customs handling service needed",
            "type": "boolean",
            "nullable": true
          },
          "status": {
            "description": "Status of the shipment request",
            "type": "string",
            "nullable": true
          },
          "preferred_voyage": {
            "description": "Preferred voyage",
            "type": "string",
            "nullable": true
          },
          "notes": {
            "description": "Notes about the shipment request",
            "type": "string",
            "nullable": true
          },
          "commercial_value": {
            "description": "Commercial value with integer and currency",
            "type": "object",
            "nullable": true
          },
          "contacts_attributes": {
            "description": "Array of contact attributes as objects",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/contact"
            }
          }
        }
      },
      "shipment_request_params": {
        "type": "object",
        "properties": {
          "withInsurance": {
            "type": "boolean",
            "nullable": true,
            "description": "Any insurance on the cargo"
          },
          "withCustomsHandling": {
            "type": "boolean",
            "nullable": true,
            "description": "Any customs handling service needed"
          },
          "preferredVoyage": {
            "type": "string",
            "nullable": true,
            "description": "Preferred voyage"
          },
          "notes": {
            "type": "string",
            "nullable": true,
            "description": "notes about the shipment request"
          },
          "commercialValueCents": {
            "nullable": true,
            "type": "integer",
            "description": "Commercial value as an integer expressed as cent or other equivalent base unit"
          },
          "commercialValueCurrency": {
            "nullable": true,
            "type": "string",
            "description": "Commercial value's currency in three letter ISO format"
          },
          "contactsAttributes": {
            "type": "array",
            "description": "Contact info for client",
            "items": {
              "$ref": "#/components/schemas/contact"
            }
          }
        },
        "required": [
          "withInsurance",
          "withCustomsHandling",
          "preferredVoyage",
          "notes",
          "commercialValueCents",
          "commercialValueCurrency",
          "contactsAttributes"
        ]
      },
      "cargo_item_type": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the given cargo item type",
            "type": "string"
          },
          "type": {
            "description": "Generic type of the cargo item",
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "width": {
                "description": "Width of the given cargo item type",
                "type": "string",
                "nullable": true,
                "deprecated": true
              },
              "length": {
                "description": "Length of the given cargo item type",
                "type": "string",
                "nullable": true,
                "deprecated": true
              },
              "description": {
                "description": "Descriptive information of the cargo item type",
                "type": "string"
              }
            },
            "required": [
              "width",
              "length"
            ]
          }
        },
        "required": [
          "id",
          "type",
          "attributes"
        ]
      },
      "carrier": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the given Carrier",
            "type": "string"
          },
          "type": {
            "description": "Generic type of the Carrier",
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "id": {
                "description": "The ID of the Carrier record",
                "type": "string"
              },
              "name": {
                "description": "The Carrier's name",
                "type": "string"
              },
              "code": {
                "description": "The Carrier's code. Preferably SCAC or IATA but customs code are allowed.",
                "type": "string"
              },
              "logo": {
                "description": "URL for accesing the logo of the Carrier",
                "type": "string",
                "nullable": true
              }
            },
            "required": [
              "id",
              "name",
              "code",
              "logo"
            ]
          }
        },
        "required": [
          "id",
          "type",
          "attributes"
        ]
      },
      "client": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "company_name": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "house_number": {
            "type": "string"
          },
          "street": {
            "type": "string"
          },
          "postal_code": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "group_id": {
            "type": "string"
          }
        },
        "required": [
          "email",
          "first_name",
          "last_name",
          "company_name",
          "phone",
          "house_number",
          "street",
          "postal_code",
          "country",
          "group_id"
        ]
      },
      "charge": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Charge ID",
            "type": "string"
          },
          "lineItemId": {
            "description": "Line Item",
            "type": "string"
          },
          "tenderId": {
            "description": "Tender",
            "type": "string"
          },
          "chargeCategoryId": {
            "description": "Category of the charge",
            "type": "integer"
          },
          "description": {
            "description": "Description",
            "type": "string"
          },
          "value": {
            "$ref": "#/components/schemas/money"
          },
          "originalValue": {
            "$ref": "#/components/schemas/money"
          },
          "order": {
            "description": "Order of the charges",
            "type": "integer"
          },
          "section": {
            "description": "Section of charge",
            "type": "string"
          },
          "level": {
            "description": "Nesting level",
            "type": "integer"
          },
          "rate": {
            "description": "The rate at which the LineItem was charged",
            "type": "string"
          },
          "rateFactor": {
            "description": "The value (with unit) that was applied to the Rate to achieve the final price of the LineItem",
            "type": "string"
          }
        },
        "required": [
          "id",
          "lineItemId",
          "tenderId",
          "chargeCategoryId",
          "description",
          "value",
          "originalValue",
          "order",
          "section",
          "level"
        ]
      },
      "commodityInfo": {
        "type": "object",
        "properties": {
          "imoClass": {
            "type": "string",
            "enum": [
              "0",
              "1",
              "1.1",
              "1.2",
              "1.3",
              "1.4",
              "1.5",
              "1.6",
              "2",
              "2.1",
              "2.2",
              "2.3",
              "3",
              "4",
              "4.1",
              "4.2",
              "4.3",
              "5",
              "5.1",
              "5.2",
              "6",
              "6.1",
              "6.2",
              "7",
              "7.1",
              "7.2",
              "7.3",
              "7.4",
              "8",
              "9"
            ],
            "nullable": true,
            "description": "Defines the standard IMO class for the dangerous goods that this cargo item might contain. IMO Class is defined as Class and possible sub-class, where class defines top-level category of type of dangerous goods, and sub-class defines more detailed separation of different dangerous goods.\n\nTo see list of possible classes and sub-classes, please see for example https://www.searates.com/reference/imo/\n\nIf the cargo item is known to contain dangerous goods, but the specific class is unknown, please use `0` as IMO class, which is used internally for unknown dangerous goods class.\nIf the cargo item is known to contain no dangerous goods, set this field as `null`.\n"
          },
          "description": {
            "type": "string",
            "description": "The description of the IMO Class/ HSCode chosen"
          },
          "hsCode": {
            "type": "string",
            "nullable": true,
            "description": "The Harmonized Commodity Description and Coding System, also known as the Harmonized System of tariff nomenclature is an internationally standardized system of names and numbers to classify traded products.\nThis code is is used to identify the type of cargo being shipped as it can affect the pricing and routes available\n"
          }
        },
        "required": [
          "description",
          "hsCode",
          "imoClass"
        ]
      },
      "country": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Country ID",
            "type": "string"
          },
          "type": {
            "description": "Country Type",
            "type": "string"
          },
          "attributes": {
            "description": "Country Attributes",
            "type": "object",
            "properties": {
              "name": {
                "description": "Name of the country",
                "type": "string"
              },
              "code": {
                "description": "Country code",
                "type": "string"
              },
              "flag": {
                "description": "Flag of the country",
                "type": "string"
              }
            },
            "required": [
              "name",
              "code",
              "flag"
            ]
          }
        },
        "required": [
          "id",
          "type",
          "attributes"
        ]
      },
      "group": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Group ID",
            "type": "string"
          },
          "type": {
            "description": "Type of group",
            "type": "string"
          },
          "attributes": {
            "description": "Attributes of group",
            "type": "object",
            "properties": {
              "id": {
                "description": "ID of attributes",
                "type": "string"
              },
              "name": {
                "description": "Name of the group",
                "type": "string"
              }
            },
            "required": [
              "id",
              "name"
            ]
          }
        },
        "required": [
          "id",
          "type",
          "attributes"
        ]
      },
      "item": {
        "type": "object",
        "properties": {
          "cargoClass": {
            "description": "Cargo classification code",
            "type": "string",
            "enum": [
              "lcl",
              "aggregated_lcl",
              "fcl_10",
              "fcl_20",
              "fcl_20_ot",
              "fcl_20_rf",
              "fcl_20_frs",
              "fcl_20_frw",
              "fcl_40",
              "fcl_40_hq",
              "fcl_40_ot",
              "fcl_40_rf",
              "fcl_40_hq_rf",
              "fcl_40_frs",
              "fcl_40_frw",
              "fcl_45",
              "fcl_45_hq",
              "fcl_45_rf"
            ]
          },
          "stackable": {
            "description": "If cargo item is stackable or not",
            "type": "boolean"
          },
          "quantity": {
            "description": "Quantity",
            "type": "integer"
          },
          "length": {
            "description": "Length of the item expressed as a decimal on the centimeter (cm) scale",
            "type": "number"
          },
          "width": {
            "description": "Width of the item expressed as a decimal on the centimeter (cm) scale",
            "type": "number"
          },
          "height": {
            "description": "Height of the item expressed as a decimal on the centimeter (cm) scale",
            "type": "number"
          },
          "weight": {
            "description": "Weight of the item expressed as a decimal on the kilogram (kg) scale",
            "type": "number"
          },
          "volume": {
            "description": "Volume of the item expressed as a decimal on the cubic meter (m3) scale",
            "type": "number"
          },
          "commodities": {
            "description": "Commodity codes of the contents",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commodityInfo"
            }
          }
        },
        "required": [
          "stackable",
          "colliType",
          "quantity",
          "length",
          "width",
          "height",
          "weight",
          "commodities"
        ]
      },
      "item_lcl": {
        "type": "object",
        "properties": {
          "cargoClass": {
            "description": "Cargo classification code",
            "type": "string",
            "enum": [
              "lcl"
            ]
          },
          "stackable": {
            "description": "If cargo item is stackable or not",
            "type": "boolean"
          },
          "colliType": {
            "description": "Colli Type: The type of container the items are packed in. One of a preset list",
            "type": "string",
            "enum": [
              "container",
              "barrel",
              "bottle",
              "carton",
              "case",
              "crate",
              "drum",
              "package",
              "pallet",
              "roll",
              "skid",
              "stack",
              "room_temp_reefer",
              "low_temp_reefer"
            ]
          },
          "quantity": {
            "description": "Quantity",
            "type": "integer"
          },
          "length": {
            "description": "Length of the item expressed as a decimal on the centimeter (cm) scale",
            "type": "number"
          },
          "width": {
            "description": "Width of the item expressed as a decimal on the centimeter (cm) scale",
            "type": "number"
          },
          "height": {
            "description": "Height of the item expressed as a decimal on the centimeter (cm) scale",
            "type": "number"
          },
          "weight": {
            "description": "Weight of the item expressed as a decimal on the kilogram (kg) scale",
            "type": "number"
          },
          "commodities": {
            "description": "Commodity codes of the contents",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commodityInfo"
            }
          }
        },
        "required": [
          "stackable",
          "colliType",
          "quantity",
          "length",
          "width",
          "height",
          "weight",
          "commodities",
          "cargoClass"
        ]
      },
      "item_aggregated_lcl": {
        "type": "object",
        "properties": {
          "cargoClass": {
            "description": "Cargo classification code",
            "type": "string",
            "enum": [
              "aggregated_lcl"
            ]
          },
          "stackable": {
            "description": "Aggregated Cargo Item's are always stackable so this property is not required",
            "type": "boolean",
            "nullable": true
          },
          "quantity": {
            "description": "Aggregated Cargo Item's have no defined quantity so this property is null",
            "type": "integer",
            "nullable": true
          },
          "length": {
            "description": "Aggregated Cargo Item's have no defined length so this property is null",
            "type": "number",
            "nullable": true
          },
          "width": {
            "description": "Aggregated Cargo Item's have no defined width so this property is null",
            "type": "number",
            "nullable": true
          },
          "height": {
            "description": "Aggregated Cargo Item's have no defined height so this property is null",
            "type": "number",
            "nullable": true
          },
          "weight": {
            "description": "Weight of the item expressed as a decimal on the kilogram (kg) scale",
            "type": "number"
          },
          "volume": {
            "description": "Volume of the item expressed as a decimal on the cubic meter (m3) scale",
            "type": "number"
          },
          "commodities": {
            "description": "Commodity codes of the contents",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commodityInfo"
            }
          }
        },
        "required": [
          "volume",
          "weight",
          "commodities",
          "cargoClass"
        ]
      },
      "item_fcl": {
        "type": "object",
        "properties": {
          "cargoClass": {
            "description": "Container classification code",
            "type": "string",
            "enum": [
              "fcl_10",
              "fcl_20",
              "fcl_20_ot",
              "fcl_20_rf",
              "fcl_20_frs",
              "fcl_20_frw",
              "fcl_40",
              "fcl_40_hq",
              "fcl_40_ot",
              "fcl_40_rf",
              "fcl_40_hq_rf",
              "fcl_40_frs",
              "fcl_40_frw",
              "fcl_45",
              "fcl_45_hq",
              "fcl_45_rf"
            ]
          },
          "stackable": {
            "description": "If cargo item is stackable or not: N/A for FCL",
            "type": "boolean"
          },
          "quantity": {
            "description": "Quantity",
            "type": "integer"
          },
          "length": {
            "description": "Containers have no defined length so this property is null",
            "type": "integer",
            "nullable": true
          },
          "width": {
            "description": "Containers have no defined width so this property is null",
            "type": "integer",
            "nullable": true
          },
          "height": {
            "description": "Containers have no defined height so this property is null",
            "type": "integer",
            "nullable": true
          },
          "weight": {
            "description": "Weight of the item expressed as a decimal on the kilogram (kg) scale",
            "type": "integer"
          },
          "volume": {
            "description": "Containers have no defined dimensions so this property is null",
            "type": "integer"
          },
          "commodities": {
            "description": "Commodity codes of the contents",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commodityInfo"
            }
          }
        },
        "required": [
          "stackable",
          "colliType",
          "quantity",
          "weight",
          "commodities",
          "cargoClass"
        ]
      },
      "item_response": {
        "type": "object",
        "properties": {
          "attributes": {
            "type": "object",
            "properties": {
              "cargoClass": {
                "description": "Cargo classification code",
                "type": "string",
                "enum": [
                  "lcl",
                  "aggregated_lcl",
                  "fcl_10",
                  "fcl_20",
                  "fcl_20_ot",
                  "fcl_20_rf",
                  "fcl_20_frs",
                  "fcl_20_frw",
                  "fcl_40",
                  "fcl_40_hq",
                  "fcl_40_ot",
                  "fcl_40_rf",
                  "fcl_40_hq_rf",
                  "fcl_40_frs",
                  "fcl_40_frw",
                  "fcl_45",
                  "fcl_45_hq",
                  "fcl_45_rf"
                ]
              },
              "stackable": {
                "description": "If cargo item is stackable or not",
                "type": "boolean"
              },
              "quantity": {
                "description": "Quantity",
                "type": "integer"
              },
              "length": {
                "description": "Length of the item expressed as a decimal on the centimeter (cm) scale",
                "type": "number"
              },
              "width": {
                "description": "Width of the item expressed as a decimal on the centimeter (cm) scale",
                "type": "number"
              },
              "height": {
                "description": "Height of the item expressed as a decimal on the centimeter (cm) scale",
                "type": "number"
              },
              "weight": {
                "description": "Weight of the item expressed as a decimal on the kilogram (kg) scale",
                "type": "number"
              },
              "volume": {
                "description": "Volume of the item expressed as a decimal on the cubic meter (m3) scale",
                "type": "number"
              },
              "commodities": {
                "description": "Commodity codes of the contents",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/commodityInfo"
                }
              }
            },
            "required": [
              "stackable",
              "colliType",
              "quantity",
              "length",
              "width",
              "height",
              "weight",
              "commodities"
            ]
          }
        },
        "required": [
          "attributes"
        ]
      },
      "v1CargoItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID of the Cargo Item"
          },
          "cargo_class": {
            "type": "string",
            "description": "Cargo Class of the Cargo Item. Must be `lcl`"
          },
          "cargo_item_type_id": {
            "type": "string",
            "description": "ID of the CargoItemType - repesenting the Colli Type"
          },
          "contents": {
            "type": "string",
            "description": "String desccribin the Items contents",
            "nullable": true
          },
          "dangerous_goods": {
            "type": "boolean",
            "description": "Whether or not the Cargoitem contains dangerous goods"
          },
          "width": {
            "type": "number",
            "description": "The width of the item in cm"
          },
          "length": {
            "type": "number",
            "description": "The length of the item in cm"
          },
          "height": {
            "type": "number",
            "description": "The height of the item in cm"
          },
          "payload_in_kg": {
            "type": "number",
            "description": "The individual weight of each item in kg"
          },
          "quantity": {
            "type": "number",
            "description": "The number of identical items in the group"
          },
          "stackable": {
            "type": "boolean",
            "description": "Whether these items can be stacked"
          },
          "total_volume": {
            "type": "number",
            "description": "The total volume of all items in the group in cubic meters"
          },
          "total_weight": {
            "type": "number",
            "description": "The total weight of the group in kg."
          }
        }
      },
      "v1Container": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the Container"
          },
          "cargo_class": {
            "type": "string",
            "description": "The Cargo Class of the Container",
            "enum": [
              "fcl_10",
              "fcl_20",
              "fcl_20_ot",
              "fcl_20_rf",
              "fcl_20_frs",
              "fcl_20_frw",
              "fcl_40",
              "fcl_40_hq",
              "fcl_40_ot",
              "fcl_40_rf",
              "fcl_40_hq_rf",
              "fcl_40_frs",
              "fcl_40_frw",
              "fcl_45",
              "fcl_45_hq",
              "fcl_45_rf"
            ]
          },
          "contents": {
            "type": "string",
            "description": "A string describing the contents of the Container",
            "nullable": true
          },
          "dangerous_goods": {
            "type": "boolean",
            "description": "Whether or not the Container holds any dangerous goods"
          },
          "payload_in_kg": {
            "type": "number",
            "description": "The weight of the payload per container in kg"
          },
          "quantity": {
            "type": "number",
            "description": "The number of containers in the group"
          },
          "size_class": {
            "type": "string",
            "description": "Duplicate of Cargo Class: Deprecated",
            "deprecated": true
          }
        }
      },
      "v1ShipmentInfoContainers": {
        "type": "object",
        "properties": {
          "containers_attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1Container"
            }
          },
          "trucking_info": {
            "type": "object",
            "properties": {
              "pre_carriage": {
                "$ref": "#/components/schemas/v1TruckingInfo"
              },
              "on_carriage": {
                "$ref": "#/components/schemas/v1TruckingInfo"
              }
            }
          }
        },
        "required": [
          "containers_attributes",
          "trucking_info"
        ]
      },
      "v1ShipmentInfoCargoItems": {
        "type": "object",
        "properties": {
          "cargo_items_attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1CargoItem"
            }
          },
          "trucking_info": {
            "type": "object",
            "properties": {
              "pre_carriage": {
                "$ref": "#/components/schemas/v1TruckingInfo"
              },
              "on_carriage": {
                "$ref": "#/components/schemas/v1TruckingInfo"
              }
            }
          }
        },
        "required": [
          "cargo_items_attributes",
          "trucking_info"
        ]
      },
      "v1TruckingInfo": {
        "type": "object",
        "properties": {
          "truck_type": {
            "type": "string",
            "description": "Truck type desired for pre/on carriage"
          }
        },
        "nullable": true
      },
      "journeyError": {
        "type": "object",
        "properties": {
          "id": {
            "description": "ID",
            "type": "string"
          },
          "code": {
            "description": "Code",
            "type": "string"
          },
          "service": {
            "description": "Service",
            "type": "string"
          },
          "carrier": {
            "description": "Carrier",
            "type": "string"
          },
          "mode_of_transport": {
            "description": "MOT",
            "type": "string"
          },
          "property": {
            "description": "Property",
            "type": "string"
          },
          "value": {
            "description": "Value",
            "type": "string"
          },
          "limit": {
            "description": "Limit",
            "type": "string"
          }
        },
        "required": [
          "id"
        ]
      },
      "locationV1Nexus": {
        "type": "object",
        "properties": {
          "nexus_id": {
            "type": "integer",
            "description": "The unique identifier of the Location Nexus"
          }
        },
        "required": [
          "nexus_id"
        ]
      },
      "locationV1Trucking": {
        "type": "object",
        "properties": {
          "latitude": {
            "type": "string",
            "description": "The latitude of the Location"
          },
          "longitude": {
            "type": "string",
            "description": "The longitude of the Location"
          }
        },
        "required": [
          "latitude",
          "longitude"
        ]
      },
      "money": {
        "type": "object",
        "properties": {
          "amount": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ],
            "description": "Monetary amount in given currency"
          },
          "currency": {
            "type": "string",
            "description": "ISO 4217 code for currency"
          }
        },
        "required": [
          "amount",
          "currency"
        ]
      },
      "nexus": {
        "type": "object",
        "properties": {
          "id": {
            "description": "ID",
            "type": "string"
          },
          "type": {
            "description": "Type",
            "type": "string"
          },
          "attributes": {
            "description": "Attributes",
            "type": "object",
            "properties": {
              "id": {
                "description": "ID",
                "type": "number"
              },
              "name": {
                "description": "Name",
                "type": "string"
              },
              "locode": {
                "description": "UN/LOCODE",
                "type": "string"
              },
              "latitude": {
                "description": "Latitude",
                "type": "number"
              },
              "longitude": {
                "description": "Longitude",
                "type": "number"
              },
              "modesOfTransport": {
                "description": "MOTs",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "countryName": {
                "description": "Country Name",
                "type": "string"
              }
            },
            "required": [
              "id",
              "name",
              "latitude",
              "longitude",
              "locode",
              "modesOfTransport",
              "countryName"
            ]
          }
        },
        "required": [
          "id",
          "type",
          "attributes"
        ]
      },
      "organization": {
        "type": "object",
        "properties": {
          "id": {
            "description": "ID",
            "type": "string"
          },
          "type": {
            "description": "Type",
            "type": "string"
          },
          "attributes": {
            "description": "Attributes of the organisation.",
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the organisation. Usually their legal business name."
              },
              "slug": {
                "type": "string",
                "description": "Short slug of the organisation that is unique for a single\norganisation. This is usually used as poart of the URL and must\nalways match generic domain requirements.\n"
              }
            },
            "required": [
              "name",
              "slug"
            ]
          }
        },
        "required": [
          "id",
          "type",
          "attributes"
        ]
      },
      "pagination": {
        "type": "object",
        "properties": {
          "page": {
            "description": "Current page",
            "type": "number"
          },
          "perPage": {
            "description": "Items per page",
            "type": "number"
          },
          "totalPages": {
            "description": "Total number of pages",
            "type": "number"
          }
        },
        "required": [
          "page",
          "perPage",
          "totalPages"
        ]
      },
      "paginationLinks": {
        "type": "object",
        "properties": {
          "first": {
            "description": "First page",
            "type": "string",
            "nullable": true
          },
          "prev": {
            "description": "Previous page",
            "type": "string",
            "nullable": true
          },
          "next": {
            "description": "Next page",
            "type": "string",
            "nullable": true
          },
          "last": {
            "description": "Last page",
            "type": "string",
            "nullable": true
          }
        }
      },
      "quotationTender": {
        "type": "object",
        "properties": {
          "data": {
            "description": "Data",
            "type": "object",
            "properties": {
              "id": {
                "description": "ID",
                "type": "string"
              },
              "type": {
                "description": "Type",
                "type": "string"
              },
              "attributes": {
                "description": "Attributes",
                "type": "object",
                "properties": {
                  "charges": {
                    "description": "Charges",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/charge"
                    }
                  },
                  "route": {
                    "description": "Route",
                    "type": "string"
                  },
                  "vessel": {
                    "description": "Vessel",
                    "type": "string"
                  },
                  "id": {
                    "description": "ID",
                    "type": "string"
                  },
                  "pickupTruckType": {
                    "description": "Truck type",
                    "type": "string"
                  },
                  "deliveryTruckType": {
                    "description": "Truck type",
                    "type": "string"
                  },
                  "pickupCarrier": {
                    "description": "Carrier",
                    "type": "string"
                  },
                  "deliveryCarrier": {
                    "description": "Carrier",
                    "type": "string"
                  },
                  "pickupService": {
                    "description": "Service",
                    "type": "string"
                  },
                  "deliveryService": {
                    "description": "Service",
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "route"
                ]
              }
            },
            "required": [
              "id",
              "type",
              "attributes"
            ]
          }
        }
      },
      "restfulResponse": {
        "type": "object",
        "properties": {
          "id": {
            "description": "ID",
            "type": "string"
          }
        }
      },
      "result": {
        "type": "object",
        "properties": {
          "id": {
            "description": "ID",
            "type": "string"
          },
          "carrier": {
            "description": "Name of the Carrier",
            "type": "string"
          },
          "modes_of_transport": {
            "description": "Main Modes of Transport for the route",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "total": {
            "description": "The total value of the Result",
            "schema": {
              "$ref": "#/components/schemas/money"
            }
          },
          "service_level": {
            "description": "Name of the main freight service level",
            "type": "string"
          },
          "valid_until": {
            "description": "Date until which this quote is valid",
            "type": "string"
          },
          "transit_time": {
            "description": "A figure denoting the number of days the journey will likely take",
            "type": "integer",
            "format": "int32"
          },
          "cargo_ready_date": {
            "description": "A date and time indicating after which the cargo will be ready for loading",
            "type": "string",
            "format": "date-time"
          },
          "cargo_delivery_date": {
            "description": "A date and time indicating by when the cargo needs to be delivered by",
            "type": "string",
            "format": "date-time"
          },
          "origin": {
            "description": "The full name of the start point of the quoted journey",
            "type": "string"
          },
          "destination": {
            "description": "The full name of the end point of the quoted journey",
            "type": "string"
          },
          "transshipment": {
            "description": "Information regarding the transhipments (if any) that happen during the main section of the journey",
            "type": "string"
          },
          "numberOfStops": {
            "description": "The number of times the cargo will be loaded and unloaded during the journey",
            "type": "integer"
          }
        }
      },
      "schedule": {
        "type": "object",
        "properties": {
          "id": {
            "description": "ID",
            "type": "string"
          },
          "estimatedDepartureTime": {
            "description": "Estimated departure date",
            "type": "datetime"
          },
          "estimatedArrivalTime": {
            "description": "Estimation of arrival time",
            "type": "datetime"
          },
          "voyageCode": {
            "description": "voyage code",
            "type": "string"
          },
          "vesselNo": {
            "description": "vessel number",
            "type": "string"
          },
          "closingDate": {
            "description": "schedule closing date",
            "type": "datetime"
          },
          "modeOfTransport": {
            "description": "The mode of transport of the schedule",
            "type": "string"
          },
          "transitTime": {
            "description": "The time in days that will take the goods to reach from origin to destination.",
            "type": "integer"
          }
        }
      },
      "offer": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the Offer",
            "type": "string"
          }
        },
        "required": [
          "id"
        ]
      },
      "routeSection": {
        "type": "object",
        "description": "Details regarding the start, end, service and mode of transport of each section of the quoted Journey",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the RouteSection"
          },
          "service": {
            "type": "string",
            "description": "The service level of this part of the journey"
          },
          "carrier": {
            "type": "string",
            "description": "The Carrier operating the service on this part of the journey"
          },
          "modeOfTransport": {
            "type": "string",
            "description": "The mode of transport for the section of the journey."
          },
          "transitTime": {
            "description": "The time in days that this part of the journey will take.",
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "origin": {
            "type": "object",
            "description": "The start point of this section",
            "properties": {
              "$ref": "#/components/schemas/resultDetailedRoutingLocation"
            }
          },
          "destination": {
            "type": "object",
            "description": "The end point of this section",
            "properties": {
              "$ref": "#/components/schemas/resultDetailedRoutingLocation"
            }
          },
          "carrierLogo": {
            "description": "URL for accesing the logo of the route section's Carrier",
            "type": "string",
            "nullable": true
          },
          "transshipment": {
            "description": "Information regarding the transhipments (if any) that happen during this section of the journey",
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "id",
          "service",
          "carrier",
          "modeOfTransport",
          "transitTime",
          "origin",
          "destination",
          "transshipment"
        ]
      },
      "resultDetailedRoutingLocation": {
        "type": "object",
        "description": "A object containing the address, locode and city of the location",
        "properties": {
          "address": {
            "type": "string",
            "description": "The city name or address of the location"
          },
          "locode": {
            "type": "string",
            "description": "The UN/LOCODE of the location",
            "nullable": true
          },
          "city": {
            "type": "string",
            "description": "The city name of the location. Will only differ from name if the location is an Address"
          }
        }
      },
      "settings": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the settings object",
            "type": "string"
          },
          "attributes": {
            "description": "Attributes",
            "type": "object",
            "properties": {
              "language": {
                "type": "string",
                "pattern": "[a-z]{2}-[A-Z]{2}",
                "description": "User's preferred language. Preferred language is given as language\nand country combination, allowing different dialects and languages\nfor each region.\n\nLanguage code is combined with language and country, separated by\ndash. First part of the code, language is the lower-case\ntwo-letter codes as defined by ISO-639-1. Second part is the\nupper-case two-letter codes as defined by ISO-3166-1.\n\nFor example:\n\n* `en-US` - English as spoken in United States of America\n* `en-GB` - English as spoken in United Kingdom and the Northern Ireland\n* `sv-FI` - Swedish as spoken in Finland\n"
              },
              "locale": {
                "type": "string",
                "pattern": "[a-z]{2}-[A-Z]{2}",
                "description": "User's preferred locale. Preferred locale defines how numbers and\ncurrencies, time et al. are displayed in the shop.\n\nLocale code is combined with language and country, separated by\ndash. First part of the code, language is the lower-case\ntwo-letter codes as defined by ISO-639-1. Second part is the\nupper-case two-letter codes as defined by ISO-3166-1.\n\nFor example:\n\n* `en-US` - English as spoken in United States of America\n* `en-GB` - English as spoken in United Kingdom and the Northern Ireland\n* `sv-FI` - Swedish as spoken in Finland\n"
              }
            }
          }
        }
      },
      "scope": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the offer",
            "type": "string"
          },
          "loginMandatory": {
            "type": "boolean",
            "description": "This boolean signals whether it is mandatory for a user to log in before they can access the quoting tool itself"
          },
          "links": {
            "type": "object",
            "properties": {
              "legal": {
                "type": "string",
                "description": "Link to any Legal notices the client wants to display",
                "nullable": true
              },
              "imprint": {
                "type": "string",
                "description": "Link to the 'Imprint' page of the client",
                "nullable": true
              },
              "about": {
                "type": "string",
                "description": "Link to the About Us page of the Clients website",
                "nullable": true
              },
              "privacy": {
                "type": "string",
                "description": "Link to the Client's Privacy Policy",
                "nullable": true
              },
              "terms": {
                "type": "string",
                "description": "Link to the Terms and Conditions the Client operates under",
                "nullable": true
              }
            }
          },
          "authMethods": {
            "type": "array",
            "description": "This contains the auth methods this Organization accepts",
            "schema": "string"
          },
          "loginSamlText": {
            "type": "string",
            "description": "Custom text to be displayed in the 'Log in Via SAML' button"
          }
        }
      },
      "user": {
        "type": "object",
        "properties": {
          "id": {
            "description": "ID",
            "type": "string"
          },
          "type": {
            "description": "Type",
            "type": "string"
          },
          "attributes": {
            "description": "Attributes",
            "type": "object",
            "properties": {
              "email": {
                "description": "Email",
                "type": "string"
              },
              "organizationId": {
                "description": "organization",
                "type": "string"
              },
              "firstName": {
                "description": "First Name",
                "type": "string"
              },
              "lastName": {
                "description": "Last Name",
                "type": "string"
              },
              "phone": {
                "description": "Phone",
                "type": "string",
                "nullable": true
              },
              "companyName": {
                "description": "Company",
                "type": "string"
              }
            },
            "required": [
              "email",
              "organizationId",
              "firstName",
              "lastName",
              "phone",
              "companyName"
            ]
          }
        },
        "required": [
          "id",
          "type",
          "attributes"
        ]
      },
      "v1Client": {
        "type": "object",
        "properties": {
          "id": {
            "description": "ID",
            "type": "string"
          },
          "type": {
            "description": "Type",
            "type": "string"
          },
          "attributes": {
            "description": "Attributes",
            "type": "object",
            "properties": {
              "email": {
                "description": "Email",
                "type": "string"
              },
              "organizationId": {
                "description": "organization",
                "type": "string"
              },
              "firstName": {
                "description": "First Name",
                "type": "string"
              },
              "lastName": {
                "description": "Last Name",
                "type": "string"
              },
              "phone": {
                "description": "Phone",
                "type": "string",
                "nullable": true
              },
              "companyName": {
                "description": "The name of the Company the client belongs to",
                "type": "string"
              },
              "companyId": {
                "description": "The ID of the Company the client belongs to",
                "type": "string"
              },
              "paymentTerms": {
                "description": "The Payment Terms applicable to the client",
                "type": "string"
              }
            },
            "required": [
              "email",
              "organizationId",
              "firstName",
              "lastName",
              "phone",
              "companyName",
              "paymentTerms"
            ]
          }
        },
        "required": [
          "id",
          "type",
          "attributes"
        ]
      },
      "profile": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the profile. Format of UUID.",
            "type": "string"
          },
          "attributes": {
            "description": "Attributes",
            "type": "object",
            "properties": {
              "email": {
                "description": "Email of the client",
                "type": "string"
              },
              "firstName": {
                "description": "First name of the user. This can be missing in case the user either does not have a first (given) name, or does not want it to be used.",
                "type": "string"
              },
              "lastName": {
                "description": "User's last or family name. In cases user only has one name, last name is used for identifying that.",
                "type": "string"
              },
              "phone": {
                "description": "User's phone number for contact purposes",
                "type": "string"
              }
            },
            "required": [
              "email",
              "firstName",
              "lastName"
            ]
          }
        },
        "required": [
          "id",
          "type",
          "attributes"
        ]
      },
      "analyticsCount": {
        "type": "number",
        "nullable": true
      },
      "analyticsTotal": {
        "type": "object",
        "properties": {
          "symbol": {
            "description": "ISO Currency Code for the Total",
            "type": "string"
          },
          "value": {
            "description": "Value in the base unit (cents) of the Total",
            "type": "number"
          }
        }
      },
      "analyticsListCount": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "label": {
              "description": "Label for displaying the context of the result",
              "type": "string"
            },
            "count": {
              "description": "Value of the Analytic result",
              "type": "number"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "oauth": {
        "type": "oauth2",
        "description": "This API uses OAuth2 with the password grant flow.",
        "flows": {
          "password": {
            "tokenUrl": "/oauth/tokens",
            "refreshUrl": "/oauth/refresh",
            "scopes": {
              "public": "Public Access"
            }
          }
        }
      },
      "bearerAuth": {
        "type": "http",
        "description": "Some endpoints authorize via integration token",
        "scheme": "bearer"
      }
    }
  },
  "servers": [
    {
      "url": "https://{host}",
      "variables": {
        "host": {
          "default": "api.itsmycargo.com"
        }
      }
    }
  ],
  "paths": {
    "/v1/organizations/{organization_id}/ahoy": {
      "get": {
        "summary": "Fetch Settings",
        "tags": [
          "Ahoy"
        ],
        "description": "Fetch settings for Ahoy widget.",
        "operationId": "getAhoy",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "endpoint": "test_1.itsmycargo.test",
                  "modes_of_transport": {
                    "air": {
                      "fcl": false,
                      "lcl": true
                    },
                    "rail": {
                      "fcl": false,
                      "lcl": false
                    },
                    "ocean": {
                      "fcl": true,
                      "lcl": true
                    },
                    "truck": {
                      "fcl": false,
                      "lcl": false
                    }
                  },
                  "pre_carriage": true,
                  "on_carriage": true
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "endpoint": {
                      "description": "Endpoint url that Ahoy will redirect to start the booking process",
                      "type": "string"
                    },
                    "pre_carriage": {
                      "description": "Determines if pre-carriage is enabled",
                      "type": "boolean"
                    },
                    "on_carriage": {
                      "description": "Determines if on-carriage is enabled",
                      "type": "boolean"
                    },
                    "modes_of_transport": {
                      "description": "Supported modes of transports",
                      "type": "object",
                      "properties": {
                        "air": {
                          "description": "Supported cargo types for Air Cargo",
                          "type": "object",
                          "properties": {
                            "fcl": {
                              "description": "Determines if FCL is supported",
                              "type": "boolean"
                            },
                            "lcl": {
                              "description": "Determines if LCL is supported",
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "fcl",
                            "lcl"
                          ]
                        },
                        "rail": {
                          "description": "Supported cargo types for Rail Cargo",
                          "type": "object",
                          "properties": {
                            "fcl": {
                              "description": "Determines if FCL is supported",
                              "type": "boolean"
                            },
                            "lcl": {
                              "description": "Determines if LCL is supported",
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "fcl",
                            "lcl"
                          ]
                        },
                        "ocean": {
                          "description": "Supported cargo types for Ocean Cargo",
                          "type": "object",
                          "properties": {
                            "fcl": {
                              "description": "Determines if FCL is supported",
                              "type": "boolean"
                            },
                            "lcl": {
                              "description": "Determines if LCL is supported",
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "fcl",
                            "lcl"
                          ]
                        },
                        "truck": {
                          "description": "Supported cargo types for Trucking Cargo",
                          "type": "object",
                          "properties": {
                            "fcl": {
                              "description": "Determines if FCL is supported",
                              "type": "boolean"
                            },
                            "lcl": {
                              "description": "Determines if LCL is supported",
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "fcl",
                            "lcl"
                          ]
                        }
                      },
                      "required": [
                        "air",
                        "rail",
                        "ocean",
                        "truck"
                      ]
                    }
                  },
                  "required": [
                    "endpoint",
                    "pre_carriage",
                    "on_carriage",
                    "modes_of_transport"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Invalid Customer UUID"
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/cargo_item_types": {
      "get": {
        "summary": "Fetch all available cargo types",
        "tags": [
          "Quote"
        ],
        "description": "Fetches all possible cargo types enabled for the customer.",
        "operationId": "getCargoItemTypes",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "66",
                      "type": "cargoItemType",
                      "attributes": {
                        "width": "101.0",
                        "length": "121.0",
                        "description": "Pallet"
                      }
                    }
                  ],
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/cargo_item_type"
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Invalid Credentials"
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/queries/{query_id}/cargo_units": {
      "get": {
        "summary": "Fetch CargoUnits for the Query",
        "tags": [
          "CargoUnits"
        ],
        "description": "Fetches cargo units for the query.",
        "operationId": "getCargoUnits",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query_id",
            "in": "path",
            "description": "Query ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "689f671f-e534-4ae0-8130-e7974dbe7de7",
                      "type": "cargoUnit",
                      "attributes": {
                        "cargoClass": "lcl",
                        "colliType": "pallet",
                        "height": 140.0,
                        "length": 80.0,
                        "stackable": false,
                        "quantity": 2,
                        "weight": 3000.0,
                        "width": 120.0,
                        "volume": 1.344,
                        "commodities": [

                        ]
                      }
                    },
                    {
                      "id": "a71d8050-d172-43af-b26c-a3bb6740dfa2",
                      "type": "cargoUnit",
                      "attributes": {
                        "cargoClass": "lcl",
                        "colliType": "pallet",
                        "height": 140.0,
                        "length": 80.0,
                        "stackable": false,
                        "quantity": 2,
                        "weight": 3000.0,
                        "width": 120.0,
                        "volume": 1.344,
                        "commodities": [

                        ]
                      }
                    },
                    {
                      "id": "0744b4da-e1a8-497e-8ebd-fb0379dcbabf",
                      "type": "cargoUnit",
                      "attributes": {
                        "cargoClass": "lcl",
                        "colliType": "pallet",
                        "height": 140.0,
                        "length": 80.0,
                        "stackable": false,
                        "quantity": 2,
                        "weight": 3000.0,
                        "width": 120.0,
                        "volume": 1.344,
                        "commodities": [

                        ]
                      }
                    }
                  ],
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/item_response"
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/queries/{query_id}/cargo_units/{id}": {
      "get": {
        "summary": "Fetch CargoUnit for the Query",
        "tags": [
          "CargoUnit"
        ],
        "description": "Fetch Cargo Unit",
        "operationId": "getCargoUnit",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query_id",
            "in": "path",
            "description": "Query ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "CargoUnit ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "622054ee-30b8-4b47-a0df-09cf28d47093",
                    "type": "cargoUnit",
                    "attributes": {
                      "cargoClass": "lcl",
                      "colliType": "pallet",
                      "height": 140.0,
                      "length": 80.0,
                      "stackable": false,
                      "quantity": 2,
                      "weight": 3000.0,
                      "width": 120.0,
                      "volume": 1.344,
                      "commodities": [

                      ]
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/item_response"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/carriers": {
      "get": {
        "summary": "Fetch all available carriers",
        "tags": [
          "Carriers"
        ],
        "description": "Fetches all possible carriers enabled for the customer.",
        "operationId": "getCarriers",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "10d4b2a0-e387-456c-b6fa-6488b58baa8d",
                      "type": "carrier",
                      "attributes": {
                        "id": "10d4b2a0-e387-456c-b6fa-6488b58baa8d",
                        "code": "carrier_1",
                        "name": "Carrier - 1",
                        "logo": "http://localhost:3000/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBZ0FkIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--7d62ca9ffb97b8804ebfd2a43d52d621deb01438/test-image.jpg"
                      }
                    },
                    {
                      "id": "28a6f3bf-fa86-4942-9cb2-ed47c61c164d",
                      "type": "carrier",
                      "attributes": {
                        "id": "28a6f3bf-fa86-4942-9cb2-ed47c61c164d",
                        "code": "carrier_2",
                        "name": "Carrier - 2",
                        "logo": "http://localhost:3000/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBZ0VkIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--89cd5214f742eea75404c141066d22eaf140bd39/test-image.jpg"
                      }
                    },
                    {
                      "id": "256b0e81-2855-4be8-afaf-26db819ac730",
                      "type": "carrier",
                      "attributes": {
                        "id": "256b0e81-2855-4be8-afaf-26db819ac730",
                        "code": "carrier_3",
                        "name": "Carrier - 3",
                        "logo": "http://localhost:3000/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBZ0lkIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--5d7f945492242b9036c8d1a38ee73f20b3f9efea/test-image.jpg"
                      }
                    },
                    {
                      "id": "b23bda5c-5a5e-436c-83c4-ac680472d750",
                      "type": "carrier",
                      "attributes": {
                        "id": "b23bda5c-5a5e-436c-83c4-ac680472d750",
                        "code": "carrier_4",
                        "name": "Carrier - 4",
                        "logo": "http://localhost:3000/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBZ01kIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--96edbec7037fb6824ede94140ea207f621e3a225/test-image.jpg"
                      }
                    },
                    {
                      "id": "e62ae943-5a32-497d-af45-53951bb4182e",
                      "type": "carrier",
                      "attributes": {
                        "id": "e62ae943-5a32-497d-af45-53951bb4182e",
                        "code": "carrier_5",
                        "name": "Carrier - 5",
                        "logo": "http://localhost:3000/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBZ1FkIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--1ae0c945e6b21561d7580de8db2f94bb56c49e27/test-image.jpg"
                      }
                    }
                  ],
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/carrier"
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Invalid Credentials"
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/carriers/{id}": {
      "get": {
        "summary": "Fetch carrier",
        "tags": [
          "Carriers"
        ],
        "description": "Fetches a specific Carrier.",
        "operationId": "getCarrier",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Carrier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "56ee5dfd-9777-450e-9d83-569a41e84849",
                    "type": "carrier",
                    "attributes": {
                      "id": "56ee5dfd-9777-450e-9d83-569a41e84849",
                      "code": "carrier_16",
                      "name": "Carrier - 16",
                      "logo": "http://localhost:3000/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBaElkIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--a1dd0ff14d9d76df77819517196f93a713d11f62/test-image.jpg"
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/carrier"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Invalid Credentials"
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/quotations/{quotation_id}/charges/{id}": {
      "get": {
        "summary": "Fetch tender charges",
        "tags": [
          "Quote"
        ],
        "description": "Fetches available tenders.",
        "operationId": "getCharge",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Trip ID of the tender",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quotation_id",
            "in": "path",
            "description": "The selected quotation ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "6360abda-bd83-42f2-9a2d-6212c77efc03",
                    "type": "detailedResult",
                    "attributes": {
                      "queryId": "1224cab8-2d09-4f13-b372-0731f2f223f0",
                      "paymentTerms": "Some quotation payment terms",
                      "charges": [
                        {
                          "id": "ea4c28a9-6c37-4aae-87d2-2db1f4b34a41",
                          "editId": null,
                          "order": 0,
                          "parentId": null,
                          "lineItemId": null,
                          "code": null,
                          "chargeCategoryId": null,
                          "description": null,
                          "section": null,
                          "value": {
                            "amount": "180.0",
                            "currency": "EUR"
                          },
                          "originalValue": {
                            "amount": "180.0",
                            "currency": "EUR"
                          },
                          "tenderId": "6360abda-bd83-42f2-9a2d-6212c77efc03",
                          "level": 0
                        },
                        {
                          "id": "a654eb04-daaa-405f-bca5-eaf9a0f51181",
                          "editId": null,
                          "order": 0,
                          "parentId": null,
                          "lineItemId": null,
                          "code": null,
                          "chargeCategoryId": 2276,
                          "description": "Trucking pre",
                          "section": "trucking_pre",
                          "value": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "originalValue": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "tenderId": "6360abda-bd83-42f2-9a2d-6212c77efc03",
                          "level": 1
                        },
                        {
                          "id": "56057e39-6d0f-46d0-a133-2bcddce6d0bf",
                          "editId": "3179e1ea-d042-4e28-a668-058d147bb59c",
                          "order": 0,
                          "parentId": "a654eb04-daaa-405f-bca5-eaf9a0f51181",
                          "lineItemId": null,
                          "code": null,
                          "chargeCategoryId": "",
                          "description": "1 x Pallet",
                          "section": "trucking_pre",
                          "value": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "originalValue": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "tenderId": "6360abda-bd83-42f2-9a2d-6212c77efc03",
                          "level": 2
                        },
                        {
                          "id": "098add07-a8a1-463b-bb4d-d52397e69126",
                          "editId": null,
                          "order": 0,
                          "parentId": "56057e39-6d0f-46d0-a133-2bcddce6d0bf",
                          "lineItemId": null,
                          "code": null,
                          "chargeCategoryId": null,
                          "description": "Fees charged in USD:",
                          "section": "trucking_pre",
                          "value": {
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "originalValue": {
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "tenderId": "6360abda-bd83-42f2-9a2d-6212c77efc03",
                          "level": 3
                        },
                        {
                          "id": "e59002b5-d0cb-413f-b024-c4c3786d3a67",
                          "editId": "0cdf5498-66ca-496a-913e-327864a95a68",
                          "order": 0,
                          "parentId": "56057e39-6d0f-46d0-a133-2bcddce6d0bf",
                          "lineItemId": "0cdf5498-66ca-496a-913e-327864a95a68",
                          "code": "Fee 8",
                          "chargeCategoryId": null,
                          "description": "FEE 8 - ",
                          "section": "trucking_pre",
                          "originalValue": {
                            "included": false,
                            "excluded": false,
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "value": {
                            "included": false,
                            "excluded": false,
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "tenderId": "6360abda-bd83-42f2-9a2d-6212c77efc03",
                          "level": 4,
                          "rateFactor": null,
                          "rate": null
                        },
                        {
                          "id": "a62f6a4c-83df-4af8-8577-52ea6db93cb4",
                          "editId": null,
                          "order": 1,
                          "parentId": null,
                          "lineItemId": null,
                          "code": null,
                          "chargeCategoryId": 2279,
                          "description": "Export",
                          "section": "export",
                          "value": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "originalValue": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "tenderId": "6360abda-bd83-42f2-9a2d-6212c77efc03",
                          "level": 1
                        },
                        {
                          "id": "2c679219-24a2-428b-afb2-f070f99779e9",
                          "editId": "3179e1ea-d042-4e28-a668-058d147bb59c",
                          "order": 0,
                          "parentId": "a62f6a4c-83df-4af8-8577-52ea6db93cb4",
                          "lineItemId": null,
                          "code": null,
                          "chargeCategoryId": "",
                          "description": "1 x Pallet",
                          "section": "export",
                          "value": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "originalValue": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "tenderId": "6360abda-bd83-42f2-9a2d-6212c77efc03",
                          "level": 2
                        },
                        {
                          "id": "1ce2d95f-2d7e-4d25-aca3-1c2ed757f1ec",
                          "editId": null,
                          "order": 0,
                          "parentId": "2c679219-24a2-428b-afb2-f070f99779e9",
                          "lineItemId": null,
                          "code": null,
                          "chargeCategoryId": null,
                          "description": "Fees charged in USD:",
                          "section": "export",
                          "value": {
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "originalValue": {
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "tenderId": "6360abda-bd83-42f2-9a2d-6212c77efc03",
                          "level": 3
                        },
                        {
                          "id": "4093883f-cfe1-4e78-ac78-3e014f556941",
                          "editId": "29005731-24bc-4b79-8085-e9efdb867ece",
                          "order": 0,
                          "parentId": "2c679219-24a2-428b-afb2-f070f99779e9",
                          "lineItemId": "29005731-24bc-4b79-8085-e9efdb867ece",
                          "code": "Fee 11",
                          "chargeCategoryId": null,
                          "description": "FEE 11 - ",
                          "section": "export",
                          "originalValue": {
                            "included": false,
                            "excluded": false,
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "value": {
                            "included": false,
                            "excluded": false,
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "tenderId": "6360abda-bd83-42f2-9a2d-6212c77efc03",
                          "level": 4,
                          "rateFactor": null,
                          "rate": null
                        },
                        {
                          "id": "3c3db370-2ebf-4a66-8bb4-81774159be09",
                          "editId": null,
                          "order": 2,
                          "parentId": null,
                          "lineItemId": null,
                          "code": null,
                          "chargeCategoryId": 2278,
                          "description": "Cargo",
                          "section": "cargo",
                          "value": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "originalValue": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "tenderId": "6360abda-bd83-42f2-9a2d-6212c77efc03",
                          "level": 1
                        },
                        {
                          "id": "9fef787d-c9d7-4a80-9933-12b506d9ec13",
                          "editId": "3179e1ea-d042-4e28-a668-058d147bb59c",
                          "order": 0,
                          "parentId": "3c3db370-2ebf-4a66-8bb4-81774159be09",
                          "lineItemId": null,
                          "code": null,
                          "chargeCategoryId": "",
                          "description": "1 x Pallet",
                          "section": "cargo",
                          "value": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "originalValue": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "tenderId": "6360abda-bd83-42f2-9a2d-6212c77efc03",
                          "level": 2
                        },
                        {
                          "id": "ca23f71d-0402-48cf-9727-37398ad2d91f",
                          "editId": null,
                          "order": 0,
                          "parentId": "9fef787d-c9d7-4a80-9933-12b506d9ec13",
                          "lineItemId": null,
                          "code": null,
                          "chargeCategoryId": null,
                          "description": "Fees charged in USD:",
                          "section": "cargo",
                          "value": {
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "originalValue": {
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "tenderId": "6360abda-bd83-42f2-9a2d-6212c77efc03",
                          "level": 3
                        },
                        {
                          "id": "e7d7e59c-5b6e-4dfc-b3be-73ab5d11ecd6",
                          "editId": "1ade9ad2-9a00-4647-977b-6a2d3228680c",
                          "order": 0,
                          "parentId": "9fef787d-c9d7-4a80-9933-12b506d9ec13",
                          "lineItemId": "1ade9ad2-9a00-4647-977b-6a2d3228680c",
                          "code": "Fee 14",
                          "chargeCategoryId": null,
                          "description": "FEE 14 - ",
                          "section": "cargo",
                          "originalValue": {
                            "included": false,
                            "excluded": false,
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "value": {
                            "included": false,
                            "excluded": false,
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "tenderId": "6360abda-bd83-42f2-9a2d-6212c77efc03",
                          "level": 4,
                          "rateFactor": null,
                          "rate": null
                        },
                        {
                          "id": "b95382a0-06e9-48e1-8358-a602d7166fdf",
                          "editId": null,
                          "order": 3,
                          "parentId": null,
                          "lineItemId": null,
                          "code": null,
                          "chargeCategoryId": 2280,
                          "description": "Import",
                          "section": "import",
                          "value": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "originalValue": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "tenderId": "6360abda-bd83-42f2-9a2d-6212c77efc03",
                          "level": 1
                        },
                        {
                          "id": "fb22a029-2e37-470f-af0f-6e1e782543f1",
                          "editId": "3179e1ea-d042-4e28-a668-058d147bb59c",
                          "order": 0,
                          "parentId": "b95382a0-06e9-48e1-8358-a602d7166fdf",
                          "lineItemId": null,
                          "code": null,
                          "chargeCategoryId": "",
                          "description": "1 x Pallet",
                          "section": "import",
                          "value": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "originalValue": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "tenderId": "6360abda-bd83-42f2-9a2d-6212c77efc03",
                          "level": 2
                        },
                        {
                          "id": "acda015c-1c4a-484a-afc6-10f533812568",
                          "editId": null,
                          "order": 0,
                          "parentId": "fb22a029-2e37-470f-af0f-6e1e782543f1",
                          "lineItemId": null,
                          "code": null,
                          "chargeCategoryId": null,
                          "description": "Fees charged in USD:",
                          "section": "import",
                          "value": {
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "originalValue": {
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "tenderId": "6360abda-bd83-42f2-9a2d-6212c77efc03",
                          "level": 3
                        },
                        {
                          "id": "31046898-ae48-48c3-960c-b9cb79be6192",
                          "editId": "c098412d-6e92-4745-a6da-a8644c92e103",
                          "order": 0,
                          "parentId": "fb22a029-2e37-470f-af0f-6e1e782543f1",
                          "lineItemId": "c098412d-6e92-4745-a6da-a8644c92e103",
                          "code": "Fee 17",
                          "chargeCategoryId": null,
                          "description": "FEE 17 - ",
                          "section": "import",
                          "originalValue": {
                            "included": false,
                            "excluded": false,
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "value": {
                            "included": false,
                            "excluded": false,
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "tenderId": "6360abda-bd83-42f2-9a2d-6212c77efc03",
                          "level": 4,
                          "rateFactor": null,
                          "rate": null
                        },
                        {
                          "id": "1efee489-9c3a-47ee-b6ce-9c7cd3e8f204",
                          "editId": null,
                          "order": 4,
                          "parentId": null,
                          "lineItemId": null,
                          "code": null,
                          "chargeCategoryId": 2277,
                          "description": "Trucking on",
                          "section": "trucking_on",
                          "value": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "originalValue": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "tenderId": "6360abda-bd83-42f2-9a2d-6212c77efc03",
                          "level": 1
                        },
                        {
                          "id": "2d2245e7-3591-43a4-a0c1-8ca54d46e06c",
                          "editId": "3179e1ea-d042-4e28-a668-058d147bb59c",
                          "order": 0,
                          "parentId": "1efee489-9c3a-47ee-b6ce-9c7cd3e8f204",
                          "lineItemId": null,
                          "code": null,
                          "chargeCategoryId": "",
                          "description": "1 x Pallet",
                          "section": "trucking_on",
                          "value": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "originalValue": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "tenderId": "6360abda-bd83-42f2-9a2d-6212c77efc03",
                          "level": 2
                        },
                        {
                          "id": "0431b81d-a5f1-4db5-814e-da59066d51cf",
                          "editId": null,
                          "order": 0,
                          "parentId": "2d2245e7-3591-43a4-a0c1-8ca54d46e06c",
                          "lineItemId": null,
                          "code": null,
                          "chargeCategoryId": null,
                          "description": "Fees charged in USD:",
                          "section": "trucking_on",
                          "value": {
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "originalValue": {
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "tenderId": "6360abda-bd83-42f2-9a2d-6212c77efc03",
                          "level": 3
                        },
                        {
                          "id": "37d23327-989f-4f55-b36e-ca1d86d80188",
                          "editId": "f57fa2a9-4e9a-440e-a331-89e63b50475a",
                          "order": 0,
                          "parentId": "2d2245e7-3591-43a4-a0c1-8ca54d46e06c",
                          "lineItemId": "f57fa2a9-4e9a-440e-a331-89e63b50475a",
                          "code": "Fee 20",
                          "chargeCategoryId": null,
                          "description": "FEE 20 - ",
                          "section": "trucking_on",
                          "originalValue": {
                            "included": false,
                            "excluded": false,
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "value": {
                            "included": false,
                            "excluded": false,
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "tenderId": "6360abda-bd83-42f2-9a2d-6212c77efc03",
                          "level": 4,
                          "rateFactor": null,
                          "rate": null
                        }
                      ],
                      "route": "Gothenburg - Shanghai",
                      "vessel": "",
                      "id": "6360abda-bd83-42f2-9a2d-6212c77efc03",
                      "pickupTruckType": null,
                      "deliveryTruckType": null,
                      "pickupCarrier": "SACO",
                      "deliveryCarrier": "SACO",
                      "pickupService": "standard",
                      "deliveryService": "standard"
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/quotationTender"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Invalid Charge ID",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "message": "Couldn't find Journey::Result with 'id'=deadbeef",
                  "status": "not_found",
                  "code": 404
                }
              }
            }
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/clients": {
      "get": {
        "summary": "Fetch all clients",
        "tags": [
          "Clients"
        ],
        "description": "Fetch all customer client accounts.",
        "operationId": "getClients",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "Search query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Results per page",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "554ca612-958d-4f82-a0ee-795d2a6d28b0",
                      "type": "client",
                      "attributes": {
                        "email": "john.doe.63@itsmycargo.test",
                        "organizationId": "2b1f29f7-1919-4e16-9588-b6c5afa9987d",
                        "firstName": "Guest",
                        "lastName": "User 63",
                        "phone": "081 9847079",
                        "companyName": "default",
                        "paymentTerms": "Some quotation payment terms",
                        "companyId": "adea410c-873c-44a1-bdc6-63a2214cdf96"
                      }
                    }
                  ],
                  "links": {
                    "first": "http://www.example.com/v1/organizations/2b1f29f7-1919-4e16-9588-b6c5afa9987d/clients?page=1&per_page=1.0&q=",
                    "prev": null,
                    "next": "http://www.example.com/v1/organizations/2b1f29f7-1919-4e16-9588-b6c5afa9987d/clients?page=2&per_page=1.0&q=",
                    "last": "http://www.example.com/v1/organizations/2b1f29f7-1919-4e16-9588-b6c5afa9987d/clients?page=6&per_page=1.0&q="
                  },
                  "meta": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/v1Client"
                      }
                    },
                    "links": {
                      "$ref": "#/components/schemas/paginationLinks"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Invalid Credentials"
          }
        }
      },
      "post": {
        "summary": "Create a new client",
        "tags": [
          "Clients"
        ],
        "description": "Creates a new client for the customer.",
        "operationId": "createClient",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "e3b1504e-417d-4eb1-a338-a45b4f930f76",
                    "type": "client",
                    "attributes": {
                      "email": "john@example.com",
                      "organizationId": "90898605-fef1-408c-954d-7ac77e3fc89a",
                      "firstName": "John",
                      "lastName": "Doe",
                      "phone": "+1 2345 2345",
                      "companyName": "default",
                      "paymentTerms": "Some quotation payment terms",
                      "companyId": "94645a75-5f7e-41c7-9a1b-a475c128c165"
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                }
              }
            }
          },
          "400": {
            "description": "invalid request",
            "content": {
              "application/json": {
                "example": {
                  "error": "Validation failed: Email can't be blank, Email is invalid"
                }
              }
            }
          },
          "401": {
            "description": "Invalid Credentials"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/client"
              }
            }
          },
          "required": true
        }
      }
    },
    "/v1/organizations/{organization_id}/clients/{id}": {
      "get": {
        "summary": "Fetch specific client",
        "tags": [
          "Clients"
        ],
        "description": "Fetch a given client.",
        "operationId": "getClient",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Client ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "cb50aea6-4a57-4a07-ab66-5c8d066e1cca",
                    "type": "client",
                    "attributes": {
                      "email": "john.doe.93@itsmycargo.test",
                      "organizationId": "3123e285-dfce-4afd-8d14-c5a8c0eb70e5",
                      "firstName": "Guest",
                      "lastName": "User 93",
                      "phone": "081 9847079",
                      "companyName": "default",
                      "paymentTerms": "Some quotation payment terms",
                      "companyId": "b6481466-e47c-4e2b-bff5-2fac936a2651"
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/v1Client"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Invalid Credentials"
          },
          "404": {
            "description": "Invalid Client ID",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "message": "Couldn't find Users::Client with 'id'=deadbeef [WHERE \"users_clients\".\"deleted_at\" IS NULL AND \"users_clients\".\"deleted_at\" IS NULL AND \"users_clients\".\"organization_id\" = $1]",
                  "status": "not_found",
                  "code": 404
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Destroy a specific client",
        "tags": [
          "Clients"
        ],
        "description": "Deletes an client.",
        "operationId": "deleteClient",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Client ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation"
          },
          "404": {
            "description": "Invalid Client ID",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "message": "Couldn't find UserServices::Client with 'id'=deadbeef [WHERE \"users_clients\".\"deleted_at\" IS NULL AND \"users_clients\".\"deleted_at\" IS NULL AND \"users_clients\".\"organization_id\" = $1]",
                  "status": "not_found",
                  "code": 404
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update",
        "tags": [
          "Clients"
        ],
        "description": "Update client details.",
        "operationId": "updateClient",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Client ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation"
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "example": {
                  "error": [
                    "Email can't be blank",
                    "Email is invalid"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "client": {
                    "$ref": "#/components/schemas/client"
                  }
                },
                "required": [
                  "client"
                ]
              }
            }
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/clients/{id}/password_reset": {
      "patch": {
        "summary": "Password Reset",
        "tags": [
          "Clients"
        ],
        "description": "Resets a client password.",
        "operationId": "passwordReset",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Client ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "password": "IAkIdrMg9kFHBovX"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "password": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "password"
                      ]
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Invalid Credentials"
          },
          "404": {
            "description": "Invalid Client ID",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "message": "Couldn't find Users::Client with 'id'=deadbeef [WHERE \"users_clients\".\"deleted_at\" IS NULL AND \"users_clients\".\"deleted_at\" IS NULL AND \"users_clients\".\"organization_id\" = $1]",
                  "status": "not_found",
                  "code": 404
                }
              }
            }
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/colli_types": {
      "get": {
        "summary": "Fetch colli types for the Organization",
        "tags": [
          "ColliTypes"
        ],
        "description": "Fetch colli types for the Organization",
        "operationId": "getColliType",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [

                  ]
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/companies/{company_id}": {
      "put": {
        "summary": "Update a company",
        "tags": [
          "Companies"
        ],
        "description": "Update a specific company",
        "operationId": "updateCompany",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "company_id",
            "in": "path",
            "description": "The current company id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "d5df39fa-fbbb-4643-9502-84db2de06c4d",
                    "type": "company",
                    "attributes": {
                      "id": "d5df39fa-fbbb-4643-9502-84db2de06c4d",
                      "email": "awesome@company.com",
                      "name": "awesome company",
                      "paymentTerms": "an awesome payment term",
                      "phone": "112233",
                      "vatNumber": "VAT12345"
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/company"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "example": {
                  "error": "Please provide at least one param of email, name, paymentTerms, phone, or vatNumber"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "company": {
                    "type": "object",
                    "properties": {
                      "email": {
                        "type": "string",
                        "description": "The email address of the company"
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the company"
                      },
                      "paymentTerms": {
                        "type": "string",
                        "description": "The payment terms, set out by the company"
                      },
                      "phone": {
                        "type": "string",
                        "description": "The phone number of the company"
                      },
                      "vatNumber": {
                        "type": "string",
                        "description": "The VAT number of the company"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/companies/{company_id}": {
      "get": {
        "summary": "Fetch a company",
        "tags": [
          "Companies"
        ],
        "description": "Fetch a specific company",
        "operationId": "getCompany",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "company_id",
            "in": "path",
            "description": "The current company id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "0c7f72ed-fcf7-4900-9fe9-74749e66d5d3",
                    "type": "company",
                    "attributes": {
                      "id": "0c7f72ed-fcf7-4900-9fe9-74749e66d5d3",
                      "email": "foo@bar.com",
                      "name": "company1",
                      "paymentTerms": "Some quotation payment terms",
                      "phone": "112233",
                      "vatNumber": "DE-VATNUMBER1",
                      "contactPersonName": null,
                      "contactPhone": null,
                      "contactEmail": null,
                      "registrationNumber": null
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "attributes": {
                          "$ref": "#/components/schemas/company"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "not found operation",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "message": "Couldn't find Companies::Company with 'id'=non-existent-id [WHERE \"companies_companies\".\"deleted_at\" IS NULL]",
                  "status": "not_found",
                  "code": 404
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update a company",
        "tags": [
          "Companies"
        ],
        "description": "Update a specific company",
        "operationId": "updateCompany",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "company_id",
            "in": "path",
            "description": "The current company id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "5e58a2d0-8c4a-488d-95b0-7b05d324a720",
                    "type": "company",
                    "attributes": {
                      "id": "5e58a2d0-8c4a-488d-95b0-7b05d324a720",
                      "email": "awesome@company.com",
                      "name": "awesome company",
                      "paymentTerms": "an awesome payment term",
                      "phone": "112233",
                      "vatNumber": "VAT12345",
                      "contactPersonName": null,
                      "contactPhone": null,
                      "contactEmail": null,
                      "registrationNumber": null
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/company"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "example": {
                  "error": "Please provide at least one param of email, name, paymentTerms, phone, or vatNumber"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "company": {
                    "type": "object",
                    "properties": {
                      "email": {
                        "type": "string",
                        "description": "The email address of the company"
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the company"
                      },
                      "paymentTerms": {
                        "type": "string",
                        "description": "The payment terms, set out by the company"
                      },
                      "phone": {
                        "type": "string",
                        "description": "The phone number of the company"
                      },
                      "vatNumber": {
                        "type": "string",
                        "description": "The VAT number of the company"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a company",
        "tags": [
          "Companies"
        ],
        "description": "Delete a specific company",
        "operationId": "deleteCompany",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "company_id",
            "in": "path",
            "description": "The current company id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "success": true
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/companies": {
      "get": {
        "summary": "Fetch companies",
        "tags": [
          "Companies"
        ],
        "description": "Fetches list of companies",
        "operationId": "getCompanies",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "perPage",
            "in": "query",
            "description": "number of companies per page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "current page number",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "010e20d5-7753-4181-896d-0f07706455a7",
                      "type": "company",
                      "attributes": {
                        "id": "010e20d5-7753-4181-896d-0f07706455a7",
                        "email": "foo@bar.com",
                        "name": "company1",
                        "paymentTerms": "Some quotation payment terms",
                        "phone": "112233",
                        "vatNumber": "DE-VATNUMBER1",
                        "contactPersonName": null,
                        "contactPhone": null,
                        "contactEmail": null,
                        "registrationNumber": null
                      }
                    },
                    {
                      "id": "fc85e8f1-306b-4780-8e5f-6e07324b95b9",
                      "type": "company",
                      "attributes": {
                        "id": "fc85e8f1-306b-4780-8e5f-6e07324b95b9",
                        "email": null,
                        "name": "default",
                        "paymentTerms": "Some quotation payment terms",
                        "phone": null,
                        "vatNumber": "DE-VATNUMBER59",
                        "contactPersonName": null,
                        "contactPhone": null,
                        "contactEmail": null,
                        "registrationNumber": null
                      }
                    }
                  ],
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "attributes": {
                            "$ref": "#/components/schemas/company"
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "summary": "Create new company",
        "tags": [
          "Companies"
        ],
        "description": "Create new company",
        "operationId": "createCompany",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "company creation success",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "b0cf5d8e-11ee-49ee-a11f-3225438d4693",
                    "type": "company",
                    "attributes": {
                      "id": "b0cf5d8e-11ee-49ee-a11f-3225438d4693",
                      "email": "company@test-company.com",
                      "name": "test-company",
                      "paymentTerms": "some payment terms example",
                      "phone": "1234567890",
                      "vatNumber": "vat12",
                      "contactPersonName": "John Doe",
                      "contactPhone": "9876543210",
                      "contactEmail": "contact@test-company.com",
                      "registrationNumber": "reg987"
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "attributes": {
                          "$ref": "#/components/schemas/company"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "example": {
                  "error_code": "duplicate_company_record"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "The email address of the company"
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the company"
                  },
                  "paymentTerms": {
                    "type": "string",
                    "description": "The payment terms, set out by the company",
                    "nullable": true
                  },
                  "phone": {
                    "type": "string",
                    "description": "The phone number of the company",
                    "nullable": true
                  },
                  "vatNumber": {
                    "type": "string",
                    "description": "The VAT number of the company",
                    "nullable": true
                  },
                  "contactPersonName": {
                    "type": "string",
                    "description": "The name of the contact person/employee from the company",
                    "nullable": true
                  },
                  "contactPhone": {
                    "type": "string",
                    "description": "The phone number of the contact person from the company",
                    "nullable": true
                  },
                  "contactEmail": {
                    "type": "string",
                    "description": "The email of the contact person from the company",
                    "nullable": true
                  },
                  "registrationNumber": {
                    "type": "string",
                    "description": "The registration number set by company",
                    "nullable": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/dashboard": {
      "get": {
        "summary": "Fetch Dashboard Widget",
        "tags": [
          "Dashboard"
        ],
        "description": "Fetch widget date for the dashboard.",
        "operationId": "getDashboard",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "widget",
            "in": "query",
            "description": "Widget to be fetch",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "description": "Start date of dashboard data",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "description": "End date of dashboard data",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": 0
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "oneOf": [
                        {
                          "$ref": "#/components/schemas/analyticsCount"
                        },
                        {
                          "$ref": "#/components/schemas/analyticsTotal"
                        },
                        {
                          "$ref": "#/components/schemas/analyticsListCount"
                        }
                      ]
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/equipments": {
      "get": {
        "summary": "Fetch all available equipment",
        "tags": [
          "Quote"
        ],
        "description": "Fetch availavble equipment for the route.",
        "operationId": "getEquipments",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "origin_nexus_id",
            "in": "query",
            "description": "the id of the origin",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "destination_nexus_id",
            "in": "query",
            "description": "the id of the destination",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    "fcl_20",
                    "fcl_40"
                  ]
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Invalid Credentials"
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/queries/{query_id}/errors": {
      "get": {
        "summary": "Fetch Errors for the Result Set",
        "tags": [
          "Users"
        ],
        "description": "Fetch errors for the given result set.",
        "operationId": "getResultSetErrors",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query_id",
            "in": "path",
            "description": "Query ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "425f0697-210c-4362-bf9b-eedfc8b74b70",
                      "type": "error",
                      "attributes": {
                        "id": "425f0697-210c-4362-bf9b-eedfc8b74b70",
                        "carrier": "MSC",
                        "code": 1001,
                        "limit": "1000",
                        "modeOfTransport": "ocean",
                        "property": "Weight",
                        "service": "Standard",
                        "value": "1100",
                        "cargoUnitId": "ebf39fe7-4b2a-4232-9d72-2cecf68b4e55",
                        "queryId": "f79055d6-6a43-4896-8e45-0f8c29592a69"
                      }
                    }
                  ],
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/journeyError"
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/groups": {
      "get": {
        "summary": "Fetch all groups",
        "tags": [
          "Groups"
        ],
        "description": "Fetch all groups.",
        "operationId": "getGroups",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "a8fedfba-900a-4cdb-85f8-4502370099dc",
                      "type": "organizationsGroup",
                      "attributes": {
                        "id": "a8fedfba-900a-4cdb-85f8-4502370099dc",
                        "name": "Group1"
                      }
                    },
                    {
                      "id": "b9385b23-2aa2-446f-a138-27a7d1ccacc3",
                      "type": "organizationsGroup",
                      "attributes": {
                        "id": "b9385b23-2aa2-446f-a138-27a7d1ccacc3",
                        "name": "Group2"
                      }
                    },
                    {
                      "id": "b2b3e668-b61e-4612-bd06-46f86e044b2e",
                      "type": "organizationsGroup",
                      "attributes": {
                        "id": "b2b3e668-b61e-4612-bd06-46f86e044b2e",
                        "name": "Group3"
                      }
                    },
                    {
                      "id": "6b20b078-3380-4759-96b8-fc66cb13127c",
                      "type": "organizationsGroup",
                      "attributes": {
                        "id": "6b20b078-3380-4759-96b8-fc66cb13127c",
                        "name": "Group4"
                      }
                    },
                    {
                      "id": "c9757c82-fe43-47d3-b4a9-f149191adf87",
                      "type": "organizationsGroup",
                      "attributes": {
                        "id": "c9757c82-fe43-47d3-b4a9-f149191adf87",
                        "name": "Group5"
                      }
                    }
                  ],
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/group"
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Invalid Credentials"
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/itineraries": {
      "get": {
        "summary": "Fetch list of itineraries belonging to an organization",
        "tags": [
          "Quote"
        ],
        "description": "Fetch list of itineraries belonging to an organization",
        "operationId": "getItineraries",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "838",
                      "type": "itinerary",
                      "attributes": {
                        "id": 838,
                        "modeOfTransport": "ocean",
                        "name": "Hamburg - Shanghai"
                      },
                      "relationships": {
                        "stops": {
                          "data": [

                          ]
                        }
                      }
                    }
                  ],
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "number"
                              },
                              "modeOfTransport": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "modeOfTransport",
                              "name"
                            ]
                          },
                          "relationships": {
                            "type": "object",
                            "properties": {
                              "stops": {
                                "type": "object",
                                "properties": {
                                  "data": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string"
                                        },
                                        "type": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "id",
                                        "type"
                                      ]
                                    }
                                  }
                                },
                                "required": [
                                  "data"
                                ]
                              }
                            },
                            "required": [
                              "stops"
                            ]
                          }
                        },
                        "required": [
                          "id",
                          "type",
                          "attributes",
                          "relationships"
                        ]
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/locations/origins": {
      "get": {
        "summary": "Fetch available origins",
        "tags": [
          "Quote"
        ],
        "description": "Fetch available origins",
        "operationId": "getLocationOrigins",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "Query to search locations",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "ID of location to query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "load_type",
            "in": "query",
            "description": "Load type for location",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "2786",
                      "type": "nexus",
                      "attributes": {
                        "id": 2786,
                        "name": "Gothenburg",
                        "latitude": 57.694253,
                        "longitude": 11.854048,
                        "modesOfTransport": [
                          "ocean"
                        ],
                        "countryName": "Sweden",
                        "locode": "SEGOT"
                      }
                    }
                  ],
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/nexus"
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/locations/destinations": {
      "get": {
        "summary": "Fetch available destinations",
        "tags": [
          "Quote"
        ],
        "description": "Fetch available destinations",
        "operationId": "getLocationDestinations",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "Query to search locations",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "ID of location to query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "load_type",
            "in": "query",
            "description": "Load type for location",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "2789",
                      "type": "nexus",
                      "attributes": {
                        "id": 2789,
                        "name": "Shanghai",
                        "latitude": 31.2231338,
                        "longitude": 120.9162975,
                        "modesOfTransport": [
                          "ocean"
                        ],
                        "countryName": "China",
                        "locode": "CNSHA"
                      }
                    }
                  ],
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/nexus"
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/oauth/token/info": {
      "get": {
        "summary": "Fetch information of current token",
        "tags": [
          "Authentication"
        ],
        "description": "Fetch information of current token",
        "operationId": "getTokenInfo",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "access_token": "47b074d15acfd616701bdb4f50d42f46651ea50a902cd96625a0c9a9af80c14e",
                  "token_type": "Bearer",
                  "scope": "public",
                  "created_at": 1639576403
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "access_token": {
                      "type": "string",
                      "description": "Token used to access this endpoint"
                    },
                    "token_type": {
                      "type": "string",
                      "description": "Type of the token (always Bearer)"
                    },
                    "scope": {
                      "type": "string",
                      "description": "OAuth scopes of the token."
                    },
                    "created_at": {
                      "type": "number",
                      "description": "Timestamp when token was created."
                    }
                  },
                  "required": [
                    "access_token",
                    "token_type",
                    "scope",
                    "created_at"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Invalid Credentials",
            "content": {
              "application/json": {
                "example": {
                  "error": "invalid_request",
                  "error_description": "The request is missing a required parameter, includes an unsupported parameter value, or is otherwise malformed."
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error code describing the encountered error."
                    },
                    "error_description": {
                      "type": "string",
                      "description": "Detailed description of the error occured."
                    }
                  },
                  "required": [
                    "error",
                    "error_description"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/offers": {
      "post": {
        "summary": "Create new offer",
        "tags": [
          "Offer"
        ],
        "description": "Create a new offer. To be able to download quotation results as a PDF, first the offer must be created with results that are to be included in the offer.\nCreating a new offer with the selected result IDs allows the backend system to generate a downloadable PDF for these results.\n",
        "operationId": "createOffer",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "a1a736aa-07d7-4631-ac49-e0a82a109eec",
                    "type": "offer",
                    "attributes": {
                      "id": "a1a736aa-07d7-4631-ac49-e0a82a109eec",
                      "url": "http://localhost:3000/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBcXNkIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--ee1afbb4eda06389422d44786f2ac5f8d700cf2d/offer.pdf?disposition=attachment"
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/offer"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "422": {
            "description": "unprocessable entity",
            "content": {
              "application/json": {
                "example": {
                  "error": "No results provided"
                },
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            }
          },
          "404": {
            "description": "results not found",
            "content": {
              "application/json": {
                "example": {
                  "error": "No results found"
                },
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resultIds": {
                    "description": "array of the ids of the results to be included in the offer",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "resultIds"
                ]
              }
            }
          }
        }
      }
    },
    "/v1/organization": {
      "get": {
        "summary": "Fetch current organization",
        "tags": [
          "Organization"
        ],
        "description": "Fetch information of the current organization, automatically detected by the\nrequester domain (referrer).\n\nCurrent organization is detected automatically based on the following hierachy:\n  1. Referrer domain as is, e.g. yourdemo.itsmycargo.shop\n  2. Slug as subdomain, e.g. yourdemo.lvh.me\n",
        "operationId": "getOrganization",
        "parameters": [
          {
            "name": "Referer",
            "in": "header",
            "description": "HTTP Referrer",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "e9b2dfeb-9acf-41d3-bef2-9e28438f777b",
                    "type": "organization",
                    "attributes": {
                      "slug": "test_140",
                      "name": "Freight Spedetion #140"
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/organization"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/v1/organizations": {
      "get": {
        "summary": "Fetch all organizations",
        "tags": [
          "Users"
        ],
        "description": "Fetch all organizations",
        "operationId": "getOrganizations",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [

                  ],
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/organization"
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Invalid Credentials"
          }
        }
      }
    },
    "/v1/organizations/{id}/countries": {
      "get": {
        "summary": "Fetch enabled countries for an organization",
        "tags": [
          "Users"
        ],
        "description": "Fetch enabled countries for an organization",
        "operationId": "getCountries",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "1171",
                      "type": "country",
                      "attributes": {
                        "name": "Sweden",
                        "code": "SE",
                        "flag": "https://restcountries.eu/data/sek.svg"
                      }
                    }
                  ],
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/country"
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Invalid Credentials"
          }
        }
      }
    },
    "/v2/passwords/{reset_password_token}": {
      "patch": {
        "summary": "Reset password for the users password token",
        "tags": [
          "Reset Password"
        ],
        "description": "Resets password for the specified user retrieved from the reset_password_token",
        "operationId": "reset_password",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "reset_password_token",
            "in": "path",
            "description": "one time reset_password_token generated for the User",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "success": true
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "example": {
                  "error_code": "password_mismatch"
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error_code": {
                      "type": "string",
                      "description": "describes password errors which is either `password_mismatch` or `weak_password`"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "password": {
                    "type": "string",
                    "description": "new password of the user"
                  },
                  "password_confirmation": {
                    "type": "string",
                    "description": "confirmation on the new password"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/passwords/": {
      "post": {
        "summary": "Request reset password email for an user",
        "tags": [
          "Reset Password"
        ],
        "description": "Request reset password email specified user email",
        "operationId": "reset_password",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "Referer",
            "in": "header",
            "description": "HTTP Referrer from which the host/domain information will be extracted",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "success": true
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "error_code": "invalid_or_empty_referer",
                  "success": false
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error_code": {
                      "type": "string",
                      "description": "describes unauthorized error reason with error codes `user_not_available`, `sso_user_not_supported`, invalid_or_empty_referer"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "email id of the user for resetting password"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/ports": {
      "get": {
        "summary": "Fetch list of ports",
        "tags": [
          "Ahoy"
        ],
        "description": "Fetch list of ports",
        "operationId": "getPorts",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "location_type",
            "in": "query",
            "description": "Location Type of request origin/destination",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "location_id",
            "in": "query",
            "description": "ID of selected location",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Text input for query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "2809",
                      "type": "port",
                      "attributes": {
                        "id": 2809,
                        "name": "Shanghai",
                        "hubType": "ocean"
                      }
                    }
                  ],
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "number"
                              },
                              "name": {
                                "type": "string"
                              },
                              "hubType": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "name",
                              "hubType"
                            ]
                          }
                        },
                        "required": [
                          "id",
                          "type",
                          "attributes"
                        ]
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/profile": {
      "get": {
        "summary": "Fetch client profile",
        "tags": [
          "Profiles"
        ],
        "description": "Retrieve user's profile. User's profile includes additional information besides email that are used usually to better display user information, has more detailed contact information etc.\n      User profile includes name (as first name, and last name) which can be used for display purposes.",
        "operationId": "getProfile",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "7099b8c8-38ee-4357-a49f-def14c5065fb",
                    "type": "profile",
                    "attributes": {
                      "email": "john.doe.199@itsmycargo.test",
                      "firstName": "Guest",
                      "lastName": "User 199",
                      "phone": "081 9847079"
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/profile"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Invalid Credentials"
          }
        }
      },
      "patch": {
        "summary": "Update",
        "tags": [
          "Profiles"
        ],
        "description": "Update profile details.",
        "operationId": "updateProfile",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "60e3df83-9175-4e24-bcbf-60a231fc21f7",
                    "type": "profile",
                    "attributes": {
                      "email": "john@example.com",
                      "firstName": "John",
                      "lastName": "Doe",
                      "phone": "081 9847079"
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "example": {
                  "error": [
                    "Email has already been taken"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "profile": {
                    "type": "object",
                    "properties": {
                      "email": {
                        "description": "The new email of the client",
                        "type": "string",
                        "pattern": "email"
                      },
                      "firstName": {
                        "description": "First name of the user",
                        "type": "string"
                      },
                      "lastName": {
                        "description": "Last name of the user",
                        "type": "string"
                      },
                      "password": {
                        "description": "A new password for the user account",
                        "type": "string",
                        "minLength": 8
                      }
                    }
                  }
                },
                "required": [
                  "profile"
                ]
              }
            }
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/queries": {
      "post": {
        "summary": "Create new query",
        "tags": [
          "Query"
        ],
        "description": "Create new query",
        "operationId": "createQuery",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation (Cargo Item)",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "0558d6e2-dd1e-42a4-b55a-48b84db2de3d",
                    "type": "query",
                    "attributes": {
                      "id": "0558d6e2-dd1e-42a4-b55a-48b84db2de3d",
                      "aggregated": false,
                      "billable": true,
                      "loadType": "cargo_item",
                      "originName": "SEGOT",
                      "destinationName": "CNSHA",
                      "reference": null,
                      "modesOfTransport": [

                      ],
                      "client": {
                        "data": {
                          "id": "8e9ad8d7-780d-4074-9d4a-2b8e8b70217f",
                          "type": "client",
                          "attributes": {
                            "email": "john.doe.217@itsmycargo.test",
                            "organizationId": "dd5efff3-e757-4f9b-b7ae-8e99b7ac8466",
                            "firstName": "Guest",
                            "lastName": "User 217",
                            "phone": "081 9847079",
                            "companyName": "Guest Company 217"
                          }
                        },
                        "meta": {
                        },
                        "links": {
                        }
                      },
                      "offerId": null,
                      "issueDate": "2021-12-15T13:53:33.411Z",
                      "originId": null,
                      "destinationId": null,
                      "parentId": null,
                      "companyId": null,
                      "cargoReadyDate": "2021-12-15T14:53:33.378Z"
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                }
              }
            }
          },
          "422": {
            "description": "invalid request (missing items)"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "parentId": {
                    "type": "string",
                    "description": "The ID of the original Query that the current Query is based off.",
                    "nullable": true
                  },
                  "originId": {
                    "type": "string",
                    "description": "The Carta ID of the origin point"
                  },
                  "destinationId": {
                    "type": "string",
                    "description": "The Carta ID of the destination point"
                  },
                  "loadType": {
                    "type": "string",
                    "description": "The load type of the query"
                  },
                  "cargoReadyDate": {
                    "type": "string",
                    "description": "The date the cargo is expected to be ready for collection/drop off. This date will be used to find what rates are valid for the journey.",
                    "nullable": true
                  },
                  "items": {
                    "type": "array",
                    "items": {
                      "anyOf": [
                        {
                          "$ref": "#/components/schemas/item_lcl"
                        },
                        {
                          "$ref": "#/components/schemas/item_aggregated_lcl"
                        },
                        {
                          "$ref": "#/components/schemas/item_fcl"
                        }
                      ]
                    }
                  }
                },
                "required": [
                  "originId",
                  "destinationId",
                  "loadType",
                  "items"
                ]
              }
            }
          }
        }
      },
      "get": {
        "summary": "Fetch all queries",
        "tags": [
          "Query"
        ],
        "description": "Fetch all queries",
        "operationId": "getQueries",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "The attribute by which to sort the Queries",
            "enum": [
              "load_type",
              "last_name",
              "origin",
              "destination",
              "selected_date",
              "cargo_ready_date",
              "created_at"
            ],
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "direction",
            "in": "query",
            "description": "The defining whether the sorting is ascending or descending",
            "enum": [
              "asc",
              "desc"
            ],
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchBy",
            "in": "query",
            "description": "The attribute of the Query model to search through",
            "enum": [
              "client_email",
              "client_name",
              "company_name",
              "destination",
              "hs_code",
              "imo_class",
              "load_type",
              "origin",
              "reference"
            ],
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchQuery",
            "in": "query",
            "description": "The value we want to use in our search",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page of result requested",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "perPage",
            "in": "query",
            "description": "The number of results requested per page",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "a90bba96-9746-4e71-929b-457a0dcfdc7d",
                      "type": "query",
                      "attributes": {
                        "id": "a90bba96-9746-4e71-929b-457a0dcfdc7d",
                        "aggregated": false,
                        "billable": true,
                        "loadType": "cargo_item",
                        "originName": "aaaaa",
                        "destinationName": "aaaaa",
                        "reference": "REFERENCE-57",
                        "modesOfTransport": [
                          "ocean"
                        ],
                        "client": {
                          "data": {
                            "id": "0b924d46-29d7-48d0-8f79-965beeb70f93",
                            "type": "client",
                            "attributes": {
                              "email": "john.doe.231@itsmycargo.test",
                              "organizationId": "c7ddb717-681c-4373-8697-5aa3aa00343f",
                              "firstName": "Guest",
                              "lastName": "User 231",
                              "phone": "081 9847079",
                              "companyName": "Guest Company 231"
                            }
                          },
                          "meta": {
                          },
                          "links": {
                          }
                        },
                        "offerId": null,
                        "issueDate": "2021-12-15T11:53:35.605Z",
                        "originId": "GEOID-89",
                        "destinationId": "GEOID-90",
                        "parentId": null,
                        "companyId": "7cd2fdd7-d7f2-4d65-a59b-e529a5936f7a",
                        "cargoReadyDate": "2021-12-18T13:53:35.605Z"
                      }
                    },
                    {
                      "id": "68ffb695-026a-4d2c-a1cf-64fd7f4f2f6e",
                      "type": "query",
                      "attributes": {
                        "id": "68ffb695-026a-4d2c-a1cf-64fd7f4f2f6e",
                        "aggregated": false,
                        "billable": true,
                        "loadType": "cargo_item",
                        "originName": "bbbbb",
                        "destinationName": "bbbbb",
                        "reference": "REFERENCE-58",
                        "modesOfTransport": [
                          "ocean"
                        ],
                        "client": {
                          "data": {
                            "id": "0b924d46-29d7-48d0-8f79-965beeb70f93",
                            "type": "client",
                            "attributes": {
                              "email": "john.doe.231@itsmycargo.test",
                              "organizationId": "c7ddb717-681c-4373-8697-5aa3aa00343f",
                              "firstName": "Guest",
                              "lastName": "User 231",
                              "phone": "081 9847079",
                              "companyName": "Guest Company 231"
                            }
                          },
                          "meta": {
                          },
                          "links": {
                          }
                        },
                        "offerId": null,
                        "issueDate": "2021-12-15T08:53:35.830Z",
                        "originId": "GEOID-91",
                        "destinationId": "GEOID-92",
                        "parentId": null,
                        "companyId": "738ae3f3-35e0-4534-9807-40214e062d28",
                        "cargoReadyDate": "2021-12-17T13:53:35.830Z"
                      }
                    }
                  ],
                  "meta": {
                  },
                  "links": {
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/queries/{id}": {
      "get": {
        "summary": "Fetch Query",
        "tags": [
          "Query"
        ],
        "description": "Fetch Query",
        "operationId": "getQuery",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Query ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "5492dad0-1c6e-4b36-b707-e8899554d0d5",
                    "type": "query",
                    "attributes": {
                      "id": "5492dad0-1c6e-4b36-b707-e8899554d0d5",
                      "aggregated": false,
                      "billable": true,
                      "loadType": "cargo_item",
                      "originName": "20457, Hamburg",
                      "destinationName": "Shanghai Airport",
                      "reference": "REFERENCE-61",
                      "modesOfTransport": [
                        "ocean"
                      ],
                      "client": {
                        "data": {
                          "id": "c9369b8f-a4b4-4ea5-9560-473bfbe7c9d0",
                          "type": "client",
                          "attributes": {
                            "email": "john.doe.238@itsmycargo.test",
                            "organizationId": "2ffe01be-5ae4-428b-89e8-07a8c57f1888",
                            "firstName": "Guest",
                            "lastName": "User 238",
                            "phone": "081 9847079",
                            "companyName": "Guest Company 238"
                          }
                        },
                        "meta": {
                        },
                        "links": {
                        }
                      },
                      "offerId": null,
                      "issueDate": "2021-12-15T13:53:38.000Z",
                      "originId": "GEOID-97",
                      "destinationId": "GEOID-98",
                      "parentId": null,
                      "companyId": "6274176a-f060-4da2-a5e0-b77e71caba49",
                      "cargoReadyDate": "2021-12-16T00:00:00.000Z"
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update Query",
        "tags": [
          "Query"
        ],
        "description": "Update Query",
        "operationId": "updateQuery",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Query ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "a53aea8b-3a1f-4e1a-9805-188f7aee8ac5",
                    "type": "query",
                    "attributes": {
                      "id": "a53aea8b-3a1f-4e1a-9805-188f7aee8ac5",
                      "aggregated": false,
                      "billable": true,
                      "loadType": "cargo_item",
                      "originName": "20457, Hamburg",
                      "destinationName": "Shanghai Airport",
                      "reference": null,
                      "modesOfTransport": [

                      ],
                      "client": {
                        "data": {
                          "id": "1c6faebc-5972-4589-a1c2-2800951f7d8d",
                          "type": "client",
                          "attributes": {
                            "email": "john.doe.248@itsmycargo.test",
                            "organizationId": "327d087a-c0d1-4d40-871d-f21391c2b0c4",
                            "firstName": "Guest",
                            "lastName": "User 248",
                            "phone": "081 9847079",
                            "companyName": "Guest Company 248"
                          }
                        },
                        "meta": {
                        },
                        "links": {
                        }
                      },
                      "offerId": null,
                      "issueDate": "2021-12-15T13:53:41.000Z",
                      "originId": null,
                      "destinationId": null,
                      "parentId": null,
                      "companyId": "39e24d2b-0e24-4ee2-9e43-5a529d2cc58b",
                      "cargoReadyDate": "2021-12-16T00:00:00.000Z"
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized as Query has a client already"
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/quotations": {
      "post": {
        "summary": "Create new quotation",
        "tags": [
          "Quote"
        ],
        "description": "Create new quotation",
        "operationId": "createQuotation",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "9a302ef7-cefa-4ad5-9b6e-46f1d0fc879c",
                    "type": "query",
                    "attributes": {
                      "completed": true,
                      "loadType": "container",
                      "paymentTerms": null,
                      "companyName": null,
                      "parentId": null,
                      "selectedDate": "2021-12-15T14:53:49.127Z",
                      "user": {
                        "data": {
                          "id": null,
                          "type": "user",
                          "attributes": {
                            "email": "",
                            "organizationId": "8d713c09-a04c-4823-9ab9-9bacff27eb1d",
                            "firstName": "",
                            "lastName": "",
                            "phone": null,
                            "companyName": "",
                            "role": null
                          }
                        },
                        "meta": {
                        },
                        "links": {
                        }
                      },
                      "creator": {
                        "data": {
                          "id": "017aef0d-837e-45c3-b3ae-b789d9f638ab",
                          "type": "user",
                          "attributes": {
                            "email": "john.doe.45@itsmycargo.test",
                            "organizationId": null,
                            "firstName": "Guest",
                            "lastName": "User 45",
                            "phone": "081 9847079",
                            "companyName": "Guest Company 45",
                            "role": "user"
                          }
                        },
                        "meta": {
                        },
                        "links": {
                        }
                      },
                      "origin": {
                        "data": {
                          "id": "2830",
                          "type": "nexus",
                          "attributes": {
                            "id": 2830,
                            "name": "Gothenburg",
                            "latitude": 57.694253,
                            "longitude": 11.854048,
                            "modesOfTransport": [
                              "ocean"
                            ],
                            "countryName": "Sweden",
                            "locode": "SEGOT"
                          }
                        },
                        "meta": {
                        },
                        "links": {
                        }
                      },
                      "destination": {
                        "data": {
                          "id": "2829",
                          "type": "nexus",
                          "attributes": {
                            "id": 2829,
                            "name": "Shanghai",
                            "latitude": 31.2231338,
                            "longitude": 120.9162975,
                            "modesOfTransport": [
                              "ocean"
                            ],
                            "countryName": "China",
                            "locode": "CNSHA"
                          }
                        },
                        "meta": {
                        },
                        "links": {
                        }
                      },
                      "containers": {
                        "data": [
                          {
                            "id": "ac3e3bb0-99e7-48dd-b421-be1b784d0d0b",
                            "type": "fclCargoUnit",
                            "attributes": {
                              "shipmentId": "9a302ef7-cefa-4ad5-9b6e-46f1d0fc879c",
                              "sizeClass": "fcl_20",
                              "weightClass": null,
                              "payloadInKg": 1.0,
                              "tareWeight": null,
                              "grossWeight": null,
                              "dangerousGoods": false,
                              "cargoClass": "fcl_20",
                              "hsCodes": [

                              ],
                              "customsText": "",
                              "quantity": 1,
                              "unitPrice": {
                              },
                              "contents": "",
                              "equipmentType": "fcl_20"
                            }
                          }
                        ],
                        "meta": {
                        },
                        "links": {
                        }
                      },
                      "cargoItems": {
                        "data": [

                        ],
                        "meta": {
                        },
                        "links": {
                        }
                      },
                      "tenders": {
                        "data": [
                          {
                            "id": "9f359039-0aa8-4a5f-adce-4060247fe8f4",
                            "type": "result",
                            "attributes": {
                              "remarks": [

                              ],
                              "carrier": "IMC",
                              "modeOfTransport": "ocean",
                              "id": "9f359039-0aa8-4a5f-adce-4060247fe8f4",
                              "origin": "Gothenburg",
                              "destination": "Shanghai",
                              "originHub": "Gothenburg Port",
                              "destinationHub": "Shanghai Port",
                              "pickupAddress": null,
                              "deliveryAddress": null,
                              "serviceLevel": "standard",
                              "total": {
                                "currency": "EUR",
                                "amount": "250.0"
                              },
                              "quotationId": "9a302ef7-cefa-4ad5-9b6e-46f1d0fc879c",
                              "transshipment": null,
                              "estimated": false,
                              "validUntil": "2022-06-15T23:59:59.999Z",
                              "pickupTruckType": "",
                              "deliveryTruckType": "",
                              "pickupCarrier": null,
                              "deliveryCarrier": null,
                              "pickupService": null,
                              "deliveryService": null,
                              "exchangeRates": {
                              }
                            }
                          }
                        ],
                        "meta": {
                        },
                        "links": {
                        }
                      }
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "quote": {
                    "type": "object",
                    "properties": {
                      "selected_date": {
                        "type": "string"
                      },
                      "user_id": {
                        "type": "string",
                        "nullable": true
                      },
                      "origin": {
                        "type": "object",
                        "oneOf": [
                          {
                            "$ref": "#/components/schemas/locationV1Nexus"
                          },
                          {
                            "$ref": "#/components/schemas/locationV1Trucking"
                          }
                        ]
                      },
                      "destination": {
                        "type": "object",
                        "oneOf": [
                          {
                            "$ref": "#/components/schemas/locationV1Nexus"
                          },
                          {
                            "$ref": "#/components/schemas/locationV1Trucking"
                          }
                        ]
                      }
                    },
                    "required": [
                      "selected_date",
                      "origin",
                      "destination"
                    ]
                  },
                  "shipment_info": {
                    "type": "object",
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/v1ShipmentInfoCargoItems"
                      },
                      {
                        "$ref": "#/components/schemas/v1ShipmentInfoContainers"
                      }
                    ]
                  },
                  "async": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "organization_id",
                  "quote",
                  "shipment_info"
                ]
              }
            }
          }
        }
      },
      "get": {
        "summary": "Fetch quotations",
        "tags": [
          "Quote"
        ],
        "description": "Fetch all Quotations",
        "operationId": "fetchQuotations",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "description": "The beginning of the date range for filtering Queries by their CargoReadyDate",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "description": "The end of the date range for filtering Queries by their CargoReadyDate",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [

                  ],
                  "links": {
                    "first": null,
                    "prev": null,
                    "next": null,
                    "last": null
                  },
                  "meta": {
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/quotations/{id}": {
      "get": {
        "summary": "Fetch existing quotation",
        "tags": [
          "Quote"
        ],
        "description": "Fetch existing quotation",
        "operationId": "getQuotation",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Quotation ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organization_id",
            "in": "query",
            "description": "The current organization ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "24ea7064-c330-484d-83fd-eeca29aafd19",
                    "type": "query",
                    "attributes": {
                      "completed": true,
                      "loadType": "cargo_item",
                      "paymentTerms": "Some quotation payment terms",
                      "companyName": "company108",
                      "parentId": null,
                      "selectedDate": "2021-12-16T00:00:00.000Z",
                      "user": {
                        "data": {
                          "id": "48a7be44-57df-4aba-82c0-2b0ef9aa00b4",
                          "type": "user",
                          "attributes": {
                            "email": "john.doe.322@itsmycargo.test",
                            "organizationId": "101670a4-b412-484c-911b-478e153182eb",
                            "firstName": "Guest",
                            "lastName": "User 322",
                            "phone": "081 9847079",
                            "companyName": "Guest Company 322",
                            "role": null
                          }
                        },
                        "meta": {
                        },
                        "links": {
                        }
                      },
                      "creator": {
                        "data": {
                          "id": "a8d30fd6-dd5b-4452-b7f2-b091984aa2e2",
                          "type": "user",
                          "attributes": {
                            "email": "john.doe.323@itsmycargo.test",
                            "organizationId": "101670a4-b412-484c-911b-478e153182eb",
                            "firstName": "Guest",
                            "lastName": "User 323",
                            "phone": "081 9847079",
                            "companyName": "Guest Company 323",
                            "role": null
                          }
                        },
                        "meta": {
                        },
                        "links": {
                        }
                      },
                      "origin": {
                        "data": {
                          "id": "0",
                          "type": "address",
                          "attributes": {
                            "longitude": 11.854048,
                            "latitude": 57.694253,
                            "geocodedAddress": "438 80 Landvetter, Sweden",
                            "street": null,
                            "city": "",
                            "country": "Sweden",
                            "postalCode": "",
                            "name": "438 80 Landvetter, Sweden"
                          }
                        },
                        "meta": {
                        },
                        "links": {
                        }
                      },
                      "destination": {
                        "data": {
                          "id": "0",
                          "type": "address",
                          "attributes": {
                            "longitude": 121.4867159,
                            "latitude": 31.232014,
                            "geocodedAddress": "88 Henan Middle Road, Shanghai",
                            "street": null,
                            "city": "Shanghai",
                            "country": "Sweden",
                            "postalCode": "20001",
                            "name": "88 Henan Middle Road, Shanghai"
                          }
                        },
                        "meta": {
                        },
                        "links": {
                        }
                      },
                      "containers": {
                        "data": [

                        ],
                        "meta": {
                        },
                        "links": {
                        }
                      },
                      "cargoItems": {
                        "data": [
                          {
                            "id": "57b6ccdb-e858-4ea3-af5c-f6764dc185ed",
                            "type": "lclCargoUnit",
                            "attributes": {
                              "payloadInKg": "1000.0",
                              "length": "100.0",
                              "width": "100.0",
                              "height": "100.0",
                              "dangerousGoods": false,
                              "cargoClass": "lcl",
                              "contents": "",
                              "hsCodes": [

                              ],
                              "cargoItemTypeId": null,
                              "customsText": "",
                              "chargeableWeight": "1000.0",
                              "stackable": true,
                              "quantity": 1,
                              "unitPrice": {
                              },
                              "cargoItemType": {
                                "id": null,
                                "description": "Pallet"
                              }
                            }
                          }
                        ],
                        "meta": {
                        },
                        "links": {
                        }
                      },
                      "tenders": {
                        "data": [
                          {
                            "id": "14095083-d820-48a5-b308-22724805ae9f",
                            "type": "result",
                            "attributes": {
                              "remarks": [

                              ],
                              "carrier": "MSC",
                              "modeOfTransport": "ocean",
                              "id": "14095083-d820-48a5-b308-22724805ae9f",
                              "origin": "438 80 Landvetter, Sweden",
                              "destination": "88 Henan Middle Road, Shanghai",
                              "originHub": "Hamburg Port",
                              "destinationHub": "Shanghai Port",
                              "pickupAddress": "438 80 Landvetter, Sweden",
                              "deliveryAddress": "88 Henan Middle Road, Shanghai",
                              "serviceLevel": "standard",
                              "total": {
                                "currency": "EUR",
                                "amount": "180.0"
                              },
                              "quotationId": "24ea7064-c330-484d-83fd-eeca29aafd19",
                              "transshipment": null,
                              "estimated": false,
                              "validUntil": "2021-12-29T13:53:55.563Z",
                              "pickupTruckType": "",
                              "deliveryTruckType": "",
                              "pickupCarrier": "SACO",
                              "deliveryCarrier": "SACO",
                              "pickupService": "standard",
                              "deliveryService": "standard",
                              "exchangeRates": {
                                "usd": "0.833333",
                                "base": "EUR"
                              }
                            }
                          }
                        ],
                        "meta": {
                        },
                        "links": {
                        }
                      }
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/quotations/{id}/download": {
      "post": {
        "summary": "Download quotation as PDF",
        "tags": [
          "Quote"
        ],
        "description": "Download quotation as PDF",
        "operationId": "downloadQuotation",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Quotation ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organization_id",
            "in": "query",
            "description": "The current organization ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "format",
            "in": "query",
            "description": "The desired download format (pdf/xlsx)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "721c78f7-fd87-4965-ad68-3c43138174b0",
                    "type": "file",
                    "attributes": {
                      "url": "http://localhost:3000/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBbXdlIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--7443b2a33ea9b387a6c3eea54efcb0e37ae89a51/offer_721c78f7-fd87-4965-ad68-3c43138174b0.pdf?disposition=attachment"
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "tenders": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "tenders"
                ]
              }
            }
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/queries/{query_id}/requests": {
      "post": {
        "summary": "Create a Request",
        "tags": [
          "Quote"
        ],
        "description": "Creates a Journey::Request with the provided information",
        "operationId": "createRequest",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query_id",
            "in": "path",
            "description": "The current ID of the Journey::Query you wish to make a Request over.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "status": 200
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/queries/{query_id}/results": {
      "get": {
        "summary": "Fetch Results for the query",
        "tags": [
          "Results"
        ],
        "description": "Fetch Results for the query",
        "operationId": "getResults",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query_id",
            "in": "path",
            "description": "Query ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "1a578129-711a-48af-8629-14c5c4f2a760",
                      "type": "restful",
                      "attributes": {
                        "id": "1a578129-711a-48af-8629-14c5c4f2a760"
                      }
                    }
                  ],
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/restfulResponse"
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/results/{id}": {
      "get": {
        "summary": "Fetch Result",
        "tags": [
          "Results"
        ],
        "description": "Fetch Result",
        "operationId": "getResult",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Result ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "28480fda-e806-41cb-ab2c-fd6cea2afa3d",
                    "type": "result",
                    "attributes": {
                      "id": "28480fda-e806-41cb-ab2c-fd6cea2afa3d",
                      "carrier": "MSC",
                      "carrierLogo": "http://localhost:3000/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBbkVlIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6129fb8b3aa601a2f8586228e8dde85e3eb4d90/test-image.jpg",
                      "modesOfTransport": [
                        "ocean"
                      ],
                      "total": {
                        "value": "36.0",
                        "currency": "EUR"
                      },
                      "serviceLevel": "standard",
                      "validUntil": "2022-01-12T13:54:14.531Z",
                      "transitTime": null,
                      "cargoReadyDate": "2021-12-16T00:00:00.000Z",
                      "cargoDeliveryDate": null,
                      "origin": "Hamburg",
                      "destination": "Hamburg",
                      "transshipment": null,
                      "numberOfStops": 0,
                      "queryId": "68456e86-5508-46a7-90ac-d348472f9b2c"
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "$ref": "#/components/schemas/result"
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/results/{result_id}/route_sections": {
      "get": {
        "summary": "Fetch RouteSection for the Result",
        "tags": [
          "Query"
        ],
        "description": "Fetch RouteSection for the Result",
        "operationId": "getRouteSections",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "result_id",
            "in": "path",
            "description": "Result ID of the RouteSections",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "0ec1c794-b317-490f-a124-a0a7deb6f82d",
                      "type": "routeSection",
                      "attributes": {
                        "id": "0ec1c794-b317-490f-a124-a0a7deb6f82d",
                        "service": "standard",
                        "carrier": "Carrier - 23",
                        "carrierLogo": "http://localhost:3000/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBbk1lIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--796ef6fab3ec82d7ddbf014db1a8555f8cd6dfee/test-image.jpg",
                        "modeOfTransport": "ocean",
                        "transshipment": null,
                        "transitTime": null,
                        "origin": {
                          "locode": "DEHAM",
                          "city": "",
                          "coordinates": "POINT (11.854048 57.694253)",
                          "address": "Hamburg"
                        },
                        "destination": {
                          "locode": "DEHAM",
                          "city": "",
                          "coordinates": "POINT (11.854048 57.694253)",
                          "address": "Hamburg"
                        }
                      }
                    }
                  ],
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "attributes": {
                            "$ref": "#/components/schemas/routeSection"
                          }
                        },
                        "required": [
                          "attributes"
                        ]
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/quotations/{quotation_id}/schedules/{id}": {
      "get": {
        "summary": "Fetch available schedules",
        "tags": [
          "Quote"
        ],
        "description": "Fetch available schedules",
        "operationId": "getSchedule",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quotation_id",
            "in": "path",
            "description": "The quotation ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The quotation ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "804",
                      "type": "trip",
                      "attributes": {
                        "closing": "2021-12-16",
                        "start": "2021-12-20",
                        "end": "2022-01-19",
                        "service": "slowly",
                        "carrier": "Hapag Lloyd",
                        "vessel": null,
                        "voyageCode": null,
                        "tenderId": "71d76a99-2c84-4ee3-94ba-526be85e470c"
                      }
                    },
                    {
                      "id": "805",
                      "type": "trip",
                      "attributes": {
                        "closing": "2021-12-21",
                        "start": "2021-12-25",
                        "end": "2022-01-24",
                        "service": "slowly",
                        "carrier": "Hapag Lloyd",
                        "vessel": null,
                        "voyageCode": null,
                        "tenderId": "71d76a99-2c84-4ee3-94ba-526be85e470c"
                      }
                    }
                  ],
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "carrier": {
                                "type": "string"
                              },
                              "closing": {
                                "type": "string"
                              },
                              "end": {
                                "type": "string"
                              },
                              "service": {
                                "type": "string"
                              },
                              "start": {
                                "type": "string"
                              },
                              "tenderId": {
                                "type": "string"
                              },
                              "vessel": {
                                "type": "string",
                                "nullable": true
                              },
                              "voyageCode": {
                                "type": "string",
                                "nullable": true
                              }
                            },
                            "required": [
                              "carrier",
                              "closing",
                              "end",
                              "service",
                              "start",
                              "tenderId",
                              "vessel",
                              "voyageCode"
                            ]
                          }
                        },
                        "required": [
                          "id",
                          "type",
                          "attributes"
                        ]
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/itineraries/{id}/schedules/enabled": {
      "get": {
        "summary": "Fetch status of schedules",
        "tags": [
          "Quote"
        ],
        "description": "Fetch status of schedules",
        "operationId": "getScheduleEnabled",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The itinerary ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "enabled": false
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "enabled": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "enabled"
                      ]
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/results/{result_id}/schedules": {
      "get": {
        "summary": "Fetch schedules for a given result",
        "tags": [
          "Schedule"
        ],
        "description": "Fetch all valid schedules for result",
        "operationId": "getSchedules",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "result_id",
            "in": "path",
            "description": "The result ID for which the schedules are to be fetched",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [

                  ],
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/schedule"
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/results/{result_id}/schedules/{id}": {
      "get": {
        "summary": "Fetch schedule the given schedule id",
        "tags": [
          "Schedule"
        ],
        "description": "Fetch all valid schedules for result",
        "operationId": "getSchedule",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "result_id",
            "in": "path",
            "description": "The result ID for which the schedules are to be fetched",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The existing schedule",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "0707406e-4311-4784-8141-742a8e0dc400",
                    "type": "schedule",
                    "attributes": {
                      "id": "0707406e-4311-4784-8141-742a8e0dc400",
                      "vesselName": "saco",
                      "vesselCode": "ab123",
                      "voyageCode": "12345",
                      "origin": "20457, hamburg",
                      "destination": "shanghai airport",
                      "destinationArrival": "2022-01-05T00:00:00.000Z",
                      "originDeparture": "2021-12-16T00:00:00.000Z",
                      "closingDate": "2021-12-16T00:00:00.000Z",
                      "carrier": "msc",
                      "service": "standard",
                      "modeOfTransport": "ocean",
                      "transitTime": 20
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "items": {
                        "$ref": "#/components/schemas/schedule"
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/scope": {
      "get": {
        "summary": "Fetch Scope for the Organization",
        "tags": [
          "Scope"
        ],
        "description": "Fetch Scope for the Organization",
        "operationId": "getScope",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "ad6addc8-0b39-436f-a6e8-24edae687841",
                    "type": "scope",
                    "attributes": {
                      "links": {
                        "about": "",
                        "terms": "",
                        "legal": "",
                        "privacy": ""
                      },
                      "id": "c324fa88-6c87-4c40-ae53-8df8b0d6c194",
                      "authMethods": [
                        "password"
                      ],
                      "loginSamlText": "",
                      "loginMandatory": false
                    }
                  },
                  "links": {
                    "about": "",
                    "terms": "",
                    "legal": "",
                    "privacy": ""
                  },
                  "meta": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/scope"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/me/settings": {
      "get": {
        "summary": "Fetch user settings",
        "tags": [
          "Users"
        ],
        "description": "Fetch current settings for the current user. Settings contains information about user's preferred language and\nlocale.\n",
        "operationId": "getSettings",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "b72f8d98-bc7b-455d-af77-da3306616d67",
                    "type": "setting",
                    "attributes": {
                      "language": "en-GB",
                      "locale": "en-GB"
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/settings"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Invalid Credentials"
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/shipment_requests": {
      "get": {
        "summary": "Fetch all shipment requests for a client",
        "tags": [
          "ShipmentRequests"
        ],
        "description": "Fetch all shipment requests",
        "operationId": "getShipmentRequests",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "The attribute by which to sort the Shipment Requests",
            "enum": [
              "created_at"
            ],
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "direction",
            "in": "query",
            "description": "The defining whether the sorting is ascending or descending",
            "enum": [
              "asc",
              "desc"
            ],
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page of Shipment Requests requested",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "perPage",
            "in": "query",
            "description": "The number of Shipment Requests requested per page",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "1a85491e-daeb-4117-9a5d-58d9e84afa61",
                      "type": "shipmentRequestIndex",
                      "attributes": {
                        "resultId": "ba65a220-e597-4c27-a4c0-13aad0176223",
                        "companyId": "781fc754-1617-4070-96ef-9090765dcc0e",
                        "clientId": "a81f7785-ed7f-4863-80a5-edc850c10092",
                        "withInsurance": false,
                        "withCustomsHandling": false,
                        "status": "Requested",
                        "preferredVoyage": "1234",
                        "notes": "",
                        "originHub": "Hamburg",
                        "destinationHub": "Hamburg",
                        "originPickup": null,
                        "destinationDropoff": null,
                        "requestedAt": "2021-12-15T13:54:20.155Z",
                        "reference": "REFERENCE-139"
                      }
                    }
                  ],
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/shipment_request_index"
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/shipment_requests/{shipment_request_id}": {
      "get": {
        "summary": "Fetch a shipment request",
        "tags": [
          "ShipmentRequests"
        ],
        "description": "Fetch a specific shipment request",
        "operationId": "getShipmentRequesrt",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shipment_request_id",
            "in": "path",
            "description": "The shipment request ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "edced2ac-6663-4eec-bcb9-61baf7caf186",
                    "type": "shipmentRequest",
                    "attributes": {
                      "resultId": "4fe695d9-407c-4e84-b94d-197d06f45240",
                      "companyId": "3c9c91de-e9f7-4204-9c67-694ee41f41dd",
                      "clientId": "a7861c63-000b-48a1-a3fc-26400ca84db3",
                      "withInsurance": false,
                      "withCustomsHandling": false,
                      "status": "requested",
                      "preferredVoyage": "1234",
                      "notes": "",
                      "commercialValue": {
                        "value": 10,
                        "currency": "eur"
                      }
                    },
                    "relationships": {
                      "contacts": {
                        "data": [
                          {
                            "id": "eb63fecf-273e-4b87-ab20-e5539adac801",
                            "type": "contact"
                          }
                        ]
                      },
                      "documents": {
                        "data": [
                          {
                            "id": "d9d54729-78fa-410e-8ef7-dfad78ef5b2c",
                            "type": "document"
                          }
                        ]
                      }
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "attributes": {
                          "$ref": "#/components/schemas/shipment_request"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "not found operation",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "message": "Couldn't find Journey::ShipmentRequest with 'id'=non-existent-id",
                  "status": "not_found",
                  "code": 404
                }
              }
            }
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/results/{result_id}/shipment_requests": {
      "post": {
        "summary": "Create a shipment request",
        "tags": [
          "ShipmentRequests"
        ],
        "description": "Create a shipment request",
        "operationId": "createShipmentRequest",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "result_id",
            "in": "path",
            "description": "The ID of the Result you wish to create ShipmentRequest from",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "a0247f63-c1b3-4e3e-b0a8-e19e6103cf77",
                    "type": "shipmentRequest",
                    "attributes": {
                      "resultId": "61f239df-de86-4c40-9ab5-a59adfe6b20f",
                      "companyId": "7aa95515-2ae6-47b5-846e-d1b78ea1faaf",
                      "clientId": "52794d1e-d379-4432-8cb4-1294b57b7912",
                      "withInsurance": false,
                      "withCustomsHandling": false,
                      "status": "requested",
                      "preferredVoyage": "1234",
                      "notes": "Some notes",
                      "commercialValue": {
                        "value": 10,
                        "currency": "eur"
                      }
                    },
                    "relationships": {
                      "contacts": {
                        "data": [
                          {
                            "id": "75a94271-a6d1-4f75-a815-98b670292a69",
                            "type": "contact"
                          }
                        ]
                      },
                      "documents": {
                        "data": [

                        ]
                      }
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "attributes": {
                          "$ref": "#/components/schemas/shipment_request"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "shipmentRequest": {
                    "$ref": "#/components/schemas/shipment_request_params"
                  },
                  "commodityInfos": {
                    "type": "array",
                    "description": "Commodity infos",
                    "items": {
                      "$ref": "#/components/schemas/commodityInfo"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/trucking_availabilities": {
      "get": {
        "summary": "Fetch Available Truckings",
        "tags": [
          "Quote"
        ],
        "description": "Fetch Available Truckings",
        "operationId": "getTruckingAvailabilities",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lat",
            "in": "query",
            "description": "Latitude",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lng",
            "in": "query",
            "description": "Longitude",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "load_type",
            "in": "query",
            "description": "Load type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organization_id",
            "in": "query",
            "description": "Organiztio nID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "client",
            "in": "query",
            "description": "The client id of the query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "target",
            "in": "query",
            "description": "Target",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "truckTypes": [
                    "default"
                  ],
                  "truckingAvailable": true
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "truckTypes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "truckingAvailable": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "truckTypes",
                    "truckingAvailable"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/trucking_counterparts": {
      "get": {
        "summary": "Fetch counterparts fgor trucking",
        "tags": [
          "Quote"
        ],
        "description": "Fetch counterparts fgor trucking",
        "operationId": "getTruckingCounterparts",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lat",
            "in": "query",
            "description": "Latitude",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lng",
            "in": "query",
            "description": "Longitude",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "load_type",
            "in": "query",
            "description": "Load type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organization_id",
            "in": "query",
            "description": "Organization ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "client",
            "in": "query",
            "description": "The client id of the query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "target",
            "in": "query",
            "description": "Target",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "countryCodes": [

                  ],
                  "truckTypes": [

                  ],
                  "truckingAvailable": false
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "countryCodes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "truckTypes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "truckingAvailable": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "countryCodes",
                    "truckTypes",
                    "truckingAvailable"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/trucking_countries": {
      "get": {
        "summary": "Fetch enabled countries for organization",
        "tags": [
          "Trucking"
        ],
        "description": "Fetch enabled countries for organization",
        "operationId": "getTruckingCountries",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "load_type",
            "in": "query",
            "description": "Load Type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "location_type",
            "in": "query",
            "description": "Location Type",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "1215",
                      "type": "country",
                      "attributes": {
                        "name": "Sweden",
                        "code": "SE",
                        "flag": "https://restcountries.eu/data/sek.svg"
                      }
                    }
                  ],
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/country"
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Invalid Credentials"
          }
        }
      }
    },
    "/v1/uploads": {
      "post": {
        "summary": "Create a new upload",
        "tags": [
          "Uploads (V1)"
        ],
        "description": "Create a new upload",
        "operationId": "createUpload",
        "security": [
          {
            "bearerAuth": [

            ]
          }
        ],
        "parameters": [

        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "example": {
                  "message": "File created."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request",
            "content": {
              "application/json": {
                "example": {
                  "message": "Unauthorized Request"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "message": "param is missing or the value is empty: json_data",
                  "status": "bad_request",
                  "code": 400
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "jsonData": {
                    "type": "string",
                    "description": "Provide the data to upload as `application/json`. Serialize the payload as a value for the key `jsonData` (case invariant). Example cURL request:\n```\ncurl --location --request POST 'https://api.itsmycargo.com/v1/uploads' \\\n   --header 'Authorization: Bearer aa0c9a1d-7b50-4c14-ba8e-21a329877ddd' \\\n   --header 'Content-Type: application/json' \\\n   --data-raw '{\n   \"jsonData\": \"{\\\"foo\\\":123}\"\n   }'\n```"
                  }
                }
              }
            }
          },
          "required": true
        }
      }
    },
    "/v2/organizations/{organization_id}/uploads": {
      "post": {
        "summary": "Create a new upload",
        "tags": [
          "Uploads (V2)"
        ],
        "description": "Create a new upload",
        "operationId": "createUpload",
        "security": [
          {
            "bearerAuth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "27b2912c-2f93-4b2a-b132-4a984a60a060",
                    "type": "uploads",
                    "relationships": {
                      "file": {
                        "data": {
                          "id": "ac1dedff-fa4a-47c6-a42b-eb31a960769c",
                          "type": "file"
                        }
                      }
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "description": "Provide the data as a downloadable url under the `file` parameter."
                  }
                }
              }
            }
          },
          "required": true
        }
      }
    },
    "/v2/organizations/{organization_id}/uploads/{id}": {
      "get": {
        "summary": "Fetch Upload",
        "tags": [
          "Uploads (V2)"
        ],
        "description": "Fetch Upload",
        "operationId": "getQuery",
        "security": [
          {
            "bearerAuth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Upload ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "id": "04238899-8459-4e1f-9073-970a2838a72e",
                  "organization_id": "5c85bec4-126f-4d15-a9c1-e2065c2e59ff",
                  "file_id": "7314080f-e19c-42eb-9935-b5775446c158",
                  "user_id": "1bbbe11f-d15b-440f-a681-4522e19ca67d",
                  "status": "not_started",
                  "last_job_id": "63546232-fc34-438e-afd1-fe5c33896931",
                  "created_at": "2021-12-15T13:54:28.370Z",
                  "updated_at": "2021-12-15T13:54:28.370Z"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request"
          }
        }
      }
    },
    "/v1/me": {
      "get": {
        "summary": "Fetch information of current user",
        "tags": [
          "Users"
        ],
        "description": "Fetch information of current user",
        "operationId": "getCurrentUser",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "269c3487-28f8-4605-acde-93521567abe7",
                    "type": "user",
                    "attributes": {
                      "email": "john.doe.63@itsmycargo.test",
                      "organizationId": "413cc005-f0c8-41a6-98b3-730cd0efd7f7",
                      "firstName": "Guest",
                      "lastName": "User 63",
                      "phone": "081 9847079",
                      "companyName": "Guest Company 63",
                      "role": null
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "attributes": {
                          "type": "object",
                          "properties": {
                            "email": {
                              "type": "string",
                              "description": "User's primary email address. This is\n                             validated address that can be used for reaching out."
                            },
                            "organizationId": {
                              "description": "If current user is client, this is the\n                             organization user account is linked with.",
                              "type": "string",
                              "nullable": true
                            },
                            "firstName": {
                              "description": "User's first name, usually given name.",
                              "type": "string"
                            },
                            "lastName": {
                              "description": "User's last name, usually family name.",
                              "type": "string"
                            },
                            "phone": {
                              "description": "User's phone number if given. This generic\n                             information that is not validated or structured.",
                              "type": "string",
                              "nullable": true
                            },
                            "companyName": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "email",
                            "organizationId",
                            "firstName",
                            "lastName",
                            "phone",
                            "companyName"
                          ]
                        }
                      },
                      "required": [
                        "id",
                        "type",
                        "attributes"
                      ]
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Invalid Credentials"
          }
        }
      }
    },
    "/v2/users/validate": {
      "get": {
        "summary": "Validate user for the specified email",
        "tags": [
          "Users"
        ],
        "description": "Verify user for the email",
        "operationId": "verify_user",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "description": "email of the users_user",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "d4a53002-0bf8-44a4-aded-94454ca18ea1",
                    "type": "user",
                    "attributes": {
                      "id": "d4a53002-0bf8-44a4-aded-94454ca18ea1",
                      "firstName": "Guest",
                      "authMethods": [
                        "password"
                      ],
                      "samlIntegrations": [

                      ]
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "attributes": {
                          "type": "object",
                          "properties": {
                            "firstName": {
                              "description": "User's first name, usually given name.",
                              "type": "string"
                            },
                            "authMethods": {
                              "description": "auth methods for users",
                              "type": "array"
                            },
                            "samlIntegrations": {
                              "description": "information required to support SAML workflow from frontend such button and redirection url",
                              "type": "array"
                            }
                          },
                          "required": [
                            "firstName",
                            "authMethods",
                            "samlIntegrations"
                          ]
                        }
                      },
                      "required": [
                        "id",
                        "type",
                        "attributes"
                      ]
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    }
  }
}