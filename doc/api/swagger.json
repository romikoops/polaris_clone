{
  "openapi": "3.0.1",
  "info": {
    "title": "Polaris API",
    "description": "ItsMyCargo Backend API",
    "termsOfService": "https://www.itsmycargo.com/terms",
    "contact": {
      "name": "API Support",
      "url": "https://support.itsmycargo.com",
      "email": "support@itsmycargo.com"
    },
    "version": "2021-08-12"
  },
  "tags": [
    {
      "name": "Ahoy",
      "description": "Ahoy"
    },
    {
      "name": "Authentication",
      "description": "Endpoints related to the current user and authentication."
    },
    {
      "name": "CargoUnits",
      "description": "CargoUnits"
    },
    {
      "name": "Clients",
      "description": "Clients"
    },
    {
      "name": "Dashboard",
      "description": "Dashboard"
    },
    {
      "name": "Groups",
      "description": "Groups"
    },
    {
      "name": "Query",
      "description": "Query"
    },
    {
      "name": "Quote",
      "description": "Quote"
    },
    {
      "name": "Results",
      "description": "Results"
    },
    {
      "name": "Trucking",
      "description": "Trucking"
    },
    {
      "name": "Users",
      "description": "Users"
    }
  ],
  "components": {
    "schemas": {
      "errors": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "object",
            "properties": {
              "message": {
                "description": "error message",
                "type": "string"
              }
            },
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      "cargo_item_type": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the given cargo item type",
            "type": "string"
          },
          "type": {
            "description": "Generic type of the cargo item",
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "width": {
                "description": "Width of the given cargo item type",
                "type": "string",
                "nullable": true,
                "deprecated": true
              },
              "length": {
                "description": "Length of the given cargo item type",
                "type": "string",
                "nullable": true,
                "deprecated": true
              },
              "description": {
                "description": "Descriptive information of the cargo item type",
                "type": "string"
              }
            },
            "required": [
              "width",
              "length"
            ]
          }
        },
        "required": [
          "id",
          "type",
          "attributes"
        ]
      },
      "carrier": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the given Carrier",
            "type": "string"
          },
          "type": {
            "description": "Generic type of the Carrier",
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "id": {
                "description": "The ID of the Carrier record",
                "type": "string"
              },
              "name": {
                "description": "The Carrier's name",
                "type": "string"
              },
              "code": {
                "description": "The Carrier's code. Preferably SCAC or IATA but customs code are allowed.",
                "type": "string"
              },
              "logo": {
                "description": "URL for accesing the logo of the Carrier",
                "type": "string",
                "nullable": true
              }
            },
            "required": [
              "id",
              "name",
              "code",
              "logo"
            ]
          }
        },
        "required": [
          "id",
          "type",
          "attributes"
        ]
      },
      "client": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "company_name": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "house_number": {
            "type": "string"
          },
          "street": {
            "type": "string"
          },
          "postal_code": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "group_id": {
            "type": "string"
          }
        },
        "required": [
          "email",
          "first_name",
          "last_name",
          "company_name",
          "phone",
          "house_number",
          "street",
          "postal_code",
          "country",
          "group_id"
        ]
      },
      "charge": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Charge ID",
            "type": "string"
          },
          "lineItemId": {
            "description": "Line Item",
            "type": "string"
          },
          "tenderId": {
            "description": "Tender",
            "type": "string"
          },
          "chargeCategoryId": {
            "description": "Category of the charge",
            "type": "integer"
          },
          "description": {
            "description": "Description",
            "type": "string"
          },
          "value": {
            "$ref": "#/components/schemas/money"
          },
          "originalValue": {
            "$ref": "#/components/schemas/money"
          },
          "order": {
            "description": "Order of the charges",
            "type": "integer"
          },
          "section": {
            "description": "Section of charge",
            "type": "string"
          },
          "level": {
            "description": "Nesting level",
            "type": "integer"
          }
        },
        "required": [
          "id",
          "lineItemId",
          "tenderId",
          "chargeCategoryId",
          "description",
          "value",
          "originalValue",
          "order",
          "section",
          "level"
        ]
      },
      "commodityInfo": {
        "type": "object",
        "properties": {
          "imo_class": {
            "type": "string",
            "enum": [
              "0",
              "1",
              "1.1",
              "1.2",
              "1.3",
              "1.4",
              "1.5",
              "1.6",
              "2",
              "2.1",
              "2.2",
              "2.3",
              "3",
              "4",
              "4.1",
              "4.2",
              "4.3",
              "5",
              "5.1",
              "5.2",
              "6",
              "6.1",
              "6.2",
              "7",
              "7.1",
              "7.2",
              "7.3",
              "7.4",
              "8",
              "9"
            ],
            "nullable": true,
            "description": "Defines the standard IMO class for the dangerous goods that this cargo item might contain. IMO Class is defined as Class and possible sub-class, where class defines top-level category of type of dangerous goods, and sub-class defines more detailed separation of different dangerous goods.\n\nTo see list of possible classes and sub-classes, please see for example https://www.searates.com/reference/imo/\n\nIf dangerous goods category is unknown, please use `0.0` as IMO class, which is used internally for unknown dangerous goods class but known that it is dangerous goods.\nIf cargo item contains no dangerous goods, set this field as `null`.\n"
          },
          "description": {
            "type": "string",
            "description": "The description of the IMO Class/ HSCode chosen"
          },
          "hs_code": {
            "type": "string",
            "nullable": true,
            "description": "The Harmonized Commodity Description and Coding System, also known as the Harmonized System of tariff nomenclature is an internationally standardized system of names and numbers to classify traded products.\nThis code is is used to identify the type of cargo being shipped as it can affect the pricing and routes available\n"
          }
        },
        "required": [
          "id",
          "hs_code",
          "imo_class"
        ]
      },
      "country": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Country ID",
            "type": "string"
          },
          "type": {
            "description": "Country Type",
            "type": "string"
          },
          "attributes": {
            "description": "Country Attributes",
            "type": "object",
            "properties": {
              "name": {
                "description": "Name of the country",
                "type": "string"
              },
              "code": {
                "description": "Country code",
                "type": "string"
              },
              "flag": {
                "description": "Flag of the country",
                "type": "string"
              }
            },
            "required": [
              "name",
              "code",
              "flag"
            ]
          }
        },
        "required": [
          "id",
          "type",
          "attributes"
        ]
      },
      "group": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Group ID",
            "type": "string"
          },
          "type": {
            "description": "Type of group",
            "type": "string"
          },
          "attributes": {
            "description": "Attributes of group",
            "type": "object",
            "properties": {
              "id": {
                "description": "ID of attributes",
                "type": "string"
              },
              "name": {
                "description": "Name of the group",
                "type": "string"
              }
            },
            "required": [
              "id",
              "name"
            ]
          }
        },
        "required": [
          "id",
          "type",
          "attributes"
        ]
      },
      "item": {
        "type": "object",
        "properties": {
          "cargoClass": {
            "description": "Cargo classification code",
            "type": "string",
            "enum": [
              "lcl",
              "aggregated_lcl",
              "fcl_10",
              "fcl_20",
              "fcl_20_ot",
              "fcl_20_rf",
              "fcl_20_frs",
              "fcl_20_frw",
              "fcl_40",
              "fcl_40_hq",
              "fcl_40_ot",
              "fcl_40_rf",
              "fcl_40_hq_rf",
              "fcl_40_frs",
              "fcl_40_frw",
              "fcl_45",
              "fcl_45_hq",
              "fcl_45_rf"
            ]
          },
          "stackable": {
            "description": "If cargo item is stackable or not",
            "type": "boolean"
          },
          "quantity": {
            "description": "Quantity",
            "type": "integer"
          },
          "length": {
            "description": "Length of the item expressed as a decimal on the centimeter (cm) scale",
            "type": "number"
          },
          "width": {
            "description": "Width of the item expressed as a decimal on the centimeter (cm) scale",
            "type": "number"
          },
          "height": {
            "description": "Height of the item expressed as a decimal on the centimeter (cm) scale",
            "type": "number"
          },
          "weight": {
            "description": "Weight of the item expressed as a decimal on the kilogram (kg) scale",
            "type": "number"
          },
          "volume": {
            "description": "Volume of the item expressed as a decimal on the cubic meter (m3) scale",
            "type": "number"
          },
          "commodities": {
            "description": "Commodity codes of the contents",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commodityInfo"
            }
          }
        },
        "required": [
          "stackable",
          "colliType",
          "quantity",
          "length",
          "width",
          "height",
          "weight",
          "commodities"
        ]
      },
      "item_lcl": {
        "type": "object",
        "properties": {
          "cargoClass": {
            "description": "Cargo classification code",
            "type": "string",
            "enum": [
              "lcl"
            ]
          },
          "stackable": {
            "description": "If cargo item is stackable or not",
            "type": "boolean"
          },
          "colliType": {
            "description": "Colli Type: The type of container the items are packed in. One of a preset list",
            "type": "string",
            "enum": [
              "container",
              "barrel",
              "bottle",
              "carton",
              "case",
              "crate",
              "drum",
              "package",
              "pallet",
              "roll",
              "skid",
              "stack",
              "room_temp_reefer",
              "low_temp_reefer"
            ]
          },
          "quantity": {
            "description": "Quantity",
            "type": "integer"
          },
          "length": {
            "description": "Length of the item expressed as a decimal on the centimeter (cm) scale",
            "type": "number"
          },
          "width": {
            "description": "Width of the item expressed as a decimal on the centimeter (cm) scale",
            "type": "number"
          },
          "height": {
            "description": "Height of the item expressed as a decimal on the centimeter (cm) scale",
            "type": "number"
          },
          "weight": {
            "description": "Weight of the item expressed as a decimal on the kilogram (kg) scale",
            "type": "number"
          },
          "commodities": {
            "description": "Commodity codes of the contents",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commodityInfo"
            }
          }
        },
        "required": [
          "stackable",
          "colliType",
          "quantity",
          "length",
          "width",
          "height",
          "weight",
          "commodities",
          "cargoClass"
        ]
      },
      "item_aggregated_lcl": {
        "type": "object",
        "properties": {
          "cargoClass": {
            "description": "Cargo classification code",
            "type": "string",
            "enum": [
              "aggregated_lcl"
            ]
          },
          "stackable": {
            "description": "Aggregated Cargo Item's are always stackable so this property is not required",
            "type": "boolean",
            "nullable": true
          },
          "quantity": {
            "description": "Aggregated Cargo Item's have no defined quantity so this property is null",
            "type": "integer",
            "nullable": true
          },
          "length": {
            "description": "Aggregated Cargo Item's have no defined length so this property is null",
            "type": "number",
            "nullable": true
          },
          "width": {
            "description": "Aggregated Cargo Item's have no defined width so this property is null",
            "type": "number",
            "nullable": true
          },
          "height": {
            "description": "Aggregated Cargo Item's have no defined height so this property is null",
            "type": "number",
            "nullable": true
          },
          "weight": {
            "description": "Weight of the item expressed as a decimal on the kilogram (kg) scale",
            "type": "number"
          },
          "volume": {
            "description": "Volume of the item expressed as a decimal on the cubic meter (m3) scale",
            "type": "number"
          },
          "commodities": {
            "description": "Commodity codes of the contents",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commodityInfo"
            }
          }
        },
        "required": [
          "volume",
          "weight",
          "commodities",
          "cargoClass"
        ]
      },
      "item_fcl": {
        "type": "object",
        "properties": {
          "cargoClass": {
            "description": "Container classification code",
            "type": "string",
            "enum": [
              "fcl_10",
              "fcl_20",
              "fcl_20_ot",
              "fcl_20_rf",
              "fcl_20_frs",
              "fcl_20_frw",
              "fcl_40",
              "fcl_40_hq",
              "fcl_40_ot",
              "fcl_40_rf",
              "fcl_40_hq_rf",
              "fcl_40_frs",
              "fcl_40_frw",
              "fcl_45",
              "fcl_45_hq",
              "fcl_45_rf"
            ]
          },
          "stackable": {
            "description": "If cargo item is stackable or not: N/A for FCL",
            "type": "boolean"
          },
          "quantity": {
            "description": "Quantity",
            "type": "integer"
          },
          "length": {
            "description": "Containers have no defined length so this property is null",
            "type": "integer",
            "nullable": true
          },
          "width": {
            "description": "Containers have no defined width so this property is null",
            "type": "integer",
            "nullable": true
          },
          "height": {
            "description": "Containers have no defined height so this property is null",
            "type": "integer",
            "nullable": true
          },
          "weight": {
            "description": "Weight of the item expressed as a decimal on the kilogram (kg) scale",
            "type": "integer"
          },
          "volume": {
            "description": "Containers have no defined dimensions so this property is null",
            "type": "integer"
          },
          "commodities": {
            "description": "Commodity codes of the contents",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commodityInfo"
            }
          }
        },
        "required": [
          "stackable",
          "colliType",
          "quantity",
          "weight",
          "commodities",
          "cargoClass"
        ]
      },
      "item_response": {
        "type": "object",
        "properties": {
          "attributes": {
            "type": "object",
            "properties": {
              "cargoClass": {
                "description": "Cargo classification code",
                "type": "string",
                "enum": [
                  "lcl",
                  "aggregated_lcl",
                  "fcl_10",
                  "fcl_20",
                  "fcl_20_ot",
                  "fcl_20_rf",
                  "fcl_20_frs",
                  "fcl_20_frw",
                  "fcl_40",
                  "fcl_40_hq",
                  "fcl_40_ot",
                  "fcl_40_rf",
                  "fcl_40_hq_rf",
                  "fcl_40_frs",
                  "fcl_40_frw",
                  "fcl_45",
                  "fcl_45_hq",
                  "fcl_45_rf"
                ]
              },
              "stackable": {
                "description": "If cargo item is stackable or not",
                "type": "boolean"
              },
              "quantity": {
                "description": "Quantity",
                "type": "integer"
              },
              "length": {
                "description": "Length of the item expressed as a decimal on the centimeter (cm) scale",
                "type": "number"
              },
              "width": {
                "description": "Width of the item expressed as a decimal on the centimeter (cm) scale",
                "type": "number"
              },
              "height": {
                "description": "Height of the item expressed as a decimal on the centimeter (cm) scale",
                "type": "number"
              },
              "weight": {
                "description": "Weight of the item expressed as a decimal on the kilogram (kg) scale",
                "type": "number"
              },
              "volume": {
                "description": "Volume of the item expressed as a decimal on the cubic meter (m3) scale",
                "type": "number"
              },
              "commodities": {
                "description": "Commodity codes of the contents",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/commodityInfo"
                }
              }
            },
            "required": [
              "stackable",
              "colliType",
              "quantity",
              "length",
              "width",
              "height",
              "weight",
              "commodities"
            ]
          }
        },
        "required": [
          "attributes"
        ]
      },
      "v1CargoItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID of the Cargo Item"
          },
          "cargo_class": {
            "type": "string",
            "description": "Cargo Class of the Cargo Item. Must be `lcl`"
          },
          "cargo_item_type_id": {
            "type": "string",
            "description": "ID of the CargoItemType - repesenting the Colli Type"
          },
          "contents": {
            "type": "string",
            "description": "String desccribin the Items contents",
            "nullable": true
          },
          "dangerous_goods": {
            "type": "boolean",
            "description": "Whether or not the Cargoitem contains dangerous goods"
          },
          "width": {
            "type": "number",
            "description": "The width of the item in cm"
          },
          "length": {
            "type": "number",
            "description": "The length of the item in cm"
          },
          "height": {
            "type": "number",
            "description": "The height of the item in cm"
          },
          "payload_in_kg": {
            "type": "number",
            "description": "The individual weight of each item in kg"
          },
          "quantity": {
            "type": "number",
            "description": "The number of identical items in the group"
          },
          "stackable": {
            "type": "boolean",
            "description": "Whether these items can be stacked"
          },
          "total_volume": {
            "type": "number",
            "description": "The total volume of all items in the group in cubic meters"
          },
          "total_weight": {
            "type": "number",
            "description": "The total weight of the group in kg."
          }
        }
      },
      "v1Container": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the Container"
          },
          "cargo_class": {
            "type": "string",
            "description": "The Cargo Class of the Container",
            "enum": [
              "fcl_10",
              "fcl_20",
              "fcl_20_ot",
              "fcl_20_rf",
              "fcl_20_frs",
              "fcl_20_frw",
              "fcl_40",
              "fcl_40_hq",
              "fcl_40_ot",
              "fcl_40_rf",
              "fcl_40_hq_rf",
              "fcl_40_frs",
              "fcl_40_frw",
              "fcl_45",
              "fcl_45_hq",
              "fcl_45_rf"
            ]
          },
          "contents": {
            "type": "string",
            "description": "A string describing the contents of the Container",
            "nullable": true
          },
          "dangerous_goods": {
            "type": "boolean",
            "description": "Whether or not the Container holds any dangerous goods"
          },
          "payload_in_kg": {
            "type": "number",
            "description": "The weight of the payload per container in kg"
          },
          "quantity": {
            "type": "number",
            "description": "The number of containers in the group"
          },
          "size_class": {
            "type": "string",
            "description": "Duplicate of Cargo Class: Deprecated",
            "deprecated": true
          }
        }
      },
      "v1ShipmentInfoContainers": {
        "type": "object",
        "properties": {
          "containers_attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1Container"
            }
          },
          "trucking_info": {
            "type": "object",
            "properties": {
              "pre_carriage": {
                "$ref": "#/components/schemas/v1TruckingInfo"
              },
              "on_carriage": {
                "$ref": "#/components/schemas/v1TruckingInfo"
              }
            }
          }
        },
        "required": [
          "containers_attributes",
          "trucking_info"
        ]
      },
      "v1ShipmentInfoCargoItems": {
        "type": "object",
        "properties": {
          "cargo_items_attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1CargoItem"
            }
          },
          "trucking_info": {
            "type": "object",
            "properties": {
              "pre_carriage": {
                "$ref": "#/components/schemas/v1TruckingInfo"
              },
              "on_carriage": {
                "$ref": "#/components/schemas/v1TruckingInfo"
              }
            }
          }
        },
        "required": [
          "cargo_items_attributes",
          "trucking_info"
        ]
      },
      "v1TruckingInfo": {
        "type": "object",
        "properties": {
          "truck_type": {
            "type": "string",
            "description": "Truck type desired for pre/on carriage"
          }
        },
        "nullable": true
      },
      "journeyError": {
        "type": "object",
        "properties": {
          "id": {
            "description": "ID",
            "type": "string"
          },
          "code": {
            "description": "Code",
            "type": "string"
          },
          "service": {
            "description": "Service",
            "type": "string"
          },
          "carrier": {
            "description": "Carrier",
            "type": "string"
          },
          "mode_of_transport": {
            "description": "MOT",
            "type": "string"
          },
          "property": {
            "description": "Property",
            "type": "string"
          },
          "value": {
            "description": "Value",
            "type": "string"
          },
          "limit": {
            "description": "Limit",
            "type": "string"
          }
        },
        "required": [
          "id"
        ]
      },
      "locationV1Nexus": {
        "type": "object",
        "properties": {
          "nexus_id": {
            "type": "integer",
            "description": "The unique identifier of the Location Nexus"
          }
        },
        "required": [
          "nexus_id"
        ]
      },
      "locationV1Trucking": {
        "type": "object",
        "properties": {
          "latitude": {
            "type": "string",
            "description": "The latitude of the Location"
          },
          "longitude": {
            "type": "string",
            "description": "The longitude of the Location"
          }
        },
        "required": [
          "latitude",
          "longitude"
        ]
      },
      "money": {
        "type": "object",
        "properties": {
          "amount": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ],
            "description": "Monetary amount in given currency"
          },
          "currency": {
            "type": "string",
            "description": "ISO 4217 code for currency"
          }
        },
        "required": [
          "amount",
          "currency"
        ]
      },
      "nexus": {
        "type": "object",
        "properties": {
          "id": {
            "description": "ID",
            "type": "string"
          },
          "type": {
            "description": "Type",
            "type": "string"
          },
          "attributes": {
            "description": "Attributes",
            "type": "object",
            "properties": {
              "id": {
                "description": "ID",
                "type": "number"
              },
              "name": {
                "description": "Name",
                "type": "string"
              },
              "latitude": {
                "description": "Latitude",
                "type": "number"
              },
              "longitude": {
                "description": "Longitude",
                "type": "number"
              },
              "modesOfTransport": {
                "description": "MOTs",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "countryName": {
                "description": "Country Name",
                "type": "string"
              }
            },
            "required": [
              "id",
              "name",
              "latitude",
              "longitude",
              "modesOfTransport",
              "countryName"
            ]
          }
        },
        "required": [
          "id",
          "type",
          "attributes"
        ]
      },
      "organization": {
        "type": "object",
        "properties": {
          "id": {
            "description": "ID",
            "type": "string"
          },
          "type": {
            "description": "Type",
            "type": "string"
          },
          "attributes": {
            "description": "Attributes of the organisation.",
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the organisation. Usually their legal business name."
              },
              "slug": {
                "type": "string",
                "description": "Short slug of the organisation that is unique for a single\norganisation. This is usually used as poart of the URL and must\nalways match generic domain requirements.\n"
              }
            },
            "required": [
              "name",
              "slug"
            ]
          }
        },
        "required": [
          "id",
          "type",
          "attributes"
        ]
      },
      "pagination": {
        "type": "object",
        "properties": {
          "page": {
            "description": "Current page",
            "type": "number"
          },
          "perPage": {
            "description": "Items per page",
            "type": "number"
          },
          "totalPages": {
            "description": "Total number of pages",
            "type": "number"
          }
        },
        "required": [
          "page",
          "perPage",
          "totalPages"
        ]
      },
      "paginationLinks": {
        "type": "object",
        "properties": {
          "first": {
            "description": "First page",
            "type": "string",
            "nullable": true
          },
          "prev": {
            "description": "Previous page",
            "type": "string",
            "nullable": true
          },
          "next": {
            "description": "Next page",
            "type": "string",
            "nullable": true
          },
          "last": {
            "description": "Last page",
            "type": "string",
            "nullable": true
          }
        }
      },
      "quotationTender": {
        "type": "object",
        "properties": {
          "data": {
            "description": "Data",
            "type": "object",
            "properties": {
              "id": {
                "description": "ID",
                "type": "string"
              },
              "type": {
                "description": "Type",
                "type": "string"
              },
              "attributes": {
                "description": "Attributes",
                "type": "object",
                "properties": {
                  "charges": {
                    "description": "Charges",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/charge"
                    }
                  },
                  "route": {
                    "description": "Route",
                    "type": "string"
                  },
                  "vessel": {
                    "description": "Vessel",
                    "type": "string"
                  },
                  "id": {
                    "description": "ID",
                    "type": "string"
                  },
                  "pickupTruckType": {
                    "description": "Truck type",
                    "type": "string"
                  },
                  "deliveryTruckType": {
                    "description": "Truck type",
                    "type": "string"
                  },
                  "pickupCarrier": {
                    "description": "Carrier",
                    "type": "string"
                  },
                  "deliveryCarrier": {
                    "description": "Carrier",
                    "type": "string"
                  },
                  "pickupService": {
                    "description": "Service",
                    "type": "string"
                  },
                  "deliveryService": {
                    "description": "Service",
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "route"
                ]
              }
            },
            "required": [
              "id",
              "type",
              "attributes"
            ]
          }
        }
      },
      "restfulResponse": {
        "type": "object",
        "properties": {
          "id": {
            "description": "ID",
            "type": "string"
          }
        }
      },
      "result": {
        "type": "object",
        "properties": {
          "id": {
            "description": "ID",
            "type": "string"
          },
          "carrier": {
            "description": "Name of the Carrier",
            "type": "string"
          },
          "modes_of_transport": {
            "description": "Main Modes of Transport for the route",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "total": {
            "description": "The total value of the Result",
            "schema": {
              "$ref": "#/components/schemas/money"
            }
          },
          "service_level": {
            "description": "Name of the main freight service level",
            "type": "string"
          },
          "valid_until": {
            "description": "Date until which this quote is valid",
            "type": "string"
          },
          "transit_time": {
            "description": "A figure denoting the number of days the journey will likely take",
            "type": "integer",
            "format": "int32"
          },
          "cargo_ready_date": {
            "description": "A date and time indicating after which the cargo will be ready for loading",
            "type": "string",
            "format": "date-time"
          },
          "cargo_delivery_date": {
            "description": "A date and time indicating by when the cargo needs to be delivered by",
            "type": "string",
            "format": "date-time"
          },
          "origin": {
            "description": "The full name of the start point of the quoted journey",
            "type": "string"
          },
          "destination": {
            "description": "The full name of the end point of the quoted journey",
            "type": "string"
          },
          "routing": {
            "description": "The ID of the RouteSection that carries this information",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/routingSection"
            }
          }
        }
      },
      "offer": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the Offer",
            "type": "string"
          }
        },
        "required": [
          "id"
        ]
      },
      "routingSection": {
        "type": "object",
        "description": "Details regarding the start, end, service and mode of transport of each section of the quoted Journey",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the RouteSection"
          },
          "service": {
            "type": "string",
            "description": "The service level of this part of the journey"
          },
          "carrier": {
            "type": "string",
            "description": "The Carrier operating the service on this part of the journey"
          },
          "mode_of_transport": {
            "type": "string",
            "description": "The mode of transport for the section of the journey."
          },
          "transit_time": {
            "description": "The time in days that this part of the journey will take.",
            "type": "integer",
            "format": "int32"
          },
          "origin": {
            "type": "object",
            "description": "The start point of this section",
            "properties": {
              "$ref": "#/components/schemas/resultDetailedRoutingLocation"
            }
          },
          "destination": {
            "type": "object",
            "description": "The end point of this section",
            "properties": {
              "$ref": "#/components/schemas/resultDetailedRoutingLocation"
            }
          }
        }
      },
      "resultDetailedRoutingLocation": {
        "type": "object",
        "description": "A object containing the address, locode and city of the location",
        "properties": {
          "address": {
            "type": "string",
            "description": "The city name or address of the location"
          },
          "locode": {
            "type": "string",
            "description": "The UN/LOCODE of the location",
            "nullable": true
          },
          "city": {
            "type": "string",
            "description": "The city name of the location. Will only differ from name if the location is an Address"
          }
        }
      },
      "settings": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the settings object",
            "type": "string"
          },
          "attributes": {
            "description": "Attributes",
            "type": "object",
            "properties": {
              "language": {
                "type": "string",
                "pattern": "[a-z]{2}-[A-Z]{2}",
                "description": "User's preferred language. Preferred language is given as language\nand country combination, allowing different dialects and languages\nfor each region.\n\nLanguage code is combined with language and country, separated by\ndash. First part of the code, language is the lower-case\ntwo-letter codes as defined by ISO-639-1. Second part is the\nupper-case two-letter codes as defined by ISO-3166-1.\n\nFor example:\n\n* `en-US` - English as spoken in United States of America\n* `en-GB` - English as spoken in United Kingdom and the Northern Ireland\n* `sv-FI` - Swedish as spoken in Finland\n"
              },
              "locale": {
                "type": "string",
                "pattern": "[a-z]{2}-[A-Z]{2}",
                "description": "User's preferred locale. Preferred locale defines how numbers and\ncurrencies, time et al. are displayed in the shop.\n\nLocale code is combined with language and country, separated by\ndash. First part of the code, language is the lower-case\ntwo-letter codes as defined by ISO-639-1. Second part is the\nupper-case two-letter codes as defined by ISO-3166-1.\n\nFor example:\n\n* `en-US` - English as spoken in United States of America\n* `en-GB` - English as spoken in United Kingdom and the Northern Ireland\n* `sv-FI` - Swedish as spoken in Finland\n"
              }
            }
          }
        }
      },
      "scope": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the offer",
            "type": "string"
          },
          "loginMandatory": {
            "type": "boolean",
            "description": "This boolean signals whether it is mandatory for a user to log in before they can access the quoting tool itself"
          },
          "links": {
            "type": "object",
            "properties": {
              "legal": {
                "type": "string",
                "description": "Link to any Legal notices the client wants to display",
                "nullable": true
              },
              "imprint": {
                "type": "string",
                "description": "Link to the 'Imprint' page of the client",
                "nullable": true
              },
              "about": {
                "type": "string",
                "description": "Link to the About Us page of the Clients website",
                "nullable": true
              },
              "privacy": {
                "type": "string",
                "description": "Link to the Client's Privacy Policy",
                "nullable": true
              },
              "terms": {
                "type": "string",
                "description": "Link to the Terms and Conditions the Client operates under",
                "nullable": true
              }
            }
          },
          "authMethods": {
            "type": "array",
            "description": "This contains the auth methods this Organization accepts",
            "schema": "string"
          },
          "loginSamlText": {
            "type": "string",
            "description": "Custom text to be displayed in the 'Log in Via SAML' button"
          }
        }
      },
      "user": {
        "type": "object",
        "properties": {
          "id": {
            "description": "ID",
            "type": "string"
          },
          "type": {
            "description": "Type",
            "type": "string"
          },
          "attributes": {
            "description": "Attributes",
            "type": "object",
            "properties": {
              "email": {
                "description": "Email",
                "type": "string"
              },
              "organizationId": {
                "description": "organization",
                "type": "string"
              },
              "firstName": {
                "description": "First Name",
                "type": "string"
              },
              "lastName": {
                "description": "Last Name",
                "type": "string"
              },
              "phone": {
                "description": "Phone",
                "type": "string",
                "nullable": true
              },
              "companyName": {
                "description": "Company",
                "type": "string"
              }
            },
            "required": [
              "email",
              "organizationId",
              "firstName",
              "lastName",
              "phone",
              "companyName"
            ]
          }
        },
        "required": [
          "id",
          "type",
          "attributes"
        ]
      },
      "profile": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the profile. Format of UUID.",
            "type": "string"
          },
          "attributes": {
            "description": "Attributes",
            "type": "object",
            "properties": {
              "email": {
                "description": "Email of the client",
                "type": "string"
              },
              "firstName": {
                "description": "First name of the user. This can be missing in case the user either does not have a first (given) name, or does not want it to be used.",
                "type": "string"
              },
              "lastName": {
                "description": "User's last or family name. In cases user only has one name, last name is used for identifying that.",
                "type": "string"
              },
              "password": {
                "description": "User's desired new password for their account",
                "type": "string"
              }
            },
            "required": [
              "email",
              "firstName",
              "lastName"
            ]
          }
        },
        "required": [
          "id",
          "type",
          "attributes"
        ]
      },
      "analyticsCount": {
        "type": "number",
        "nullable": true
      },
      "analyticsTotal": {
        "type": "object",
        "properties": {
          "symbol": {
            "description": "ISO Currency Code for the Total",
            "type": "string"
          },
          "value": {
            "description": "Value in the base unit (cents) of the Total",
            "type": "number"
          }
        }
      },
      "analyticsListCount": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "label": {
              "description": "Label for displaying the context of the result",
              "type": "string"
            },
            "count": {
              "description": "Value of the Analytic result",
              "type": "number"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "oauth": {
        "type": "oauth2",
        "description": "This API uses OAuth2 with the password grant flow.",
        "flows": {
          "password": {
            "tokenUrl": "/oauth/tokens",
            "refreshUrl": "/oauth/refresh",
            "scopes": {
              "public": "Public Access"
            }
          }
        }
      },
      "bearerAuth": {
        "type": "http",
        "description": "Some endpoints authorize via integration token",
        "scheme": "bearer"
      }
    }
  },
  "servers": [
    {
      "url": "https://{host}",
      "variables": {
        "host": {
          "default": "api.itsmycargo.com"
        }
      }
    }
  ],
  "paths": {
    "/v1/organizations/{organization_id}/ahoy": {
      "get": {
        "summary": "Fetch Settings",
        "tags": [
          "Ahoy"
        ],
        "description": "Fetch settings for Ahoy widget.",
        "operationId": "getAhoy",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "endpoint": "test_1.itsmycargo.test",
                  "modes_of_transport": {
                    "air": {
                      "fcl": false,
                      "lcl": true
                    },
                    "rail": {
                      "fcl": false,
                      "lcl": false
                    },
                    "ocean": {
                      "fcl": true,
                      "lcl": true
                    },
                    "truck": {
                      "fcl": false,
                      "lcl": false
                    }
                  },
                  "pre_carriage": true,
                  "on_carriage": true
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "endpoint": {
                      "description": "Endpoint url that Ahoy will redirect to start the booking process",
                      "type": "string"
                    },
                    "pre_carriage": {
                      "description": "Determines if pre-carriage is enabled",
                      "type": "boolean"
                    },
                    "on_carriage": {
                      "description": "Determines if on-carriage is enabled",
                      "type": "boolean"
                    },
                    "modes_of_transport": {
                      "description": "Supported modes of transports",
                      "type": "object",
                      "properties": {
                        "air": {
                          "description": "Supported cargo types for Air Cargo",
                          "type": "object",
                          "properties": {
                            "fcl": {
                              "description": "Determines if FCL is supported",
                              "type": "boolean"
                            },
                            "lcl": {
                              "description": "Determines if LCL is supported",
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "fcl",
                            "lcl"
                          ]
                        },
                        "rail": {
                          "description": "Supported cargo types for Rail Cargo",
                          "type": "object",
                          "properties": {
                            "fcl": {
                              "description": "Determines if FCL is supported",
                              "type": "boolean"
                            },
                            "lcl": {
                              "description": "Determines if LCL is supported",
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "fcl",
                            "lcl"
                          ]
                        },
                        "ocean": {
                          "description": "Supported cargo types for Ocean Cargo",
                          "type": "object",
                          "properties": {
                            "fcl": {
                              "description": "Determines if FCL is supported",
                              "type": "boolean"
                            },
                            "lcl": {
                              "description": "Determines if LCL is supported",
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "fcl",
                            "lcl"
                          ]
                        },
                        "truck": {
                          "description": "Supported cargo types for Trucking Cargo",
                          "type": "object",
                          "properties": {
                            "fcl": {
                              "description": "Determines if FCL is supported",
                              "type": "boolean"
                            },
                            "lcl": {
                              "description": "Determines if LCL is supported",
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "fcl",
                            "lcl"
                          ]
                        }
                      },
                      "required": [
                        "air",
                        "rail",
                        "ocean",
                        "truck"
                      ]
                    }
                  },
                  "required": [
                    "endpoint",
                    "pre_carriage",
                    "on_carriage",
                    "modes_of_transport"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Invalid Customer UUID"
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/cargo_item_types": {
      "get": {
        "summary": "Fetch all available cargo types",
        "tags": [
          "Quote"
        ],
        "description": "Fetches all possible cargo types enabled for the customer.",
        "operationId": "getCargoItemTypes",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "995",
                      "type": "cargoItemType",
                      "attributes": {
                        "width": "101.0",
                        "length": "121.0",
                        "description": "Pallet"
                      }
                    }
                  ],
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/cargo_item_type"
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Invalid Credentials"
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/queries/{query_id}/cargo_units": {
      "get": {
        "summary": "Fetch CargoUnits for the Query",
        "tags": [
          "CargoUnits"
        ],
        "description": "Fetches cargo units for the query.",
        "operationId": "getCargoUnits",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query_id",
            "in": "path",
            "description": "Query ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "b223abf5-91b0-4231-abde-55f3ed068058",
                      "type": "cargoUnit",
                      "attributes": {
                        "cargoClass": "lcl",
                        "colliType": "pallet",
                        "height": 140.0,
                        "length": 80.0,
                        "stackable": false,
                        "quantity": 2,
                        "weight": 3000.0,
                        "width": 120.0,
                        "volume": 1.344,
                        "commodities": [

                        ]
                      }
                    },
                    {
                      "id": "64ea0f02-c752-44f5-9402-72a2b5307be7",
                      "type": "cargoUnit",
                      "attributes": {
                        "cargoClass": "lcl",
                        "colliType": "pallet",
                        "height": 140.0,
                        "length": 80.0,
                        "stackable": false,
                        "quantity": 2,
                        "weight": 3000.0,
                        "width": 120.0,
                        "volume": 1.344,
                        "commodities": [

                        ]
                      }
                    },
                    {
                      "id": "7abc7bbe-5948-47d2-b8f4-44cb54a9717c",
                      "type": "cargoUnit",
                      "attributes": {
                        "cargoClass": "lcl",
                        "colliType": "pallet",
                        "height": 140.0,
                        "length": 80.0,
                        "stackable": false,
                        "quantity": 2,
                        "weight": 3000.0,
                        "width": 120.0,
                        "volume": 1.344,
                        "commodities": [

                        ]
                      }
                    }
                  ],
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/item_response"
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/queries/{query_id}/cargo_units/{id}": {
      "get": {
        "summary": "Fetch CargoUnit for the Query",
        "tags": [
          "CargoUnit"
        ],
        "description": "Fetch Cargo Unit",
        "operationId": "getCargoUnit",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query_id",
            "in": "path",
            "description": "Query ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "CargoUnit ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "bfd34de3-5617-48fb-9dc6-c8bbdd1336af",
                    "type": "cargoUnit",
                    "attributes": {
                      "cargoClass": "lcl",
                      "colliType": "pallet",
                      "height": 140.0,
                      "length": 80.0,
                      "stackable": false,
                      "quantity": 2,
                      "weight": 3000.0,
                      "width": 120.0,
                      "volume": 1.344,
                      "commodities": [

                      ]
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/item_response"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/carriers": {
      "get": {
        "summary": "Fetch all available carriers",
        "tags": [
          "Carriers"
        ],
        "description": "Fetches all possible carriers enabled for the customer.",
        "operationId": "getCarriers",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "584b1fd7-89db-4571-ac36-80defb978882",
                      "type": "carrier",
                      "attributes": {
                        "id": "584b1fd7-89db-4571-ac36-80defb978882",
                        "code": "carrier_1",
                        "name": "Carrier - 1",
                        "logo": "http://localhost:3000/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBZ3VpIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--30bfbbddad722ebe0134c75c90739fb0a5510713/test-image.jpg"
                      }
                    },
                    {
                      "id": "7732bea5-062f-4583-a4e4-0dd976a0da27",
                      "type": "carrier",
                      "attributes": {
                        "id": "7732bea5-062f-4583-a4e4-0dd976a0da27",
                        "code": "carrier_2",
                        "name": "Carrier - 2",
                        "logo": "http://localhost:3000/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBZ3lpIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--9bab992125df567f0ca5220f4ff3d7db552251ac/test-image.jpg"
                      }
                    },
                    {
                      "id": "caae5079-bfeb-4ecf-ab36-1bf7783807f7",
                      "type": "carrier",
                      "attributes": {
                        "id": "caae5079-bfeb-4ecf-ab36-1bf7783807f7",
                        "code": "carrier_3",
                        "name": "Carrier - 3",
                        "logo": "http://localhost:3000/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBZzJpIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--2f46ddd91cf932e1b698a396c7bbfa7db1ade0a1/test-image.jpg"
                      }
                    },
                    {
                      "id": "83d217c8-9159-4e69-a126-c926104fb23e",
                      "type": "carrier",
                      "attributes": {
                        "id": "83d217c8-9159-4e69-a126-c926104fb23e",
                        "code": "carrier_4",
                        "name": "Carrier - 4",
                        "logo": "http://localhost:3000/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBZzZpIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--771a76ce344c071bd17ff2a17a06d1e802400aff/test-image.jpg"
                      }
                    },
                    {
                      "id": "dd360715-2bed-4fe3-9bd8-46d090149e77",
                      "type": "carrier",
                      "attributes": {
                        "id": "dd360715-2bed-4fe3-9bd8-46d090149e77",
                        "code": "carrier_5",
                        "name": "Carrier - 5",
                        "logo": "http://localhost:3000/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBZytpIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--467ecf2bc1a442f4f1f15dfba9b7cec656b7df50/test-image.jpg"
                      }
                    }
                  ],
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/carrier"
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Invalid Credentials"
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/carriers/{id}": {
      "get": {
        "summary": "Fetch carrier",
        "tags": [
          "Carriers"
        ],
        "description": "Fetches a specific Carrier.",
        "operationId": "getCarrier",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Carrier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "81f80ef6-4d11-4c98-bc29-5b37a526e7d2",
                    "type": "carrier",
                    "attributes": {
                      "id": "81f80ef6-4d11-4c98-bc29-5b37a526e7d2",
                      "code": "carrier_16",
                      "name": "Carrier - 16",
                      "logo": "http://localhost:3000/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBaDJpIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--7f3c7a5c4ef07481c8ffd45b83335c98effab191/test-image.jpg"
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/carrier"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Invalid Credentials"
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/quotations/{quotation_id}/charges/{id}": {
      "get": {
        "summary": "Fetch tender charges",
        "tags": [
          "Quote"
        ],
        "description": "Fetches available tenders.",
        "operationId": "getCharge",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Trip ID of the tender",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quotation_id",
            "in": "path",
            "description": "The selected quotation ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "de2662c8-efa7-4592-bf23-76f44204032a",
                    "type": "detailedResult",
                    "attributes": {
                      "charges": [
                        {
                          "id": "943e2d61-540d-481b-8dd5-53b7972388bc",
                          "editId": null,
                          "order": 0,
                          "parentId": null,
                          "lineItemId": null,
                          "tenderId": "de2662c8-efa7-4592-bf23-76f44204032a",
                          "code": null,
                          "chargeCategoryId": null,
                          "description": null,
                          "section": null,
                          "value": {
                            "amount": "180.0",
                            "currency": "EUR"
                          },
                          "originalValue": {
                            "amount": "180.0",
                            "currency": "EUR"
                          },
                          "level": 0
                        },
                        {
                          "id": "aec376e6-2332-4613-88c0-2ad48eeba536",
                          "editId": null,
                          "order": 0,
                          "parentId": null,
                          "lineItemId": null,
                          "tenderId": "de2662c8-efa7-4592-bf23-76f44204032a",
                          "code": null,
                          "chargeCategoryId": 17343,
                          "description": "Trucking pre",
                          "section": "trucking_pre",
                          "value": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "originalValue": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "level": 1
                        },
                        {
                          "id": "f0325b28-dcc0-4fe6-ba3d-ff0cbbdeb309",
                          "editId": "ead25f5e-abd9-4e4e-8edd-b534006d2ae5",
                          "order": 0,
                          "parentId": "aec376e6-2332-4613-88c0-2ad48eeba536",
                          "lineItemId": null,
                          "tenderId": "de2662c8-efa7-4592-bf23-76f44204032a",
                          "code": null,
                          "chargeCategoryId": "",
                          "description": "1 x Pallet",
                          "section": "trucking_pre",
                          "value": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "originalValue": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "level": 2
                        },
                        {
                          "id": "dd12d97c-6e1a-4488-b637-f4a6dfd432d4",
                          "editId": null,
                          "order": 0,
                          "parentId": "f0325b28-dcc0-4fe6-ba3d-ff0cbbdeb309",
                          "lineItemId": null,
                          "tenderId": "de2662c8-efa7-4592-bf23-76f44204032a",
                          "code": null,
                          "chargeCategoryId": null,
                          "description": "Fees charged in USD:",
                          "section": "trucking_pre",
                          "value": {
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "originalValue": {
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "level": 3
                        },
                        {
                          "id": "5deee5eb-4f14-4e8c-ad78-c167110ced4b",
                          "editId": "8888e6fd-0a56-4335-ba41-2c69456d82f9",
                          "order": 0,
                          "parentId": "dd12d97c-6e1a-4488-b637-f4a6dfd432d4",
                          "lineItemId": "8888e6fd-0a56-4335-ba41-2c69456d82f9",
                          "tenderId": "de2662c8-efa7-4592-bf23-76f44204032a",
                          "code": "Fee 14",
                          "chargeCategoryId": null,
                          "description": "FEE 14 - ",
                          "section": "trucking_pre",
                          "originalValue": {
                            "included": false,
                            "excluded": false,
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "value": {
                            "included": false,
                            "excluded": false,
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "level": 4
                        },
                        {
                          "id": "8bda8023-64c4-438c-bb60-3248a2cd3360",
                          "editId": null,
                          "order": 1,
                          "parentId": null,
                          "lineItemId": null,
                          "tenderId": "de2662c8-efa7-4592-bf23-76f44204032a",
                          "code": null,
                          "chargeCategoryId": 17346,
                          "description": "Export",
                          "section": "export",
                          "value": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "originalValue": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "level": 1
                        },
                        {
                          "id": "250f2ab9-2500-47b1-aec3-3cd78f27e812",
                          "editId": "ead25f5e-abd9-4e4e-8edd-b534006d2ae5",
                          "order": 0,
                          "parentId": "8bda8023-64c4-438c-bb60-3248a2cd3360",
                          "lineItemId": null,
                          "tenderId": "de2662c8-efa7-4592-bf23-76f44204032a",
                          "code": null,
                          "chargeCategoryId": "",
                          "description": "1 x Pallet",
                          "section": "export",
                          "value": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "originalValue": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "level": 2
                        },
                        {
                          "id": "b2f23ebc-68a4-48e8-82ab-00c506b678da",
                          "editId": null,
                          "order": 0,
                          "parentId": "250f2ab9-2500-47b1-aec3-3cd78f27e812",
                          "lineItemId": null,
                          "tenderId": "de2662c8-efa7-4592-bf23-76f44204032a",
                          "code": null,
                          "chargeCategoryId": null,
                          "description": "Fees charged in USD:",
                          "section": "export",
                          "value": {
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "originalValue": {
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "level": 3
                        },
                        {
                          "id": "1e7b8d28-8cca-4641-affe-5042bcd9b5f0",
                          "editId": "bda0e9bf-5c97-4b18-a5e6-50649ad4d53c",
                          "order": 0,
                          "parentId": "b2f23ebc-68a4-48e8-82ab-00c506b678da",
                          "lineItemId": "bda0e9bf-5c97-4b18-a5e6-50649ad4d53c",
                          "tenderId": "de2662c8-efa7-4592-bf23-76f44204032a",
                          "code": "Fee 18",
                          "chargeCategoryId": null,
                          "description": "FEE 18 - ",
                          "section": "export",
                          "originalValue": {
                            "included": false,
                            "excluded": false,
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "value": {
                            "included": false,
                            "excluded": false,
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "level": 4
                        },
                        {
                          "id": "9b908f00-0705-465e-a0a7-9fb449f70a54",
                          "editId": null,
                          "order": 2,
                          "parentId": null,
                          "lineItemId": null,
                          "tenderId": "de2662c8-efa7-4592-bf23-76f44204032a",
                          "code": null,
                          "chargeCategoryId": 17345,
                          "description": "Cargo",
                          "section": "cargo",
                          "value": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "originalValue": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "level": 1
                        },
                        {
                          "id": "4c600b20-0c68-47c5-80d4-546bd0ac086d",
                          "editId": "ead25f5e-abd9-4e4e-8edd-b534006d2ae5",
                          "order": 0,
                          "parentId": "9b908f00-0705-465e-a0a7-9fb449f70a54",
                          "lineItemId": null,
                          "tenderId": "de2662c8-efa7-4592-bf23-76f44204032a",
                          "code": null,
                          "chargeCategoryId": "",
                          "description": "1 x Pallet",
                          "section": "cargo",
                          "value": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "originalValue": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "level": 2
                        },
                        {
                          "id": "e1383372-058c-48d0-982f-efbbd4bf5dd2",
                          "editId": null,
                          "order": 0,
                          "parentId": "4c600b20-0c68-47c5-80d4-546bd0ac086d",
                          "lineItemId": null,
                          "tenderId": "de2662c8-efa7-4592-bf23-76f44204032a",
                          "code": null,
                          "chargeCategoryId": null,
                          "description": "Fees charged in USD:",
                          "section": "cargo",
                          "value": {
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "originalValue": {
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "level": 3
                        },
                        {
                          "id": "c74c27bf-eb6d-4e37-ab73-8dc894473d64",
                          "editId": "6d563496-a91a-47d5-b7ef-5effbffd0f4c",
                          "order": 0,
                          "parentId": "e1383372-058c-48d0-982f-efbbd4bf5dd2",
                          "lineItemId": "6d563496-a91a-47d5-b7ef-5effbffd0f4c",
                          "tenderId": "de2662c8-efa7-4592-bf23-76f44204032a",
                          "code": "Fee 22",
                          "chargeCategoryId": null,
                          "description": "FEE 22 - ",
                          "section": "cargo",
                          "originalValue": {
                            "included": false,
                            "excluded": false,
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "value": {
                            "included": false,
                            "excluded": false,
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "level": 4
                        },
                        {
                          "id": "c8275c4e-009c-4178-9641-db137d9da693",
                          "editId": null,
                          "order": 3,
                          "parentId": null,
                          "lineItemId": null,
                          "tenderId": "de2662c8-efa7-4592-bf23-76f44204032a",
                          "code": null,
                          "chargeCategoryId": 17347,
                          "description": "Import",
                          "section": "import",
                          "value": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "originalValue": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "level": 1
                        },
                        {
                          "id": "360e2b8a-685a-49a4-a139-1def6bdcb183",
                          "editId": "ead25f5e-abd9-4e4e-8edd-b534006d2ae5",
                          "order": 0,
                          "parentId": "c8275c4e-009c-4178-9641-db137d9da693",
                          "lineItemId": null,
                          "tenderId": "de2662c8-efa7-4592-bf23-76f44204032a",
                          "code": null,
                          "chargeCategoryId": "",
                          "description": "1 x Pallet",
                          "section": "import",
                          "value": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "originalValue": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "level": 2
                        },
                        {
                          "id": "8b4c7c60-15bd-43f0-b5ed-826694cf7e91",
                          "editId": null,
                          "order": 0,
                          "parentId": "360e2b8a-685a-49a4-a139-1def6bdcb183",
                          "lineItemId": null,
                          "tenderId": "de2662c8-efa7-4592-bf23-76f44204032a",
                          "code": null,
                          "chargeCategoryId": null,
                          "description": "Fees charged in USD:",
                          "section": "import",
                          "value": {
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "originalValue": {
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "level": 3
                        },
                        {
                          "id": "d58b6555-1a37-4e4c-8641-8f6832916545",
                          "editId": "e200940a-fad1-4c45-8eb1-051066fd3563",
                          "order": 0,
                          "parentId": "8b4c7c60-15bd-43f0-b5ed-826694cf7e91",
                          "lineItemId": "e200940a-fad1-4c45-8eb1-051066fd3563",
                          "tenderId": "de2662c8-efa7-4592-bf23-76f44204032a",
                          "code": "Fee 26",
                          "chargeCategoryId": null,
                          "description": "FEE 26 - ",
                          "section": "import",
                          "originalValue": {
                            "included": false,
                            "excluded": false,
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "value": {
                            "included": false,
                            "excluded": false,
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "level": 4
                        },
                        {
                          "id": "dabbf71a-fd9a-4dd3-9a4c-20c5f4d0641e",
                          "editId": null,
                          "order": 4,
                          "parentId": null,
                          "lineItemId": null,
                          "tenderId": "de2662c8-efa7-4592-bf23-76f44204032a",
                          "code": null,
                          "chargeCategoryId": 17344,
                          "description": "Trucking on",
                          "section": "trucking_on",
                          "value": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "originalValue": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "level": 1
                        },
                        {
                          "id": "eea33e38-6462-4eb1-b1d6-0e952725fa20",
                          "editId": "ead25f5e-abd9-4e4e-8edd-b534006d2ae5",
                          "order": 0,
                          "parentId": "dabbf71a-fd9a-4dd3-9a4c-20c5f4d0641e",
                          "lineItemId": null,
                          "tenderId": "de2662c8-efa7-4592-bf23-76f44204032a",
                          "code": null,
                          "chargeCategoryId": "",
                          "description": "1 x Pallet",
                          "section": "trucking_on",
                          "value": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "originalValue": {
                            "amount": "36.0",
                            "currency": "EUR"
                          },
                          "level": 2
                        },
                        {
                          "id": "c61b90a0-704d-4e2f-9184-093637c9e8d0",
                          "editId": null,
                          "order": 0,
                          "parentId": "eea33e38-6462-4eb1-b1d6-0e952725fa20",
                          "lineItemId": null,
                          "tenderId": "de2662c8-efa7-4592-bf23-76f44204032a",
                          "code": null,
                          "chargeCategoryId": null,
                          "description": "Fees charged in USD:",
                          "section": "trucking_on",
                          "value": {
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "originalValue": {
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "level": 3
                        },
                        {
                          "id": "d6316364-8d0f-4743-830a-f1b4f3484486",
                          "editId": "c204a4bc-8365-4030-9385-c0ff8d4be060",
                          "order": 0,
                          "parentId": "c61b90a0-704d-4e2f-9184-093637c9e8d0",
                          "lineItemId": "c204a4bc-8365-4030-9385-c0ff8d4be060",
                          "tenderId": "de2662c8-efa7-4592-bf23-76f44204032a",
                          "code": "Fee 30",
                          "chargeCategoryId": null,
                          "description": "FEE 30 - ",
                          "section": "trucking_on",
                          "originalValue": {
                            "included": false,
                            "excluded": false,
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "value": {
                            "included": false,
                            "excluded": false,
                            "amount": "30.0",
                            "currency": "USD"
                          },
                          "level": 4
                        }
                      ],
                      "route": "Gothenburg - Shanghai",
                      "vessel": "",
                      "id": "de2662c8-efa7-4592-bf23-76f44204032a",
                      "pickupTruckType": null,
                      "deliveryTruckType": null,
                      "pickupCarrier": "SACO",
                      "deliveryCarrier": "SACO",
                      "pickupService": "standard",
                      "deliveryService": "standard"
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/quotationTender"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Invalid Charge ID",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "message": "Couldn't find Journey::Result with 'id'=deadbeef",
                  "status": "not_found",
                  "code": 404
                }
              }
            }
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/clients": {
      "get": {
        "summary": "Fetch all clients",
        "tags": [
          "Clients"
        ],
        "description": "Fetch all customer client accounts.",
        "operationId": "getClients",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "Search query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Results per page",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "9c3e16c3-4cda-47fc-bcd9-9c67f799acc2",
                      "type": "user",
                      "attributes": {
                        "email": "john.doe.66@itsmycargo.test",
                        "organizationId": "b56e9820-94eb-4ff7-bb4f-ef8e1651de9b",
                        "firstName": "Guest",
                        "lastName": "User 66",
                        "phone": "081 9847079",
                        "companyName": "Guest Company 66",
                        "role": null
                      }
                    }
                  ],
                  "links": {
                    "first": null,
                    "prev": null,
                    "next": null,
                    "last": null
                  },
                  "meta": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/user"
                      }
                    },
                    "links": {
                      "$ref": "#/components/schemas/paginationLinks"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Invalid Credentials"
          }
        }
      },
      "post": {
        "summary": "Create a new client",
        "tags": [
          "Clients"
        ],
        "description": "Creates a new client for the customer.",
        "operationId": "createClient",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "1dd894f5-0cbf-4c7a-956d-b682246ec49f",
                    "type": "user",
                    "attributes": {
                      "email": "john@example.com",
                      "organizationId": "dfebcb33-4e3c-4e7a-9cb3-ca883399d1ab",
                      "firstName": "John",
                      "lastName": "Doe",
                      "phone": "+1 2345 2345",
                      "companyName": "LumberJacks Ltd",
                      "role": null
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                }
              }
            }
          },
          "400": {
            "description": "invalid request",
            "content": {
              "application/json": {
                "example": {
                  "error": "Validation failed: Email can't be blank, Email is invalid"
                }
              }
            }
          },
          "401": {
            "description": "Invalid Credentials"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/client"
              }
            }
          },
          "required": true
        }
      }
    },
    "/v1/organizations/{organization_id}/clients/{id}": {
      "get": {
        "summary": "Fetch specific client",
        "tags": [
          "Clients"
        ],
        "description": "Fetch a given client.",
        "operationId": "getClient",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Client ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "59ea144a-ae18-4969-96e2-92be4118931b",
                    "type": "user",
                    "attributes": {
                      "email": "john.doe.73@itsmycargo.test",
                      "organizationId": "231808c9-d721-496b-836e-6c31d4a9e621",
                      "firstName": "Guest",
                      "lastName": "User 73",
                      "phone": "081 9847079",
                      "companyName": "Guest Company 73",
                      "role": null
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/user"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Invalid Credentials"
          },
          "404": {
            "description": "Invalid Client ID",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "message": "Couldn't find Users::Client with 'id'=deadbeef [WHERE \"users_clients\".\"organization_id\" = $1 AND \"users_clients\".\"deleted_at\" IS NULL]",
                  "status": "not_found",
                  "code": 404
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Destroy a specific client",
        "tags": [
          "Clients"
        ],
        "description": "Deletes an client.",
        "operationId": "deleteClient",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Client ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation"
          },
          "404": {
            "description": "Invalid Client ID",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "message": "Couldn't find Users::Client with 'id'=deadbeef [WHERE \"users_clients\".\"organization_id\" = $1 AND \"users_clients\".\"deleted_at\" IS NULL]",
                  "status": "not_found",
                  "code": 404
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update",
        "tags": [
          "Clients"
        ],
        "description": "Update client details.",
        "operationId": "updateClient",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Client ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation"
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "example": {
                  "error": [
                    "Email can't be blank",
                    "Email is invalid"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "client": {
                    "$ref": "#/components/schemas/client"
                  }
                },
                "required": [
                  "client"
                ]
              }
            }
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/clients/{id}/password_reset": {
      "patch": {
        "summary": "Password Reset",
        "tags": [
          "Clients"
        ],
        "description": "Resets a client password.",
        "operationId": "passwordReset",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Client ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "password": "cyQPPJPOIvgCNRpN"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "password": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "password"
                      ]
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Invalid Credentials"
          },
          "404": {
            "description": "Invalid Client ID",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "message": "Couldn't find Users::Client with 'id'=deadbeef [WHERE \"users_clients\".\"organization_id\" = $1 AND \"users_clients\".\"deleted_at\" IS NULL]",
                  "status": "not_found",
                  "code": 404
                }
              }
            }
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/dashboard": {
      "get": {
        "summary": "Fetch Dashboard Widget",
        "tags": [
          "Dashboard"
        ],
        "description": "Fetch widget date for the dashboard.",
        "operationId": "getDashboard",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "widget",
            "in": "query",
            "description": "Widget to be fetch",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "description": "Start date of dashboard data",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "description": "End date of dashboard data",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": 0
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "oneOf": [
                        {
                          "$ref": "#/components/schemas/analyticsCount"
                        },
                        {
                          "$ref": "#/components/schemas/analyticsTotal"
                        },
                        {
                          "$ref": "#/components/schemas/analyticsListCount"
                        }
                      ]
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/equipments": {
      "get": {
        "summary": "Fetch all available equipment",
        "tags": [
          "Quote"
        ],
        "description": "Fetch availavble equipment for the route.",
        "operationId": "getEquipments",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "origin_nexus_id",
            "in": "query",
            "description": "the id of the origin",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "destination_nexus_id",
            "in": "query",
            "description": "the id of the destination",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    "fcl_20",
                    "fcl_40"
                  ]
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Invalid Credentials"
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/result_sets/{result_set_id}/errors": {
      "get": {
        "summary": "Fetch Errors for the Result Set",
        "tags": [
          "Users"
        ],
        "description": "Fetch errors for the given result set.",
        "operationId": "getResultSetErrors",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "result_set_id",
            "in": "path",
            "description": "ResultSet ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "0d5d5da9-c4a5-4012-8a03-3b32c96435ce",
                      "type": "error",
                      "attributes": {
                        "id": "0d5d5da9-c4a5-4012-8a03-3b32c96435ce",
                        "carrier": "MSC",
                        "code": 1001,
                        "limit": "1000",
                        "modeOfTransport": "ocean",
                        "property": "Weight",
                        "service": "Standard",
                        "value": "1100",
                        "cargoUnitId": "fe5eb1e7-c31b-4f0f-9f30-955bd798672d"
                      }
                    }
                  ],
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/journeyError"
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/groups": {
      "get": {
        "summary": "Fetch all groups",
        "tags": [
          "Groups"
        ],
        "description": "Fetch all groups.",
        "operationId": "getGroups",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "ef82a7c2-5bc0-442c-a51f-e640518d2019",
                      "type": "organizationsGroup",
                      "attributes": {
                        "id": "ef82a7c2-5bc0-442c-a51f-e640518d2019",
                        "name": "Group1"
                      }
                    },
                    {
                      "id": "2e9491cd-4de6-4aba-8c82-3d78f2d7f5a3",
                      "type": "organizationsGroup",
                      "attributes": {
                        "id": "2e9491cd-4de6-4aba-8c82-3d78f2d7f5a3",
                        "name": "Group2"
                      }
                    },
                    {
                      "id": "f124dbe8-3c70-47e4-a9fc-ae9084702d81",
                      "type": "organizationsGroup",
                      "attributes": {
                        "id": "f124dbe8-3c70-47e4-a9fc-ae9084702d81",
                        "name": "Group3"
                      }
                    },
                    {
                      "id": "58a3448b-885c-48ed-b43f-73e48fa23447",
                      "type": "organizationsGroup",
                      "attributes": {
                        "id": "58a3448b-885c-48ed-b43f-73e48fa23447",
                        "name": "Group4"
                      }
                    },
                    {
                      "id": "70f72432-7c0b-4a30-9ace-f8cfe9a4cefb",
                      "type": "organizationsGroup",
                      "attributes": {
                        "id": "70f72432-7c0b-4a30-9ace-f8cfe9a4cefb",
                        "name": "Group5"
                      }
                    }
                  ],
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/group"
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Invalid Credentials"
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/itineraries": {
      "get": {
        "summary": "Fetch list of itineraries belonging to an organization",
        "tags": [
          "Quote"
        ],
        "description": "Fetch list of itineraries belonging to an organization",
        "operationId": "getItineraries",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "6082",
                      "type": "itinerary",
                      "attributes": {
                        "id": 6082,
                        "modeOfTransport": "ocean",
                        "name": "Hamburg - Shanghai"
                      },
                      "relationships": {
                        "stops": {
                          "data": [
                            {
                              "id": "11995",
                              "type": "stop"
                            },
                            {
                              "id": "11996",
                              "type": "stop"
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "number"
                              },
                              "modeOfTransport": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "modeOfTransport",
                              "name"
                            ]
                          },
                          "relationships": {
                            "type": "object",
                            "properties": {
                              "stops": {
                                "type": "object",
                                "properties": {
                                  "data": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string"
                                        },
                                        "type": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "id",
                                        "type"
                                      ]
                                    }
                                  }
                                },
                                "required": [
                                  "data"
                                ]
                              }
                            },
                            "required": [
                              "stops"
                            ]
                          }
                        },
                        "required": [
                          "id",
                          "type",
                          "attributes",
                          "relationships"
                        ]
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/locations/origins": {
      "get": {
        "summary": "Fetch available origins",
        "tags": [
          "Quote"
        ],
        "description": "Fetch available origins",
        "operationId": "getLocationOrigins",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "Query to search locations",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "ID of location to query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "load_type",
            "in": "query",
            "description": "Load type for location",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "19129",
                      "type": "nexus",
                      "attributes": {
                        "id": 19129,
                        "name": "Gothenburg",
                        "latitude": 57.694253,
                        "longitude": 11.854048,
                        "modesOfTransport": [
                          "ocean"
                        ],
                        "countryName": "Sweden"
                      }
                    }
                  ],
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/nexus"
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/locations/destinations": {
      "get": {
        "summary": "Fetch available destinations",
        "tags": [
          "Quote"
        ],
        "description": "Fetch available destinations",
        "operationId": "getLocationDestinations",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "Query to search locations",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "ID of location to query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "load_type",
            "in": "query",
            "description": "Load type for location",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "19132",
                      "type": "nexus",
                      "attributes": {
                        "id": 19132,
                        "name": "Shanghai",
                        "latitude": 31.2231338,
                        "longitude": 120.9162975,
                        "modesOfTransport": [
                          "ocean"
                        ],
                        "countryName": "China"
                      }
                    }
                  ],
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/nexus"
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/oauth/token/info": {
      "get": {
        "summary": "Fetch information of current token",
        "tags": [
          "Authentication"
        ],
        "description": "Fetch information of current token",
        "operationId": "getTokenInfo",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "access_token": "b0f950a3e96d3ac3bcaa032e4e4c1e27597080aae16340f9e8fc741857dda6b8",
                  "token_type": "Bearer",
                  "scope": "public",
                  "created_at": 1628759281
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "access_token": {
                      "type": "string",
                      "description": "Token used to access this endpoint"
                    },
                    "token_type": {
                      "type": "string",
                      "description": "Type of the token (always Bearer)"
                    },
                    "scope": {
                      "type": "string",
                      "description": "OAuth scopes of the token."
                    },
                    "created_at": {
                      "type": "number",
                      "description": "Timestamp when token was created."
                    }
                  },
                  "required": [
                    "access_token",
                    "token_type",
                    "scope",
                    "created_at"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Invalid Credentials",
            "content": {
              "application/json": {
                "example": {
                  "error": "invalid_request",
                  "error_description": "The request is missing a required parameter, includes an unsupported parameter value, or is otherwise malformed."
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error code describing the encountered error."
                    },
                    "error_description": {
                      "type": "string",
                      "description": "Detailed description of the error occured."
                    }
                  },
                  "required": [
                    "error",
                    "error_description"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/offers": {
      "post": {
        "summary": "Create new offer",
        "tags": [
          "Offer"
        ],
        "description": "Create a new offer. To be able to download quotation results as a PDF, first the offer must be created with results that are to be included in the offer.\nCreating a new offer with the selected result IDs allows the backend system to generate a downloadable PDF for these results.\n",
        "operationId": "createOffer",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "f21c134e-ffc2-497b-99fb-7e2a45c80b8a",
                    "type": "offer",
                    "attributes": {
                      "id": "f21c134e-ffc2-497b-99fb-7e2a45c80b8a",
                      "url": "http://localhost:3000/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBb09pIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--5f360a3d56ad011c6706f2878cf346fd5ce18d2e/offer.pdf?disposition=attachment"
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/offer"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "422": {
            "description": "unprocessable entity",
            "content": {
              "application/json": {
                "example": {
                  "error": "No results provided"
                },
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            }
          },
          "404": {
            "description": "results not found",
            "content": {
              "application/json": {
                "example": {
                  "error": "No results found"
                },
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resultIds": {
                    "description": "array of the ids of the results to be included in the offer",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "resultIds"
                ]
              }
            }
          }
        }
      }
    },
    "/v1/organization": {
      "get": {
        "summary": "Fetch current organization",
        "tags": [
          "Organization"
        ],
        "description": "Fetch information of the current organization, automatically detected by the\nrequester domain (referrer).\n\nCurrent organization is detected automatically based on the following hierachy:\n  1. Referrer domain as is, e.g. yourdemo.itsmycargo.shop\n  2. Slug as subdomain, e.g. yourdemo.lvh.me\n",
        "operationId": "getOrganization",
        "parameters": [
          {
            "name": "Referer",
            "in": "header",
            "description": "HTTP Referrer",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "fe75a48e-1687-431d-a373-2b509f9c7453",
                    "type": "organization",
                    "attributes": {
                      "slug": "test_102",
                      "name": "Freight Spedetion #102"
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/organization"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/v1/organizations": {
      "get": {
        "summary": "Fetch all organizations",
        "tags": [
          "Users"
        ],
        "description": "Fetch all organizations",
        "operationId": "getOrganizations",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [

                  ],
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/organization"
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Invalid Credentials"
          }
        }
      }
    },
    "/v1/organizations/{id}/countries": {
      "get": {
        "summary": "Fetch enabled countries for an organization",
        "tags": [
          "Users"
        ],
        "description": "Fetch enabled countries for an organization",
        "operationId": "getCountries",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "9690",
                      "type": "country",
                      "attributes": {
                        "name": "Sweden",
                        "code": "SE",
                        "flag": "https://restcountries.eu/data/sek.svg"
                      }
                    }
                  ],
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/country"
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Invalid Credentials"
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/ports": {
      "get": {
        "summary": "Fetch list of ports",
        "tags": [
          "Ahoy"
        ],
        "description": "Fetch list of ports",
        "operationId": "getPorts",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "location_type",
            "in": "query",
            "description": "Location Type of request origin/destination",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "location_id",
            "in": "query",
            "description": "ID of selected location",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Text input for query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "19380",
                      "type": "port",
                      "attributes": {
                        "id": 19380,
                        "name": "Shanghai",
                        "hubType": "ocean"
                      }
                    }
                  ],
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "number"
                              },
                              "name": {
                                "type": "string"
                              },
                              "hubType": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "name",
                              "hubType"
                            ]
                          }
                        },
                        "required": [
                          "id",
                          "type",
                          "attributes"
                        ]
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/profile": {
      "get": {
        "summary": "Fetch client profile",
        "tags": [
          "Profiles"
        ],
        "description": "Retrieve user's profile. User's profile includes additional information besides email that are used usually to better display user information, has more detailed contact information etc.\n      User profile includes name (as first name, and last name) which can be used for display purposes.",
        "operationId": "getProfile",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "cd7a9f33-37da-4252-a592-b40f7762424c",
                    "type": "profile",
                    "attributes": {
                      "email": "john.doe.123@itsmycargo.test",
                      "firstName": "Guest",
                      "lastName": "User 123"
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/profile"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Invalid Credentials"
          }
        }
      },
      "patch": {
        "summary": "Update",
        "tags": [
          "Profiles"
        ],
        "description": "Update profile details.",
        "operationId": "updateProfile",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "c8d5f44b-6d83-429d-9fa8-94d4c41c7095",
                    "type": "profile",
                    "attributes": {
                      "email": "john@example.com",
                      "firstName": "John",
                      "lastName": "Doe"
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "example": {
                  "error": [
                    "Email has already been taken"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "profile": {
                    "type": "object",
                    "properties": {
                      "email": {
                        "description": "The new email of the client",
                        "type": "string",
                        "pattern": "email"
                      },
                      "firstName": {
                        "description": "First name of the user",
                        "type": "string"
                      },
                      "lastName": {
                        "description": "Last name of the user",
                        "type": "string"
                      },
                      "password": {
                        "description": "A new password for the user account",
                        "type": "string",
                        "minLength": 8
                      }
                    }
                  }
                },
                "required": [
                  "profile"
                ]
              }
            }
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/queries": {
      "post": {
        "summary": "Create new query",
        "tags": [
          "Query"
        ],
        "description": "Create new query",
        "operationId": "createQuery",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation (Cargo Item)",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "e05cf4fa-c505-499f-9f88-86d5673dcef6",
                    "type": "query",
                    "attributes": {
                      "id": "e05cf4fa-c505-499f-9f88-86d5673dcef6",
                      "aggregated": false,
                      "loadType": "cargo_item",
                      "originName": "SEGOT",
                      "destinationName": "CNSHA",
                      "reference": null,
                      "modesOfTransport": [

                      ],
                      "client": {
                        "data": {
                          "id": "995e981b-6ae7-426a-9079-aacd789e920e",
                          "type": "client",
                          "attributes": {
                            "email": "john.doe.141@itsmycargo.test",
                            "organizationId": "5fe134c7-6cab-44fc-9c23-554808ed4ea2",
                            "firstName": "Guest",
                            "lastName": "User 141",
                            "phone": "081 9847079",
                            "companyName": "Guest Company 141"
                          }
                        },
                        "meta": {
                        },
                        "links": {
                        }
                      },
                      "offerId": null,
                      "issueDate": "2021-08-12T09:08:10.511Z",
                      "originId": null,
                      "destinationId": null
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "originId": {
                    "type": "string",
                    "description": "The Carta ID of the origin point"
                  },
                  "destinationId": {
                    "type": "string",
                    "description": "The Carta ID of the destination point"
                  },
                  "loadType": {
                    "type": "string",
                    "description": "The load type of the query"
                  },
                  "items": {
                    "type": "array",
                    "items": {
                      "oneOf": [
                        {
                          "$ref": "#/components/schemas/item_lcl"
                        },
                        {
                          "$ref": "#/components/schemas/item_aggregated_lcl"
                        },
                        {
                          "$ref": "#/components/schemas/item_fcl"
                        }
                      ]
                    }
                  }
                },
                "required": [
                  "originId",
                  "destinationId",
                  "loadType",
                  "items"
                ]
              }
            }
          }
        }
      },
      "get": {
        "summary": "Fetch all queries",
        "tags": [
          "Query"
        ],
        "description": "Fetch all queries",
        "operationId": "getQueries",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "The attribute by which to sort the Queries",
            "enum": [
              "load_type",
              "last_name",
              "origin",
              "destination",
              "selected_date",
              "cargo_ready_date",
              "created_at"
            ],
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "direction",
            "in": "query",
            "description": "The defining whether the sorting is ascending or descending",
            "enum": [
              "asc",
              "desc"
            ],
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchBy",
            "in": "query",
            "description": "The attribute of the Query model to search through",
            "enum": [
              "client_email",
              "client_name",
              "company_name",
              "destination",
              "hs_code",
              "imo_class",
              "load_type",
              "origin",
              "reference"
            ],
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchQuery",
            "in": "query",
            "description": "The value we want to use in our search",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page of result requested",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "perPage",
            "in": "query",
            "description": "The number of results requested per page",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "75aea5f0-ef98-4643-b3c8-7aa891829338",
                      "type": "query",
                      "attributes": {
                        "id": "75aea5f0-ef98-4643-b3c8-7aa891829338",
                        "aggregated": false,
                        "loadType": "cargo_item",
                        "originName": "aaaaa",
                        "destinationName": "aaaaa",
                        "reference": "REFERENCE-66",
                        "modesOfTransport": [
                          "ocean"
                        ],
                        "client": {
                          "data": {
                            "id": "fb5e4e52-f064-48b9-be90-3799228a0b4c",
                            "type": "client",
                            "attributes": {
                              "email": "john.doe.148@itsmycargo.test",
                              "organizationId": "ed9f28c1-0ed4-40b0-aa80-37bcb4296e13",
                              "firstName": "Guest",
                              "lastName": "User 148",
                              "phone": "081 9847079",
                              "companyName": "Guest Company 148"
                            }
                          },
                          "meta": {
                          },
                          "links": {
                          }
                        },
                        "offerId": null,
                        "issueDate": "2021-08-12T07:08:11.376Z",
                        "originId": "GEOID-107",
                        "destinationId": "GEOID-108"
                      }
                    },
                    {
                      "id": "a9ace1d5-3488-4ff3-b1e5-debe813f1d4a",
                      "type": "query",
                      "attributes": {
                        "id": "a9ace1d5-3488-4ff3-b1e5-debe813f1d4a",
                        "aggregated": false,
                        "loadType": "cargo_item",
                        "originName": "bbbbb",
                        "destinationName": "bbbbb",
                        "reference": "REFERENCE-67",
                        "modesOfTransport": [
                          "ocean"
                        ],
                        "client": {
                          "data": {
                            "id": "fb5e4e52-f064-48b9-be90-3799228a0b4c",
                            "type": "client",
                            "attributes": {
                              "email": "john.doe.148@itsmycargo.test",
                              "organizationId": "ed9f28c1-0ed4-40b0-aa80-37bcb4296e13",
                              "firstName": "Guest",
                              "lastName": "User 148",
                              "phone": "081 9847079",
                              "companyName": "Guest Company 148"
                            }
                          },
                          "meta": {
                          },
                          "links": {
                          }
                        },
                        "offerId": null,
                        "issueDate": "2021-08-12T04:08:11.576Z",
                        "originId": "GEOID-109",
                        "destinationId": "GEOID-110"
                      }
                    }
                  ],
                  "meta": {
                  },
                  "links": {
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/queries/{id}": {
      "get": {
        "summary": "Fetch Query",
        "tags": [
          "Query"
        ],
        "description": "Fetch Query",
        "operationId": "getQuery",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Query ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "c368792e-1105-46a9-be14-3caf5ab56361",
                    "type": "query",
                    "attributes": {
                      "id": "c368792e-1105-46a9-be14-3caf5ab56361",
                      "aggregated": false,
                      "loadType": "cargo_item",
                      "originName": "20457, Hamburg",
                      "destinationName": "Shanghai Airport",
                      "reference": "REFERENCE-70",
                      "modesOfTransport": [
                        "ocean"
                      ],
                      "client": {
                        "data": {
                          "id": "fc12a2c9-420e-49a8-88ad-4ba3b0890ab1",
                          "type": "client",
                          "attributes": {
                            "email": "john.doe.155@itsmycargo.test",
                            "organizationId": "8059cbef-fa7c-4318-8b04-48a4c4f0c678",
                            "firstName": "Guest",
                            "lastName": "User 155",
                            "phone": "081 9847079",
                            "companyName": "Guest Company 155"
                          }
                        },
                        "meta": {
                        },
                        "links": {
                        }
                      },
                      "offerId": null,
                      "issueDate": "2021-08-12T09:08:13.000Z",
                      "originId": "GEOID-115",
                      "destinationId": "GEOID-116"
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/quotations": {
      "post": {
        "summary": "Create new quotation",
        "tags": [
          "Quote"
        ],
        "description": "Create new quotation",
        "operationId": "createQuotation",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "dc9ab2b5-915a-4c6b-ac14-6ad105d011e7",
                    "type": "query",
                    "attributes": {
                      "completed": true,
                      "selectedDate": "2021-08-12T10:08:18.799Z",
                      "loadType": "container",
                      "user": {
                        "data": {
                          "id": "07d289f6-1981-4a77-8e93-959b3c3b0001",
                          "type": "user",
                          "attributes": {
                            "email": "john.doe.193@itsmycargo.test",
                            "organizationId": "8ef8b7c0-4281-4cde-9eaa-089585a0e65b",
                            "firstName": "Guest",
                            "lastName": "User 193",
                            "phone": "081 9847079",
                            "companyName": "Guest Company 193",
                            "role": null
                          }
                        },
                        "meta": {
                        },
                        "links": {
                        }
                      },
                      "creator": {
                        "data": {
                          "id": "07d289f6-1981-4a77-8e93-959b3c3b0001",
                          "type": "user",
                          "attributes": {
                            "email": "john.doe.193@itsmycargo.test",
                            "organizationId": "8ef8b7c0-4281-4cde-9eaa-089585a0e65b",
                            "firstName": "Guest",
                            "lastName": "User 193",
                            "phone": "081 9847079",
                            "companyName": "Guest Company 193",
                            "role": null
                          }
                        },
                        "meta": {
                        },
                        "links": {
                        }
                      },
                      "origin": {
                        "data": {
                          "id": "19167",
                          "type": "nexus",
                          "attributes": {
                            "id": 19167,
                            "name": "Gothenburg",
                            "latitude": 57.694253,
                            "longitude": 11.854048,
                            "modesOfTransport": [
                              "ocean"
                            ],
                            "countryName": "Sweden"
                          }
                        },
                        "meta": {
                        },
                        "links": {
                        }
                      },
                      "destination": {
                        "data": {
                          "id": "19166",
                          "type": "nexus",
                          "attributes": {
                            "id": 19166,
                            "name": "Shanghai",
                            "latitude": 31.2231338,
                            "longitude": 120.9162975,
                            "modesOfTransport": [
                              "ocean",
                              "ocean"
                            ],
                            "countryName": "China"
                          }
                        },
                        "meta": {
                        },
                        "links": {
                        }
                      },
                      "containers": {
                        "data": [
                          {
                            "id": "b20e5c5b-b419-406c-81c2-1204d420bade",
                            "type": "fclCargoUnit",
                            "attributes": {
                              "shipmentId": "dc9ab2b5-915a-4c6b-ac14-6ad105d011e7",
                              "sizeClass": "fcl_20",
                              "weightClass": null,
                              "payloadInKg": 1.0,
                              "tareWeight": null,
                              "grossWeight": null,
                              "dangerousGoods": false,
                              "cargoClass": "fcl_20",
                              "hsCodes": [

                              ],
                              "customsText": "",
                              "quantity": 1,
                              "unitPrice": {
                              },
                              "contents": "",
                              "equipmentType": "fcl_20"
                            }
                          }
                        ],
                        "meta": {
                        },
                        "links": {
                        }
                      },
                      "cargoItems": {
                        "data": [

                        ],
                        "meta": {
                        },
                        "links": {
                        }
                      },
                      "tenders": {
                        "data": [
                          {
                            "id": "e3212f54-00a3-4459-a572-372ef9909b83",
                            "type": "result",
                            "attributes": {
                              "remarks": [

                              ],
                              "carrier": "IMC",
                              "modeOfTransport": "ocean",
                              "id": "e3212f54-00a3-4459-a572-372ef9909b83",
                              "origin": "Gothenburg",
                              "destination": "Shanghai",
                              "originHub": "Gothenburg Port",
                              "destinationHub": "Gothenburg Port 50 Port",
                              "pickupAddress": null,
                              "deliveryAddress": null,
                              "serviceLevel": "standard",
                              "total": {
                                "currency": "EUR",
                                "amount": "250.0"
                              },
                              "quotationId": "dc9ab2b5-915a-4c6b-ac14-6ad105d011e7",
                              "transshipment": null,
                              "estimated": false,
                              "validUntil": "2022-02-12T00:00:00.000Z",
                              "pickupTruckType": "",
                              "deliveryTruckType": "",
                              "pickupCarrier": null,
                              "deliveryCarrier": null,
                              "pickupService": null,
                              "deliveryService": null,
                              "exchangeRates": {
                              }
                            }
                          }
                        ],
                        "meta": {
                        },
                        "links": {
                        }
                      }
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "quote": {
                    "type": "object",
                    "properties": {
                      "selected_date": {
                        "type": "string"
                      },
                      "user_id": {
                        "type": "string",
                        "nullable": true
                      },
                      "origin": {
                        "type": "object",
                        "oneOf": [
                          {
                            "$ref": "#/components/schemas/locationV1Nexus"
                          },
                          {
                            "$ref": "#/components/schemas/locationV1Trucking"
                          }
                        ]
                      },
                      "destination": {
                        "type": "object",
                        "oneOf": [
                          {
                            "$ref": "#/components/schemas/locationV1Nexus"
                          },
                          {
                            "$ref": "#/components/schemas/locationV1Trucking"
                          }
                        ]
                      }
                    },
                    "required": [
                      "selected_date",
                      "origin",
                      "destination"
                    ]
                  },
                  "shipment_info": {
                    "type": "object",
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/v1ShipmentInfoCargoItems"
                      },
                      {
                        "$ref": "#/components/schemas/v1ShipmentInfoContainers"
                      }
                    ]
                  },
                  "async": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "organization_id",
                  "quote",
                  "shipment_info"
                ]
              }
            }
          }
        }
      },
      "get": {
        "summary": "Fetch quotations",
        "tags": [
          "Quote"
        ],
        "description": "Fetch all Quotations",
        "operationId": "fetchQuotations",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "description": "The beginning of the date range for filtering Queries by their CargoReadyDate",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "description": "The end of the date range for filtering Queries by their CargoReadyDate",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [

                  ],
                  "links": {
                    "first": null,
                    "prev": null,
                    "next": null,
                    "last": null
                  },
                  "meta": {
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/quotations/{id}": {
      "get": {
        "summary": "Fetch existing quotation",
        "tags": [
          "Quote"
        ],
        "description": "Fetch existing quotation",
        "operationId": "getQuotation",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Quotation ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organization_id",
            "in": "query",
            "description": "The current organization ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "35b92056-48d6-4b4b-85fc-fa79fa244a0e",
                    "type": "query",
                    "attributes": {
                      "completed": true,
                      "selectedDate": "2021-08-13T00:00:00.000Z",
                      "loadType": "cargo_item",
                      "user": {
                        "data": {
                          "id": "3f046d28-0641-4359-9038-e57bc8944940",
                          "type": "user",
                          "attributes": {
                            "email": "john.doe.225@itsmycargo.test",
                            "organizationId": "01d7f89b-d98f-4b4c-892b-789d12e124a9",
                            "firstName": "Guest",
                            "lastName": "User 225",
                            "phone": "081 9847079",
                            "companyName": "Guest Company 225",
                            "role": null
                          }
                        },
                        "meta": {
                        },
                        "links": {
                        }
                      },
                      "creator": {
                        "data": {
                          "id": "429d6349-329c-4774-a88c-350653e89d70",
                          "type": "user",
                          "attributes": {
                            "email": "john.doe.226@itsmycargo.test",
                            "organizationId": "01d7f89b-d98f-4b4c-892b-789d12e124a9",
                            "firstName": "Guest",
                            "lastName": "User 226",
                            "phone": "081 9847079",
                            "companyName": "Guest Company 226",
                            "role": null
                          }
                        },
                        "meta": {
                        },
                        "links": {
                        }
                      },
                      "origin": {
                        "data": {
                          "id": "0",
                          "type": "address",
                          "attributes": {
                            "longitude": 11.854048,
                            "latitude": 57.694253,
                            "geocodedAddress": "438 80 Landvetter, Sweden",
                            "street": null,
                            "city": "",
                            "country": "Sweden",
                            "postalCode": "",
                            "name": "438 80 Landvetter, Sweden"
                          }
                        },
                        "meta": {
                        },
                        "links": {
                        }
                      },
                      "destination": {
                        "data": {
                          "id": "0",
                          "type": "address",
                          "attributes": {
                            "longitude": 121.4867159,
                            "latitude": 31.232014,
                            "geocodedAddress": "88 Henan Middle Road, Shanghai",
                            "street": null,
                            "city": "Shanghai",
                            "country": "China",
                            "postalCode": "20001",
                            "name": "88 Henan Middle Road, Shanghai"
                          }
                        },
                        "meta": {
                        },
                        "links": {
                        }
                      },
                      "containers": {
                        "data": [

                        ],
                        "meta": {
                        },
                        "links": {
                        }
                      },
                      "cargoItems": {
                        "data": [
                          {
                            "id": "24ebae5c-9154-43e1-a3df-86127f5fc498",
                            "type": "lclCargoUnit",
                            "attributes": {
                              "payloadInKg": "1000.0",
                              "length": "100.0",
                              "width": "100.0",
                              "height": "100.0",
                              "dangerousGoods": false,
                              "cargoClass": "lcl",
                              "contents": "",
                              "hsCodes": [

                              ],
                              "cargoItemTypeId": null,
                              "customsText": "",
                              "chargeableWeight": "1000.0",
                              "stackable": true,
                              "quantity": 1,
                              "unitPrice": {
                              },
                              "cargoItemType": {
                                "id": null,
                                "description": "Pallet"
                              }
                            }
                          }
                        ],
                        "meta": {
                        },
                        "links": {
                        }
                      },
                      "tenders": {
                        "data": [
                          {
                            "id": "7893b859-9376-454e-9807-2434e4d29a15",
                            "type": "result",
                            "attributes": {
                              "remarks": [

                              ],
                              "carrier": "MSC",
                              "modeOfTransport": "ocean",
                              "id": "7893b859-9376-454e-9807-2434e4d29a15",
                              "origin": "438 80 Landvetter, Sweden",
                              "destination": "88 Henan Middle Road, Shanghai",
                              "originHub": "Gothenburg Port 73 Port",
                              "destinationHub": "Gothenburg Port 74 Port",
                              "pickupAddress": "438 80 Landvetter, Sweden",
                              "deliveryAddress": "88 Henan Middle Road, Shanghai",
                              "serviceLevel": "standard",
                              "total": {
                                "currency": "EUR",
                                "amount": "180.0"
                              },
                              "quotationId": "35b92056-48d6-4b4b-85fc-fa79fa244a0e",
                              "transshipment": null,
                              "estimated": false,
                              "validUntil": "2021-08-26T09:08:26.011Z",
                              "pickupTruckType": "",
                              "deliveryTruckType": "",
                              "pickupCarrier": "SACO",
                              "deliveryCarrier": "SACO",
                              "pickupService": "standard",
                              "deliveryService": "standard",
                              "exchangeRates": {
                                "usd": "0.833333",
                                "base": "EUR"
                              }
                            }
                          }
                        ],
                        "meta": {
                        },
                        "links": {
                        }
                      }
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/quotations/{id}/download": {
      "post": {
        "summary": "Download quotation as PDF",
        "tags": [
          "Quote"
        ],
        "description": "Download quotation as PDF",
        "operationId": "downloadQuotation",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Quotation ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organization_id",
            "in": "query",
            "description": "The current organization ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "format",
            "in": "query",
            "description": "The desired download format (pdf/xlsx)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "cdefdca6-bed4-4abc-9012-15ff98058bd2",
                    "type": "file",
                    "attributes": {
                      "url": "http://localhost:3000/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBaldqIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--8b4d48f99cc05f82bbfaaf1b1893b5b6c446cf8d/offer_cdefdca6-bed4-4abc-9012-15ff98058bd2.pdf?disposition=attachment"
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "tenders": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "tenders"
                ]
              }
            }
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/result_sets/{result_set_id}/results": {
      "get": {
        "summary": "Fetch Results for the Result Set",
        "tags": [
          "Results"
        ],
        "description": "Fetch Results for the Result Set",
        "operationId": "getResults",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "result_set_id",
            "in": "path",
            "description": "ResultSet ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "dcceb187-56e5-4ee1-b243-a1eafc2a933c",
                      "type": "restful",
                      "attributes": {
                        "id": "dcceb187-56e5-4ee1-b243-a1eafc2a933c"
                      }
                    },
                    {
                      "id": "c6b55938-7ba5-44e4-8b85-d8ddd4d45761",
                      "type": "restful",
                      "attributes": {
                        "id": "c6b55938-7ba5-44e4-8b85-d8ddd4d45761"
                      }
                    }
                  ],
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/restfulResponse"
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/results/{id}": {
      "get": {
        "summary": "Fetch Result",
        "tags": [
          "Results"
        ],
        "description": "Fetch Result",
        "operationId": "getResult",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Result ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "2b7634ef-dd23-4beb-bc5b-f4d320480aa7",
                    "type": "result",
                    "attributes": {
                      "id": "2b7634ef-dd23-4beb-bc5b-f4d320480aa7",
                      "carrier": "MSC",
                      "carrierLogo": "http://localhost:3000/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBanFqIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--72f6594b135acf0fe6b84f392c2066808215b263/test-image.jpg",
                      "modesOfTransport": [
                        "ocean"
                      ],
                      "total": {
                        "value": "36.0",
                        "currency": "EUR"
                      },
                      "serviceLevel": "standard",
                      "validUntil": "2021-09-09T09:08:45.429Z",
                      "transitTime": 1,
                      "cargoReadyDate": "2021-08-13T00:00:00.000Z",
                      "cargoDeliveryDate": "2021-09-02T00:00:00.000Z",
                      "origin": "Hamburg",
                      "destination": "Hamburg",
                      "routing": [
                        {
                          "id": "160a54ea-5796-4f2c-814a-624ea7e9394a",
                          "service": "standard",
                          "carrier": "MSC",
                          "mode_of_transport": "ocean",
                          "transit_time": 1,
                          "origin": {
                            "locode": "DEHAM",
                            "city": "",
                            "coordinates": "POINT (11.854048 57.694253)",
                            "address": "Hamburg"
                          },
                          "destination": {
                            "locode": "DEHAM",
                            "city": "",
                            "coordinates": "POINT (11.854048 57.694253)",
                            "address": "Hamburg"
                          }
                        }
                      ]
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "$ref": "#/components/schemas/result"
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/quotations/{quotation_id}/schedules/{id}": {
      "get": {
        "summary": "Fetch available schedules",
        "tags": [
          "Quote"
        ],
        "description": "Fetch available schedules",
        "operationId": "getSchedule",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quotation_id",
            "in": "path",
            "description": "The quotation ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The quotation ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "7997",
                      "type": "trip",
                      "attributes": {
                        "closing": "2021-08-13",
                        "start": "2021-08-17",
                        "end": "2021-09-16",
                        "service": "slowly",
                        "carrier": "Hapag Lloyd",
                        "vessel": null,
                        "voyageCode": null,
                        "tenderId": "a566a7ca-5231-45b8-84cc-9d866eac7fcf"
                      }
                    },
                    {
                      "id": "7998",
                      "type": "trip",
                      "attributes": {
                        "closing": "2021-08-18",
                        "start": "2021-08-22",
                        "end": "2021-09-21",
                        "service": "slowly",
                        "carrier": "Hapag Lloyd",
                        "vessel": null,
                        "voyageCode": null,
                        "tenderId": "a566a7ca-5231-45b8-84cc-9d866eac7fcf"
                      }
                    }
                  ],
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "carrier": {
                                "type": "string"
                              },
                              "closing": {
                                "type": "string"
                              },
                              "end": {
                                "type": "string"
                              },
                              "service": {
                                "type": "string"
                              },
                              "start": {
                                "type": "string"
                              },
                              "tenderId": {
                                "type": "string"
                              },
                              "vessel": {
                                "type": "string",
                                "nullable": true
                              },
                              "voyageCode": {
                                "type": "string",
                                "nullable": true
                              }
                            },
                            "required": [
                              "carrier",
                              "closing",
                              "end",
                              "service",
                              "start",
                              "tenderId",
                              "vessel",
                              "voyageCode"
                            ]
                          }
                        },
                        "required": [
                          "id",
                          "type",
                          "attributes"
                        ]
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/itineraries/{id}/schedules/enabled": {
      "get": {
        "summary": "Fetch status of schedules",
        "tags": [
          "Quote"
        ],
        "description": "Fetch status of schedules",
        "operationId": "getScheduleEnabled",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The itinerary ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "enabled": false
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "enabled": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "enabled"
                      ]
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/organizations/{organization_id}/scope": {
      "get": {
        "summary": "Fetch Scope for the Organization",
        "tags": [
          "Scope"
        ],
        "description": "Fetch Scope for the Organization",
        "operationId": "getScope",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "ec4c894c-5e86-433d-b480-81068b858d11",
                    "type": "scope",
                    "attributes": {
                      "links": {
                        "about": "",
                        "terms": "",
                        "legal": "",
                        "privacy": ""
                      },
                      "id": "8685cf9a-1604-4776-a0f2-dbb3e53253bc",
                      "authMethods": [
                        "password"
                      ],
                      "loginSamlText": "",
                      "loginMandatory": false
                    }
                  },
                  "links": {
                    "about": "",
                    "terms": "",
                    "legal": "",
                    "privacy": ""
                  },
                  "meta": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/scope"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/me/settings": {
      "get": {
        "summary": "Fetch user settings",
        "tags": [
          "Users"
        ],
        "description": "Fetch current settings for the current user. Settings contains information about user's preferred language and\nlocale.\n",
        "operationId": "getSettings",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "cac26413-7ce7-459c-9d25-274853bcfa69",
                    "type": "setting",
                    "attributes": {
                      "language": "en-GB",
                      "locale": "en-GB"
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/settings"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Invalid Credentials"
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/trucking_availabilities": {
      "get": {
        "summary": "Fetch Available Truckings",
        "tags": [
          "Quote"
        ],
        "description": "Fetch Available Truckings",
        "operationId": "getTruckingAvailabilities",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lat",
            "in": "query",
            "description": "Latitude",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lng",
            "in": "query",
            "description": "Longitude",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "load_type",
            "in": "query",
            "description": "Load type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organization_id",
            "in": "query",
            "description": "Organiztio nID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "client",
            "in": "query",
            "description": "The client id of the query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "target",
            "in": "query",
            "description": "Target",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "truckTypes": [
                    "default"
                  ],
                  "truckingAvailable": true
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "truckTypes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "truckingAvailable": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "truckTypes",
                    "truckingAvailable"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/trucking_counterparts": {
      "get": {
        "summary": "Fetch counterparts fgor trucking",
        "tags": [
          "Quote"
        ],
        "description": "Fetch counterparts fgor trucking",
        "operationId": "getTruckingCounterparts",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "The current organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lat",
            "in": "query",
            "description": "Latitude",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lng",
            "in": "query",
            "description": "Longitude",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "load_type",
            "in": "query",
            "description": "Load type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organization_id",
            "in": "query",
            "description": "Organization ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "client",
            "in": "query",
            "description": "The client id of the query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "target",
            "in": "query",
            "description": "Target",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "countryCodes": [

                  ],
                  "truckTypes": [

                  ],
                  "truckingAvailable": false
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "countryCodes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "truckTypes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "truckingAvailable": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "countryCodes",
                    "truckTypes",
                    "truckingAvailable"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/organizations/{organization_id}/trucking_countries": {
      "get": {
        "summary": "Fetch enabled countries for organization",
        "tags": [
          "Trucking"
        ],
        "description": "Fetch enabled countries for organization",
        "operationId": "getTruckingCountries",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Organization ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "load_type",
            "in": "query",
            "description": "Load Type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "location_type",
            "in": "query",
            "description": "Location Type",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "9724",
                      "type": "country",
                      "attributes": {
                        "name": "Sweden",
                        "code": "SE",
                        "flag": "https://restcountries.eu/data/sek.svg"
                      }
                    }
                  ],
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/country"
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Invalid Credentials"
          }
        }
      }
    },
    "/v1/uploads": {
      "post": {
        "summary": "Create a new upload",
        "tags": [
          "Upload"
        ],
        "description": "Create a new upload",
        "operationId": "createUpload",
        "security": [
          {
            "bearerAuth": [

            ]
          }
        ],
        "parameters": [

        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "example": {
                  "message": "File created."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request",
            "content": {
              "application/json": {
                "example": {
                  "message": "Unauthorized Request"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "message": "param is missing or the value is empty: json_data",
                  "status": "bad_request",
                  "code": 400
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "jsonData": {
                    "type": "string",
                    "description": "Provide the data to upload as `application/json`. Serialize the payload as a value for the key `jsonData` (case invariant). Example cURL request:\n```\ncurl --location --request POST 'https://api.itsmycargo.com/v1/uploads' \\\n   --header 'Authorization: Bearer aa0c9a1d-7b50-4c14-ba8e-21a329877ddd' \\\n   --header 'Content-Type: application/json' \\\n   --data-raw '{\n   \"jsonData\": \"{\\\"foo\\\":123}\"\n   }'\n```"
                  }
                }
              }
            }
          },
          "required": true
        }
      }
    },
    "/v1/me": {
      "get": {
        "summary": "Fetch information of current user",
        "tags": [
          "Users"
        ],
        "description": "Fetch information of current user",
        "operationId": "getCurrentUser",
        "security": [
          {
            "oauth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "e63085b3-2ed0-49a7-8e28-96eac573cb5d",
                    "type": "user",
                    "attributes": {
                      "email": "john.doe.8@itsmycargo.test",
                      "organizationId": "9f294371-ada3-4afd-b01e-519cbe060f52",
                      "firstName": "Guest",
                      "lastName": "User 8",
                      "phone": "081 9847079",
                      "companyName": "Guest Company 8",
                      "role": null
                    }
                  },
                  "meta": {
                  },
                  "links": {
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "attributes": {
                          "type": "object",
                          "properties": {
                            "email": {
                              "type": "string",
                              "description": "User's primary email address. This is\n                             validated address that can be used for reaching out."
                            },
                            "organizationId": {
                              "description": "If current user is client, this is the\n                             organization user account is linked with.",
                              "type": "string",
                              "nullable": true
                            },
                            "firstName": {
                              "description": "User's first name, usually given name.",
                              "type": "string"
                            },
                            "lastName": {
                              "description": "User's last name, usually family name.",
                              "type": "string"
                            },
                            "phone": {
                              "description": "User's phone number if given. This generic\n                             information that is not validated or structured.",
                              "type": "string",
                              "nullable": true
                            },
                            "companyName": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "email",
                            "organizationId",
                            "firstName",
                            "lastName",
                            "phone",
                            "companyName"
                          ]
                        }
                      },
                      "required": [
                        "id",
                        "type",
                        "attributes"
                      ]
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Invalid Credentials"
          }
        }
      }
    }
  }
}