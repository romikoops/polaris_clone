apiVersion: apps/v1
kind: Deployment
metadata:
  name: redoc
  labels:
    app.kubernetes.io/component: redoc
    app.kubernetes.io/instance: polaris
    app.kubernetes.io/managed-by: Shipit
    app.kubernetes.io/name: polaris
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 50%
  selector:
    matchLabels:
      app.kubernetes.io/component: redoc
      app.kubernetes.io/instance: polaris
      app.kubernetes.io/name: polaris
  template:
    metadata:
      labels:
        app.kubernetes.io/component: redoc
        app.kubernetes.io/instance: polaris
        app.kubernetes.io/name: polaris
    spec:
      containers:
        - name: redoc
          image: redocly/redoc
          imagePullPolicy: IfNotPresent
          env:
            - name: SPEC_URL
              value: https://api.itsmycargo.com/specs/swagger.json
          ports:
            - containerPort: 80
          livenessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
          startupProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 20
          resources:
            requests:
              cpu: 100m
              memory: 100m
