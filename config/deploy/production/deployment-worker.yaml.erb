apiVersion: apps/v1
kind: Deployment
metadata:
  name: worker
  labels:
    app.kubernetes.io/component: worker
    app.kubernetes.io/instance: polaris
    app.kubernetes.io/managed-by: Shipit
    app.kubernetes.io/name: polaris
  annotations:
    reloader.stakater.com/auto: "true"
    krane.shopify.io/timeout-override: 700s
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 50%
  selector:
    matchLabels:
      app.kubernetes.io/component: worker
      app.kubernetes.io/instance: polaris
      app.kubernetes.io/name: polaris
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: polaris
        app.kubernetes.io/name: polaris
        app.kubernetes.io/component: worker
    spec:
      serviceAccountName: polaris
      securityContext:
        fsGroup: 1000
      terminationGracePeriodSeconds: 630
      initContainers:
      - name: migrations
        image: 003688427525.dkr.ecr.eu-central-1.amazonaws.com/polaris:<%= current_sha %>
        imagePullPolicy: IfNotPresent
        args:
        - bundle
        - exec
        - rails
        - db:abort_if_pending_migrations
        env:
        - name: RAILS_ENV
          value: production
        envFrom:
        - secretRef:
            name: polaris-env
            optional: false
        resources:
          requests:
            cpu: 250m
            memory: 250Mi
          limits:
            memory: 250Mi
        securityContext:
          readOnlyRootFilesystem: false
          runAsNonRoot: true
          runAsUser: 1000
      containers:
        - name: worker
          image: 003688427525.dkr.ecr.eu-central-1.amazonaws.com/polaris:<%= current_sha %>
          imagePullPolicy: IfNotPresent
          args:
          - bundle
          - exec
          - sidekiq
          - --config
          - config/sidekiq.yml
          - --timeout
          - "600"
          env:
            - name: RAILS_ENV
              value: production
            - name: SKYLIGHT_DEPLOY_GIT_SHA
              value: <%= current_sha %>
            - name: PROMETHEUS_EXPORTER
              value: "1"
          envFrom:
            - secretRef:
                name: polaris-env
          ports:
          - containerPort: 7433
          livenessProbe:
            httpGet:
              path: /healthz
              port: 7433
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /healthz
              port: 7433
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
          startupProbe:
            httpGet:
              path: /healthz
              port: 7433
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 10
          resources:
            requests:
              cpu: 1000m
              memory: 12Gi
            limits:
              memory: 12Gi
          securityContext:
            readOnlyRootFilesystem: false
            runAsNonRoot: true
            runAsUser: 1000
        - name: prometheus-exporter
          image: 003688427525.dkr.ecr.eu-central-1.amazonaws.com/polaris:<%= current_sha %>
          imagePullPolicy: IfNotPresent
          args:
            - bundle
            - exec
            - prometheus_exporter
            - -b
            - 0.0.0.0
          ports:
            - containerPort: 9394
              protocol: TCP
          resources:
            requests:
              cpu: 500m
              memory: 1Gi
            limits:
              memory: 1Gi
          securityContext:
            readOnlyRootFilesystem: false
            runAsNonRoot: true
            runAsUser: 1000
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                - polaris
              - key: app.kubernetes.io/component
                operator: In
                values:
                - worker
            topologyKey: kubernetes.io/hostname
