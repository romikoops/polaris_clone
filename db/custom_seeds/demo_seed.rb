# # frozen_string_literal: false

include ExcelTools
# include ShippingTools
# # subdomains = %w(demo greencarrier easyshipping hartrodt)
# subdomains = %w(normanglobal)
# subdomains.each do |sub|
#   tenant = Tenant.find_by_subdomain(sub)

#   shipper = tenant.users.shipper.where(currency: 'GBP').first
#   DataValidator::PricingValidator.new(
#     tenant: tenant.id,
#     user: shipper,
#     key: 'data/normanglobal/pricing_expected_20190103_normanglobal_without_FCL.xlsx',
#     load_type: 'lcl'
#   ).perform

#   # tenant.itineraries.destroy_all
#   # tenant.local_charges.destroy_all
#   # tenant.customs_fees.destroy_all
#   # tenant.trucking_pricings.delete_all
#   # HubTrucking.where(hub_id: tenant.hubs).destroy_all
#   # tenant.hubs.destroy_all

#   # # #   # # # # #Overwrite hubs from excel sheet
#   # puts '# Overwrite hubs from excel sheet'
#   # hubs = 'data/schryver/schryver__hubs.xlsx'
#   # req = { 'key' => hubs }
#   # ExcelTool::HubsOverwriter.new(params: req, _user: shipper).perform

  # raw_data = 'data/schryver/schryver_raw_trucking_data.xlsx'
  # req = { 'key' => raw_data }
  # ExcelTool::RawIgs.new(params: req).perform

#   # # # # # #   # # # # # Overwrite public pricings from excel sheet

  # puts "# Overwrite Local Charges From Sheet"
  # tenant = Tenant.demo
  # shipper = tenant.users.shipper.first
  # hub = tenant.hubs.find_by_name('Shanghai Port')
  # trucking = 'data/demo/demo__trucking_ltl__shanghai_port.xlsx'
  # req = { 'key' => trucking }

  # Trucking::Excel::Inserter.new(params: req, user: shipper, hub_id: hub.id).perform
#   # # #   # # # # # # Overwrite trucking data from excel sheet

#   # path = 'data/schryver/ftl_rates.xlsx'
#   # ftl_data = DataParser::Schryver::FtlParser.new(path: path,
#   #                                                _user: shipper).perform

#   # ftl_results = DataInserter::Schryver::FtlInserter.new(rates: ftl_data,
#   #                                                       _user: shipper,
#   #                                                       tenant: tenant).perform
#   # imp_hubs = DataInserter::PfcNordic::HubInserter.new(data: imp_data,
#   #   tenant: tenant,
#   #   counterpart_hub: 'Copenhagen Port',
#   #   _user: shipper,
#   #   hub_type: 'ocean',
#   #   direction: 'import').perform

#   # res = DataInserter::PfcNordic::RateInserter.new(rates: imp_data,
#   #   tenant: tenant,
#   #   counterpart_hub: 'Copenhagen Port',
#   #   direction: 'import',
#   #   cargo_class: 'lcl').perform

#   # path = "#{Rails.root}/db/dummydata/easyshipping/pfc_export.xlsx"

#   # ex_data = DataParser::PfcNordic::SheetParserExport.new(
#   #   path: path,
#   #   _user: shipper,
#   #   counterpart_hub_name: 'Copenhagen Port',
#   #   hub_type: 'ocean',
#   #   input_language: 'de',
#   #   cargo_class: 'lcl',
#   #   load_type: 'cargo_item'
#   #   ).perform

#   # ex_hubs = DataInserter::PfcNordic::HubInserter.new(
#   #   data: ex_data,
#   #   tenant: tenant,
#   #   counterpart_hub: 'Copenhagen Port',
#   #   _user: shipper,
#   #   hub_type: 'ocean',
#   #   direction: 'export').perform

#   # res = DataInserter::PfcNordic::RateInserter.new(
#   #   rates: ex_data,
#   #   tenant: tenant,
#   #   counterpart_hub: 'Copenhagen Port',
#   #   direction: 'export',
#   #   cargo_class: 'lcl',
#   #   input_language: 'de',).perform

#   # local_charges = File.open("#{Rails.root}/db/dummydata/easyshipping/ez_seeder_local_charges.xlsx")
#   # req = { 'xlsx' => local_charges }
#   # ExcelTool::OverwriteLocalCharges.new(params: req,
#   #   user: shipper).perform
#   # # byebug

#   # ex_lc_data = DataInserter::PfcNordic::LocalChargeInserter.new(data: ex_hubs,
#   #   _user: shipper,
#   #   counterpart_hub_name: 'Copenhagen Port',
#   #   hub_type: 'ocean',
#   #   direction: 'export'
#   # ).perform

#   # imp_lc_data = DataInserter::PfcNordic::LocalChargeInserter.new(data: imp_hubs,
#   #   _user: shipper,
#   #   counterpart_hub_name: 'Copenhagen Port',
#   #   hub_type: 'ocean',
#   #   direction: 'import'
#   # ).perform
# end
# Locations::Location.where(admin_level: nil).destroy_all


locodes = %w(
  NLSPI
NLSCP
NLDGW
NLBLW
NLHNS
NLMDK
NLDLR
NLTHD
NLPDK
NLOAI
NLNLK
NLSRE
NLGRO
NLNWP
NLLAG
NLA2Z
NLMOG
NLGUN
NLHKF
NLMAL
NLPER
NLZBW
NLBOT
NLEUR
NLMSV
NLHEK
NLGRV
NLZUL
NLABK
NLPSI
NLGOW
NLWEM
NLHOD
NLZBJ
NLKLW
NLMHK
NLGRA
NLPTK
NLMSD
NLHRX
NLDFT
NLNDP
NLPIJ
NLBER
NLBEK
NLNAW
NLMON
NLGRZ
NLCPI
NLNIE
NLKAI
NLKRP
NLLEK
NLABL
NLKIJ
NLBLG
NLRID
NLBRR
NLRTM
NLSCI
NLVLA
NLMSL
NLHVH
NLRHO
NLPTG
NLHGV
NLOBL
NLMNH
NLNUD
NLTRJ
NLDOR
NLZWI
NLHIA
NLPAP
NLSLD
NLHGS
NLHXG
NLLBK
NLVLK
NLKWS
NLHGM
NLOUA
NLRWI
NLOWG
NLKOR
NLNBG
NLZHV
NLADV
NLRSW
NLSCE
NLODH
NLOVN
NLROC
NLVPD
NLZWW
NLSAT
NLNWT
NLSIJ
NLDRK
NLMSA
NLHKI
NLGDR
NLODU
NLODT
NLAHZ
NLOGP
NLDBM
NLHZS
NLDBU
NLWDR
NLHKO
NLSLN
NLVRN
NLHNA
NLNZ8
NLAED
NLNIL
NLNUW
NLLRB
NLSWK
NLNEV
NLGND
NLMWE
NLHNK
NLGIS
NLWCM
NLAKK
NLNIS
NLSPR
NLRCP
NLWOU
NLWPL
NLHLE
NLMSN
NLZEG
NLBOS
NLSPG
NLKLD
NLSDB
NLNDH
NLZBK
NLFFJ
NLHJY
NLWIS
NLTER
NLWAG
NLTET
NLDRS
NLBAV
NLSJB
NLKNZ
NLWHT
NLOOE
NLNB4
NLDRM
NLLZA
NLHOZ
NLRDK
NLQDG
NLSAS
NLHIL
NLDZK
NLNDW
NLNOJ
NLVOH
NLKWI
NLKWK
NLRBG
NLWSS
NLVOS
NLLDS
NLLSV
NLVOB
NLRYS
NLWAT
NLLID
NLOGE
NLLDD
NLWRM
NLRAV
NLZOU
NLZWD
NLHWD
NLAPN
NLBOG
NLNWK
NLNDN
NLNWV
NLLMU
NLTEA
NLZMM
NLWBG
NLHAG
NLYPG
NLZTM
NLBHZ
NLWAD
NLMKP
NLZHZ
NLZVH
NLZHU
NLZHN
NLBSK
NLGOU
NLRUW
NLSWJ
NLGDK
NLMOO
NLHCH
NLBGB
NLSHH
NLHSL
NLBRI
NLMIH
NLSTD
NLWOR
NLVLT
NLDEM
NLLSC
NLKMR
NLHAM
NLGOR
NLSJK
NLMKK
NLARK
NLWKD
NLWEA
NLDUS
NLANL
NLROO
NLSCY
NLOBO
NLHON
NLZVG
NLZVB
NLLWG
NLMOE
NLKLU
NLBRD
NLPRB
NLNBV
NLCAA
NLETT
NLZUD
NLRYB
NLOTH
NLOOS
NLQDJ
NLGTB
NLRAA
NLDVT
NLHFW
NLLIJ
NLSGL
NLNGV
NLNDB
NLBGE
NLMUD
NLMDG
NLDKW
NLDEH
NLALH
NLVRA
NLKDS
NLRSH
NLAMB
NLROZ
NLRZG
NLOUM
NLSPD
NLHLR
NLVGG
NLBEN
NLZHO
NLCRU
NLBUE
NLBSP
NLLRU
NLBKA
NLKAG
NLKAA
NLHOP
NLLKL
NLUTP
NLMNT
NLSNW
NLOZU
NLLAV
NLVRD
NLLNO
NLVIV
NLWLN
NLHTH
NLDDO
NLUTB
NLGNK
NLMRT
NLEJK
NLEES
NLSOS
NLHOL
NLHOG
NLCOT
NLLAK
NLMAB
NLLER
NLAMR
NLOVG
NLODK
NLWER
NLGOY
NLSKW
NLKAV
NLEWI
NLORE
NLLIE
NLOPD
NLECD
NLBEC
NLASC
NLBUR
NLHSN
NLHEB
NLLXM
NLASP
NLBSD
NLGEC
NLRUM
NLENP
NLDLL
NLHFN
NLTUL
NLNEJ
NLSET
NLGE7
NLTRC
NLOWK
NLNRK
NLOTL
NLSRJ
NLND5
NLNWE
NLBRO
NLSRD
NLEET
NLRNS
NLNWJ
NLSER
NLBMS
NLWOE
NLPUT
NLDHE
NLPLP
NLPVT
NLZE5
NLSMK
NLSVN
NLOVM
NLBES
NLMGS
NLBZO
NLHRA
NLESB
NLDSE
NLHST
NLLMI
NLHMD
NLUCT
NLMOT
NLGZE
NLRIE
NLBBT
NLWPI
NLLOZ
NLDM9
NLNKU
NLHSE
NLHHU
NLBLU
NLZCH
NLBRK
NLPDJ
NLAAL
NLBRU
NLKEW
NLZBA
NLAMZ
NLWEL
NLGRM
NLHZR
NLD6D
NLAMS
NLDIM
NLSPL
NLZWA
NLBAD
NLAMV
NLODR
NLHVS
NLZAQ
NLKTH
NLLAR
NLBLA
NLWSP
NLABC
NLBSS
NLNAA
NLUIT
NLAAM
NLZAA
NLOSZ
NLBEV
NLVEL
NLHKE
NLIJM
NLVBK
NLHAA
NLZDV
NLOVV
NLBMD
NLHMS
NLAEH
NLBEB
NLHFD
NLVIJ
NLNVP
NLIJI
NLSL7
NLODW
NLNWG
NLUTC
NLMSS
NLMRS
NLRUK
NLMIJ
NLZIT
NLBHV
NLDBI
NLBAA
NLBSB
NLSOE
NLAME
NLLEU
NLDOO
NLMAV
NLWBD
NLDRI
NLBUK
NLHOU
NLTIE
NLZOE
NLMAU
NLING
NLKST
NLOPH
NLCUB
NLEVD
NLVAN
NLLRD
NLHUK
NLHWJ
NLWAB
NLWDN
NLGDM
NLZIE
NLBSE
NLBZM
NLHOH
NLOSH
NLSTE
NLHAL
NLDIN
NLNVO
NLTHO
NLTLB
NLGOI
NLOIW
NLUDH
NLHVK
NLMDB
NLDON
NLBNS
NLRJE
NLAPH
NLWLK
NLDRN
NLSCA
NLSPC
NLKTS
NLHTB
NLRMA
NLVLM
NLZLB
NLGAM
NLHDL
NLHDN
NLHDG
NLKRD
NLEDM
NLEVO
NLVOD
NLKWO
NLMKN
NLILP
NLWTG
NLWWR
NLWWO
NLMDI
NLNMT
NLWBS
NLMVE
NLWRD
NLOHZ
NLBTS
NLDRP
NLWGD
NLZAD
NLJSP
NLAVE
NLSHO
NLURS
NLBKT
NLOOR
NLABB
NLLBG
NLOPP
NLNHO
NLWGN
NLNXO
NLZAG
NLWEH
NLOER
NLSLH
NLOBD
NLSPB
NLZBQ
NLHOO
NLZSC
NLNSW
NLOKP
NLLWK
NL6LN
NLVET
NLZDW
NLWRL
NLOUD
NLANC
NLORL
NLBEG
NLLMM
NLEAD
NLKW2
NLSRT
NLTEU
NLZBR
NLZAM
NLNKV
NLGAR
NLUDL
NLSRP
NLRWD
NLDBR
NLZLD
NLOSO
NLRTT
NLIJK
NLWDE
NLOSD
NLKRU
NLWED
NLKWA
NLBRA
NLD8Z
NLNSS
NLSHE
NLBOR
NLNIU
NLLWD
NLHDR
NLSHR
NLWHD
NLKOG
NLKAT
NLCOL
NLKAD
NLHVO
NLKNT
NLVEP
NLMGN
NLMAC
NLHRE
NLHPN
NLSCJ
NLREK
NLHEC
NLGFN
NLNTR
NLLTO
NLLIT
NLMRK
NLVLE
NLODL
NLHAD
NLELS
NLBEL
NLBOE
NLVHR
NLBBB
NLGAS
NLHPS
NLWAJ
NLRJV
NLLAB
NLWOB
NLERP
NLHSW
NLVSM
NLWTR
NLDUZ
NLHAP
NLHO2
NLWHN
NLLYG
NLNDE
NLLRP
NLOML
NLHES
NLARI
NLLSH
NLMHO
NLLAM
NLMNN
NLBIW
NLHUI
NLAER
NLPUM
NLZOB
NLKWJ
NLWRV
NLWMO
NLKGZ
NLWTZ
NLKRM
NLASD
NLHRN
NLODJ
NLSEK
NLMDM
NLZGD
NLHHW
NLBRL
NLWNK
NLALK
NLKDJ
NLSPT
NLHLO
NLBGN
NLBRX
NLSRL
NLCAS
NLUTG
NLAKL
NLEAZ
NLBAR
NLVHZ
NLACH
NLHRD
NLERM
NLNKK
NLHOE
NLPTN
NLZEW
NLVEE
NLRHE
NLQCU
NLWDB
NLMDL
NLMID
NLARM
NLVER
NLWKP
NLKOK
NLVLI
NLYSK
NLRLA
NLKPL
NLSGP
NLOVZ
NLGOE
NLKOT
NLWZE
NLVGT
NLSMG
NLBXT
NLGMD
NLOSS
NLBHE
NLGAV
NLRAS
NLVKL
NLNUL
NLUDE
NLZLA
NLGEM
NLCUY
NLMLL
NLVEG
NLLSB
NLSND
NLOED
NLVDH
NLQCT
NLBLL
NLVAL
NLRTH
NLBEY
NLBGY
NLWAA
NLHZE
NLHEZ
NLEIN
NLGLD
NLNGN
NLNNN
NLBST
NLOIH
NLSBR
NLHLM
NLSOM
NLAST
NLMIE
NLBEE
NLNIJ
NLWEU
NLZAT
NLMAD
NLGEN
NLWCH
NLOAS
NLDUM
NLBNN
NLDRU
NLZET
NLBEM
NLGET
NLWGW
NLEDE
NLBKM
NLLTN
NLARN
NLHUS
NLOSB
NLRNK
NLVNH
NLHEM
NLWDS
NLGOK
NLLJB
NLHKP
NLWTU
NLAIJ
NLSMN
NLDIK
NLTUH
NLWMH
NLZBE
NLSMV
NLBGG
NLPTT
NLTZA
NLOSL
NLCTO
NLBRZ
NLWWE
NLKHR
NLBGO
NLSDP
NLZBD
NLOHI
NLDEA
NLOOD
NLCDP
NLDHN
NLGRD
NLCZD
NLSCO
NLHPL
NLIZD
NLSLS
NLAAR
NLEED
NLZAX
NLZAH
NLZBM
NLWDP
NLTEE
NLKAP
NLHKT
NLZBY
NLKWT
NLHNZ
NLKLT
NLWSO
NLLSL
NLMZE
NLRIP
NLMEJ
NLOST
NLOIL
NLLNN
NLCSY
NLVLN
NLVPL
NLMAA
NLOVL
NLBEU
NLSMB
NLSTB
NLSIN
NLWLL
NLHUN
NLITT
NLEER
NLTHN
NLWSM
NLBDD
NLMHZ
NLSTR
NLOSP
NLKPE
NLBBR
NLLOB
NLTKM
NLGRS
NLLOO
NLELL
NLGEL
NLGIB
NLLTU
NLDSG
NLDPT
NLLGK
NLHML
NLALE
NLZDM
NLBMT
NLWIG
NLSIV
NLET2
NLNTD
NLMEG
NLVRS
NLEUG
NLESL
NLEPS
NLKDO
NLHAF
NLAMN
NLOBE
NLTLD
NLVKK
NLHGL
NLHNG
NLKEB
NLARL
NLGES
NLZDS
NLWWS
NLLEN
NLLON
NLWIL
NLTGE
NLTRW
NLEMP
NLCHJ
NLTTE
NLBTH
NLZWS
NLELT
NLVHT
NLOSR
NLTHA
NLDOS
NLHTK
NLOLB
NLOSW
NLWPP
NLZAO
NLSWI
NLBNZ
NLSHB
NLZLK
NLENK
NLBOV
NLSCH
NLSBU
NLANP
NLWIW
NLDHR
NLJLD
NLDBG
NLTEX
NLOBG
NLBRS
NLBRV
NLTNZ
NLSLU
NLSVG
NLHUL
NLAXL
NLVLW
NLDEU
NLBAK
NLVNR
NLVIE
NLBOX
NLOPL
NLWAS
NLBRH
NLWRT
NLELX
NLBUD
NLNRW
NLZEV
NLPNN
NLDUI
NLWEV
NLDDM
NLDIR
NLEEE
NLBRM
NLDOE
NLRHD
NLDOI
NLAAN
NLZEM
NLWHL
NLHRB
NLVSR
NLTBO
NLULF
NLGGN
NLDXP
NLZUT
NLEFE
NLSDN
NLWAR
NLLCH
NLVFR
NLRRO
NLBRC
NLAPE
NLKBK
NLTWE
NLDEV
NLZWO
NLHTM
NLHAS
NLNUN
NLELB
NLWZP
NLEPE
NLVAA
NLHDE
NLHRR
NLWAP
NLLEY
NLDRO
NLKAM
NLISM
NLGNM
NLLOM
NLARC
NLREU
NLBSL
NLMDO
NLHSM
NLMTK
NLZAI
NLLTM
NLSVM
NLKNG
NLKGT
NLGHK
NLBEJ
NLEGL
NLHEL
NLZBC
NLKSL
NLZAY
NLVLD
NLLIN
NLMCK
NLHRK
NLBNU
NLNNM
NLHOX
NLNER
NLROG
NLHYY
NLBXE
NLHEE
NLSVW
NLOEL
NLZAJ
NLRST
NLNWS
NLGBC
NLUMO
NLSPA
NLULS
NLGLL
NLEYS
NLELD
NLCDK
NLZBF
NLEPN
NLMEB
NLMED
NLHEU
NLBDV
NLVGR
NLHVL
NLHLD
NLZUN
NLENT
NLMAR
NLDPH
NLHEV
NLBTO
NLBKL
NLHBH
NLZND
NLHRT
NLBNB
NLABN
NLFLE
NLWES
NLDH2
NLDHM
NLBKB
NLNWL
NLVTR
NLVKB
NL5RD
NLVRT
NLGSB
NLDFG
NLETN
NLPSE
NLJEV
NLRG2
NLREE
NLIJH
NLDWK
NLKOE
NLRUI
NLUFE
NLDVB
NLGWU
NLWIT
NLENX
NLNLG
NLTOK
NLCRI
NLRUT
NLBAN
NLLGE
NLMAN
NLKGB
NLVHV
NLDPO
NLDBT
NLGHO
NLBZL
NLOLK
NLOZL
NLWHA
NLOTK
NLSTG
NLHKR
NLOWE
NLSBG
NLIDS
NLLGW
NLBZW
NLEHU
NLSLT
NLSOD
NLNMD
NLOMR
NLRIJ
NLBKH
NLOGA
NLGME
NLOHM
NLSFR
NLWIU
NLSRB
NLHLP
NLSTA
NLMWU
NLKDM
NLBWE
NLZBN
NLZUR
NLKWZ
NLMAK
NLALW
NLTKW
NLDNU
NLRED
NLARD
NLOLS
NLWRP
NLFGM
NLOSM
NLSBM
NLWND
NLVLL
NLVEN
NLTEG
NLVED
NLBFD
NLHRS
NLHSA
NLGBV
NLPAN
NLBLO
NLOMD
NLMSB
NLSWM
NLHAE
NLECH
NLBON
NLSIT
NLGEE
NLSTI
NLELO
NLBEQ
NLZAK
NLMST
NLMRN
NLBNE
NLECK
NLGPN
NLMEC
NLVLS
NLWTW
NLLTE
NLLCV
NLGRN
NLEIB
NLNEE
NLNVD
NLHLT
NLRJS
NLGOO
NLHKH
NLDEL
NLENS
NLAZQ
NLALM
NLBRE
NLOOT
NLWID
NLTBB
NLVSS
NLVRZ
NLVRH
NLBGH
NLDED
NLDAL
NLOMM
NLHOV
NLZWL
NLMEP
NLSTH
NLRWO
NLHVE
NLDIE
NLDWI
NLQDS
NLHET
NLOSI
NLWIJ
NLHNO
NLELE
NLEML
NLESP
NLURK
NLSTW
NLNWD
NLJOU
NLSNG
NLLMR
NLWSD
NLBAL
NLSNK
NLHEG
NLJST
NLBOL
NLWKU
NLWMS
NLFRK
NLWNS
NLWSU
NLTZU
NLHAR
NLSOG
NLBTT
NLSCM
NLKLN
NLSCN
NLVDL
NLSIM
NLATR
NLDRE
NLMLR
NLOOY
NLLTH
NLKEK
NLHUM
NLMOL
NLMOK
NLMLA
NLMBK
NLHEJ
NLVZH
NLNFK
NLNST
NLBHR
NLHRW
NLART
NLEWK
NLWSN
NLDST
NLBVL
NLBUW
NLWXM
NLLNT
NLDRL
NLHTR
NLDWA
NLANT
NLHVD
NLNLD
NLCGH
NLREN
NLHSK
NLWKO
NLEVN
NLDKL
NLDOW
NLHSU
NLWOL
NLRZD
NLOOV
NLDLU
NLWRO
NLSKL
NLZPO
NLLGR
NLGBG
NLHME
NLHMV
NLNAM
NLVNO
NLHSO
NLSC2
NLZWN
NLODN
NLVTH
NLERA
NLLZG
NLFR5
NLHRI
NLNHM
NLBOK
NLAPS
NLHAU
NLDNO
NLKTJ
NLRTU
NLSJO
NLOHE
NLNHE
NLHKD
NLNBU
NLODD
NLLGI
NLMKE
NLSKG
NLTRO
NLNES
NLWTA
NLWRA
NLRDH
NLWDM
NLMRU
NLDNR
NLMNU
NLEGM
NLWIE
NLBGM
NLM9G
NLBRT
NLMUN
NLPRW
NLMRR
NLHLL
NLWHK
NLSAN
NLOBZ
NLSJP
NLHPE
NLRGT
NLSBS
NLDSM
NLENG
NLAJM
NLWRU
NLTND
NLWXN
NLBTG
NLSMO
NLFWR
NLKHM
NLDWG
NLNGA
NLOPE
NLBEZ
NLURE
NLOOG
NLSUA
NLEWO
NLVWO
NLZAC
NLBUI
NLTWY
NLZBB
NLWGE
NLWJS
NLSMI
NLHMI
NLZGE
NLMTN
NLAAH
NLGTN
NLAND
NLGST
NLNNE
NLTNO
NLNTH
NLLAF
NLHEN
NLHBR
NLBRN
NLSVD
NLKER
NLEYL
NLOLZ
NLLOS
NLDEN
NLCOE
NLTRE
NLSCB
NLHBG
NLDKR
NLEMM
NLWEE
NLOHN
NLEMC
NLKLZ
NLDJJ
NLOLD
NLHRV
NLWVG
NLAKR
NLLWR
NLGRU
NLBLM
NLSTN
NLLKK
NLDOK
NLBDA
NLHLW
NLAML
NLBLI
NLDRA
NLSUR
NLWJW
NLBGU
NLOME
NLZWE
NLHKA
NLKLM
NLASS
NLBEI
NLBVI
NLWBK
NLROL
NLZDL
NLVIS
NLLGO
NLPET
NLTOL
NLMRM
NLNUI
NLDEW
NLNDI
NLGSS
NLBTA
NLTAK
NLFOX
NLWBR
NLWHZ
NLKHA
NLLGD
NLOSK
NLSDW
NLSDD
NLEOR
NLZBO
NLWLD
NLMTD
NLNPK
NLODP
NLHEI
NLG7R
NLSMD
NLFIN
NLPAT
NLTPT
NLGWO
NLPZI
NLVSI
NLMKZ
NLZAN
NLOPG
NLOLE
NLLWI
NLFEE
NLBIR
NLLPM
NLFAR
NLTWA
NLNSD
NLNWO
NLTMN
NLTMZ
NLBGW
NLBAF
NLSWL
NLWHU
NLWHO
NLLES
NLZUU
NLEEN
NLZOT
NLVHN
NLLAN
NLKTL
NLEEM
NLRDS
NLNPZ
NLWFM
NLKTN
NLDSI
NLROD
NLPIZ
NLNRG
NLLEE
NLSTK
NLNB3
NLBGR
NLVWD
NLTPH
NL2LL
NLMUS
NLHZD
NLHGZ
NLSAP
NLSLO
NLVDM
NLMEK
NLWSC
NLMWD
NLGRQ
NLLDE
NLBED
NLNTO
NLZUI
NLADU
NLNZI
NLGTG
NLSTS
NLKML
NLEZI
NLAPP
NLSHN
NLDZL
NLMSW
NLULR
NLUTZ
NLMDU
)
ex_locodes = Locations::Name.where(locode: locodes)

puts locodes.count - ex_locodes.count