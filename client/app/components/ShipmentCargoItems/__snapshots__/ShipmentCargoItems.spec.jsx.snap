// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`shallow rendering 1`] = `
<div
  className="layout-row flex-100 layout-wrap layout-align-center-center"
>
  <div
    className="layout-row flex-none layout-wrap layout-align-center-center content_width "
  >
    <div
      className="layout-row flex-100 layout-wrap layout-align-start-center"
    >
      <div
        className="layout-row flex-100 layout-wrap layout-align-stretch"
        key="0"
        name="0-cargoItem"
        style={
          Object {
            "margin": "30px 0",
            "position": "relative",
          }
        }
      >
        <div
          className="flex-100 layout-align-start-center layout-row cargo_unit_header"
        >
          <h3>
            Cargo Group {{index}}
          </h3>
          <div
            className="delete_icon"
            onClick={[Function]}
          >
            Delete
            <i
              className="fa fa-trash"
            />
          </div>
        </div>
        <div
          className="flex-100 layout-row layout-wrap cargo_unit_inputs"
        >
          <div
            className="flex-15 layout-row layout-align-center"
          >
            <[object Object]
              cargoItem={
                Object {
                  "dangerous_goods": false,
                  "description": "FOO",
                  "dimension_x": 13,
                  "dimension_y": 24,
                  "key": 5,
                  "stackable": false,
                }
              }
              handleDelta={[Function]}
              i={0}
              nextStageAttempt={false}
            />
          </div>
          <div
            className="cargo_item_box cargo_item_inputs flex-85"
          >
            <div
              style={
                Object {
                  "position": "relative",
                }
              }
            >
              <div
                className="layout-row flex-100 layout-wrap layout-align-start-center padding_section"
                style={
                  Object {
                    "marginBottom": "20px",
                  }
                }
              >
                <div
                  className="layout-row flex-20 layout-wrap layout-align-start-center input_length"
                >
                  <h4>
                    Length
                  </h4>
                  <div
                    className="flex-90 layout-row input_box"
                    data-event="disable"
                    data-tip=""
                    onBlur={[Function]}
                    onFocus={[Function]}
                    onMouseEnter={[Function]}
                  >
                    <img
                      alt="length"
                      border="0"
                      data-for="RANDOM_KEY_0"
                      data-tip="Length"
                    />
                    <ValidatedInput
                      errorStyles={
                        Object {
                          "fontSize": "10px",
                          "maxWidth": "200px",
                          "top": "32px",
                          "whiteSpace": "normal",
                        }
                      }
                      min="0"
                      name="0-dimension_x"
                      nextStageAttempt={false}
                      onChange={[Function]}
                      placeholder="0"
                      required={true}
                      setFirstRenderInputs={[Function]}
                      step="any"
                      type="number"
                      validationErrors={
                        Object {
                          "isDefaultRequiredValue": "Must be greater than 0",
                          "maxDimension": <p>
                            Maximum length is undefined
                            <br />
                            <span
                              className="emulate_link blue_link"
                              onClick={[Function]}
                            >
                              Request excess dimensions
                            </span>
                          </p>,
                          "nonNegative": "Must be greater than 0",
                        }
                      }
                      validations={
                        Object {
                          "maxDimension": [Function],
                          "nonNegative": [Function],
                        }
                      }
                      value={13}
                      wrapperClassName="flex-60"
                    />
                    <div
                      className="flex-25 layout-row layout-align-center-center"
                    >
                      cm
                    </div>
                  </div>
                </div>
                <div
                  className="layout-row flex-20 layout-wrap layout-align-start-center input_width"
                >
                  <h4>
                    Width
                  </h4>
                  <div
                    className="flex-90 layout-row input_box"
                    data-event="disable"
                    data-tip=""
                    onBlur={[Function]}
                    onFocus={[Function]}
                    onMouseEnter={[Function]}
                  >
                    <img
                      alt="width"
                      border="0"
                      data-for="RANDOM_KEY_0"
                      data-tip="Width"
                    />
                    <ValidatedInput
                      errorStyles={
                        Object {
                          "fontSize": "10px",
                          "maxWidth": "200px",
                          "top": "32px",
                          "whiteSpace": "normal",
                        }
                      }
                      min="0"
                      name="0-dimension_y"
                      nextStageAttempt={false}
                      onChange={[Function]}
                      placeholder="0"
                      required={true}
                      setFirstRenderInputs={[Function]}
                      step="any"
                      type="number"
                      validationErrors={
                        Object {
                          "isDefaultRequiredValue": "Must be greater than 0",
                          "maxDimension": <p>
                            Maximum width is undefined
                            <br />
                            <span
                              className="emulate_link blue_link"
                              onClick={[Function]}
                            >
                              Request excess dimensions
                            </span>
                          </p>,
                          "nonNegative": "Must be greater than 0",
                        }
                      }
                      validations={
                        Object {
                          "maxDimension": [Function],
                          "nonNegative": [Function],
                        }
                      }
                      value={24}
                      wrapperClassName="flex-60"
                    />
                    <div
                      className="flex-25 layout-row layout-align-center-center"
                    >
                      cm
                    </div>
                  </div>
                </div>
                <div
                  className="layout-row flex-20 layout-wrap layout-align-start-center input_height"
                >
                  <h4>
                    Height
                  </h4>
                  <div
                    className="flex-90 layout-row input_box"
                    data-event="disable"
                    data-tip=""
                    onBlur={[Function]}
                    onFocus={[Function]}
                    onMouseEnter={[Function]}
                  >
                    <img
                      alt="height"
                      border="0"
                      data-for="RANDOM_KEY_0"
                      data-tip="Height"
                    />
                    <ValidatedInput
                      errorStyles={
                        Object {
                          "fontSize": "10px",
                          "maxWidth": "200px",
                          "top": "32px",
                          "whiteSpace": "normal",
                        }
                      }
                      min="0"
                      name="0-dimension_z"
                      nextStageAttempt={false}
                      onChange={[Function]}
                      placeholder="0"
                      required={true}
                      setFirstRenderInputs={[Function]}
                      step="any"
                      type="number"
                      validationErrors={
                        Object {
                          "isDefaultRequiredValue": "Must be greater than 0",
                          "maxDimension": <p>
                            Maximum height is undefined
                            <br />
                            <span
                              className="emulate_link blue_link"
                              onClick={[Function]}
                            >
                              Request excess dimensions
                            </span>
                          </p>,
                          "nonNegative": "Must be greater than 0",
                        }
                      }
                      validations={
                        Object {
                          "maxDimension": [Function],
                          "nonNegative": [Function],
                        }
                      }
                      value=""
                      wrapperClassName="flex-60"
                    />
                    <div
                      className="flex-25 layout-row layout-align-center-center"
                    >
                      cm
                    </div>
                  </div>
                </div>
                <div
                  className="flex-5"
                />
                <div
                  className="layout-row flex-30 layout-wrap layout-align-start-center input_weight"
                >
                  <h4>
                    Gross Weight per item
                  </h4>
                  <div
                    className="flex-60 layout-row input_box"
                  >
                    <img
                      alt="weight"
                      border="0"
                      data-for="RANDOM_KEY_0"
                      data-tip="Gross Weight"
                    />
                    <Tooltip
                      color="#333"
                      icon="fa-info-circle"
                      text="payload_in_kg"
                      theme={Object {}}
                      toolText=""
                    />
                    <ValidatedInput
                      errorStyles={
                        Object {
                          "fontSize": "10px",
                          "maxWidth": "200px",
                          "top": "32px",
                          "whiteSpace": "normal",
                        }
                      }
                      name="0-payload_in_kg"
                      nextStageAttempt={false}
                      onChange={[Function]}
                      placeholder="0"
                      required={true}
                      setFirstRenderInputs={[Function]}
                      type="number"
                      validationErrors={
                        Object {
                          "isDefaultRequiredValue": "Must be greater than 0",
                          "maxDimension": <p>
                            Maximum weight is undefined
                            <br />
                            <span
                              className="emulate_link blue_link"
                              onClick={[Function]}
                            >
                              Request excess dimensions
                            </span>
                          </p>,
                          "nonNegative": "Must be greater than 0",
                        }
                      }
                      validations={
                        Object {
                          "maxDimension": [Function],
                          "nonNegative": [Function],
                        }
                      }
                      value=""
                      wrapperClassName="flex-90"
                    />
                    <div
                      className="flex-20 layout-row layout-align-center-center"
                    >
                      kg
                    </div>
                  </div>
                </div>
              </div>
              <div
                className="flex-100 layout-row"
              />
              <div
                className="layout-row flex-100 layout-wrap layout-align-start-center padding_section"
                style={
                  Object {
                    "margin": "20px 0",
                  }
                }
              >
                <div
                  className="layout-row flex-40 layout-wrap layout-align-start-center colli_type"
                >
                  <div
                    style={
                      Object {
                        "width": "95%",
                      }
                    }
                  >
                    <NamedSelect
                      className="select_100"
                      inputProps={
                        Object {
                          "name": "0-colliType",
                        }
                      }
                      name="0-colliType"
                      onChange={[Function]}
                      options={
                        Array [
                          Object {
                            "description": "BAR",
                            "dimension_x": 5,
                            "dimension_y": 6,
                            "key": 7,
                          },
                        ]
                      }
                      placeholder="Select your colli type"
                      showErrors={false}
                    />
                  </div>
                </div>
                <div
                  className="layout-row flex layout-wrap layout-align-end-center cargo_unit_check"
                  onClick={[Function]}
                >
                  <Checkbox
                    checked={true}
                    className=""
                    disabled={true}
                    id="0-stackable"
                    name="0-stackable"
                    onChange={[Function]}
                    onClick={null}
                    size="15px"
                    theme={
                      Object {
                        "colors": Object {
                          "primary": "#333",
                          "secondary": "#fafafa",
                        },
                      }
                    }
                  />
                  <div
                    className="layout-row flex-65 layout-wrap layout-align-start-center"
                  >
                    <label
                      className="input_check flex-none pointy"
                      htmlFor="0-stackable"
                    >
                      <p>
                        Non Stackable
                      </p>
                    </label>
                    <Tooltip
                      color="#333"
                      icon="fa-info-circle"
                      text="non_stackable"
                      theme={Object {}}
                      toolText=""
                    />
                  </div>
                </div>
                <div
                  className="layout-row flex layout-wrap layout-align-start-center cargo_unit_check"
                  onClick={[Function]}
                >
                  <Checkbox
                    checked={false}
                    className=""
                    disabled={true}
                    id="0-dangerous_goods"
                    name="0-dangerous_goods"
                    onChange={[Function]}
                    onClick={null}
                    size="15px"
                    theme={
                      Object {
                        "colors": Object {
                          "primary": "#333",
                          "secondary": "#fafafa",
                        },
                      }
                    }
                  />
                  <div
                    className="layout-row flex-75 layout-wrap layout-align-start-center"
                  >
                    <label
                      className="input_check flex-none pointy"
                      htmlFor="0-dangerous_goods"
                    >
                      <p>
                        Dangerous Goods
                      </p>
                    </label>
                    <Tooltip
                      color="#333"
                      icon="fa-info-circle"
                      text="dangerous_goods"
                      theme={Object {}}
                      toolText=""
                    />
                  </div>
                </div>
              </div>
            </div>
            <div
              className="cargo_item_info expanded flex-100"
            >
              <div
                className="inner_cargo_item_info layout-row flex-100 layout-wrap layout-align-start"
              >
                <div
                  className="flex-25 layout-wrap layout-row"
                >
                  <div
                    className="flex-100 layout-row layout-wrap layout-align-start-center charge_volume"
                  >
                    <p
                      className="input_label flex-none"
                    >
                      Total
                       
                      Volume
                      :  
                      <span
                        className="input_value"
                      >
                         m
                        <sup
                          style={
                            Object {
                              "fontSize": "10px",
                              "height": "17px",
                              "marginLeft": "1px",
                            }
                          }
                        >
                          3
                        </sup>
                      </span>
                    </p>
                  </div>
                  <div
                    className="chargeable_weight layout-row flex-100 layout-wrap layout-align-start-center"
                  >
                    <div
                      className="layout-row flex-none layout-wrap layout-align-end-center"
                    >
                      <p
                        className="subchargeable flex-none"
                      >
                        Chargeable:
                      </p>
                    </div>
                    <div
                      className="chargeable_weight_values flex layout-row layout-align-start-center"
                    />
                  </div>
                </div>
                <div
                  className="padding_left flex-25 layout-wrap layout-row"
                >
                  <div
                    className="flex-100 layout-row layout-wrap layout-align-start-center charge_volume"
                  >
                    <p
                      className="input_label flex-none"
                    >
                      Total
                       
                      NO_TRANSLATION | key "common:weight"
                      :  
                      <span
                        className="input_value"
                      >
                         kg
                      </span>
                    </p>
                  </div>
                  <div
                    className="chargeable_weight layout-row flex-100 layout-wrap layout-align-start-center"
                  >
                    <div
                      className="layout-row flex-none layout-wrap layout-align-end-center"
                    >
                      <p
                        className="subchargeable flex-none"
                      >
                        Chargeable:
                      </p>
                    </div>
                    <div
                      className="chargeable_weight_values flex layout-row layout-align-start-center"
                    />
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="layout-row flex-100 layout-wrap layout-align-start-center"
    >
      <div
        className="add_unit_wrapper content_width"
      >
        <div
          className="layout-row flex-none add_unit layout-wrap layout-align-center-center"
          onClick={[Function]}
        >
          <i
            className="fa fa-plus-square-o clip"
            style={
              Object {
                "background": "-webkit-linear-gradient(left, #333,#fafafa)",
              }
            }
          />
          <p>
             
            Add Cargo Group
          </p>
        </div>
      </div>
    </div>
  </div>
  <style>
    
            .colli_type .Select-control {
              display: flex;
              position: relative;
              border: 1px solid #E0E0E0;
              box-shadow: none;
              background: transparent;
            }
            .colli_type .Select {
              box-shadow: none;
            }
            .colli_type .Select-value {
              background: transparent;
              box-shadow: none;
              border: 1px solid #E0E0E0;
            }
            .colli_type .Select-placeholder {
              background: transparent;
              box-shadow: none;
              padding-bottom: 5px;
              border: 1px solid #E0E0E0;
            }
            .colli_type .Select-clear-zone {
              position: absolute;
              right: 25px;
              top: 6px;
            }
            .colli_type .Select-arrow-zone {
              position: absolute;
              right: 0;
              top: 10px;
            }
          
  </style>
</div>
`;
