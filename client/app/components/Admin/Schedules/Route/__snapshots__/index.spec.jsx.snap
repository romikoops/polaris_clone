// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`document.viewer is falsy 1`] = `
<GenericError
  t={[Function]}
  theme={
    Object {
      "colors": Object {
        "primary": "#333",
        "secondary": "#fafafa",
      },
    }
  }
>
  <div
    className="flex-100 layout-row layout-wrap layout-align-space-around-start extra_padding_left padding_top"
  >
    <div
      className="flex-80 layout-row layout-align-start-start layout-wrap"
    >
      <div
        className="flex-100 layout-row layout-align-space-between-center sec_title"
      >
        <TextHeading
          color=""
          size={1}
          text="Schedules: undefined"
          theme={
            Object {
              "colors": Object {
                "primary": "#333",
                "secondary": "#fafafa",
              },
            }
          }
        />
      </div>
      <div
        className="layout-row flex-95 layout-wrap layout-align-start-center"
      >
        <ReactTable
          AggregatedComponent={[Function]}
          ExpanderComponent={[Function]}
          FilterComponent={[Function]}
          LoadingComponent={[Function]}
          NoDataComponent={[Function]}
          PadRowComponent={[Function]}
          PaginationComponent={[Function]}
          PivotValueComponent={[Function]}
          ResizerComponent={[Function]}
          TableComponent={[Function]}
          TbodyComponent={[Function]}
          TdComponent={[Function]}
          TfootComponent={[Function]}
          ThComponent={[Function]}
          TheadComponent={[Function]}
          TrComponent={[Function]}
          TrGroupComponent={[Function]}
          aggregatedKey="_aggregated"
          className="flex-100 height_100"
          collapseOnDataChange={true}
          collapseOnPageChange={true}
          collapseOnSortingChange={true}
          column={
            Object {
              "Aggregated": undefined,
              "Cell": undefined,
              "Expander": undefined,
              "Filter": undefined,
              "Footer": undefined,
              "Header": undefined,
              "Pivot": undefined,
              "PivotValue": undefined,
              "aggregate": undefined,
              "className": "",
              "filterAll": false,
              "filterMethod": undefined,
              "filterable": undefined,
              "footerClassName": "",
              "footerStyle": Object {},
              "getFooterProps": [Function],
              "getHeaderProps": [Function],
              "getProps": [Function],
              "headerClassName": "",
              "headerStyle": Object {},
              "minWidth": 100,
              "resizable": undefined,
              "show": true,
              "sortMethod": undefined,
              "sortable": undefined,
              "style": Object {},
            }
          }
          columns={
            Array [
              Object {
                "Cell": [Function],
                "Header": "Closing Date",
                "accessor": "closing_date",
              },
              Object {
                "Cell": [Function],
                "Header": "ETD",
                "accessor": "start_date",
              },
              Object {
                "Cell": [Function],
                "Header": "ETA",
                "accessor": "end_date",
              },
              Object {
                "Header": "Voyage Code",
                "accessor": "voyage_code",
              },
              Object {
                "Header": "Vessel Name",
                "accessor": "vessel",
              },
            ]
          }
          data={Array []}
          defaultExpanded={Object {}}
          defaultFilterMethod={[Function]}
          defaultFiltered={Array []}
          defaultPageSize={20}
          defaultResized={Array []}
          defaultSortDesc={false}
          defaultSortMethod={[Function]}
          defaultSorted={
            Array [
              Object {
                "desc": true,
                "id": "closing_date",
              },
            ]
          }
          expanderDefaults={
            Object {
              "filterable": false,
              "resizable": false,
              "sortable": false,
              "width": 35,
            }
          }
          filterable={false}
          freezeWhenExpanded={false}
          getLoadingProps={[Function]}
          getNoDataProps={[Function]}
          getPaginationProps={[Function]}
          getProps={[Function]}
          getResizerProps={[Function]}
          getTableProps={[Function]}
          getTbodyProps={[Function]}
          getTdProps={[Function]}
          getTfootProps={[Function]}
          getTfootTdProps={[Function]}
          getTfootTrProps={[Function]}
          getTheadFilterProps={[Function]}
          getTheadFilterThProps={[Function]}
          getTheadFilterTrProps={[Function]}
          getTheadGroupProps={[Function]}
          getTheadGroupThProps={[Function]}
          getTheadGroupTrProps={[Function]}
          getTheadProps={[Function]}
          getTheadThProps={[Function]}
          getTheadTrProps={[Function]}
          getTrGroupProps={[Function]}
          getTrProps={[Function]}
          groupedByPivotKey="_groupedByPivot"
          indexKey="_index"
          loading={false}
          loadingText="Loading..."
          multiSort={true}
          nestingLevelKey="_nestingLevel"
          nextText="Next"
          noDataText="No rows found"
          ofText="of"
          onFetchData={[Function]}
          originalKey="_original"
          pageSizeOptions={
            Array [
              5,
              10,
              20,
              25,
              50,
              100,
            ]
          }
          pageText="Page"
          pivotDefaults={Object {}}
          pivotIDKey="_pivotID"
          pivotValKey="_pivotVal"
          previousText="Previous"
          resizable={true}
          resolveData={[Function]}
          rowsText="rows"
          showPageJump={true}
          showPageSizeOptions={true}
          showPagination={true}
          showPaginationBottom={true}
          showPaginationTop={false}
          sortable={true}
          style={Object {}}
          subRowsKey="_subRows"
        />
      </div>
    </div>
    <div
      className=" flex-20 layout-row layout-wrap layout-align-center-start"
    >
      <SideOptionsBox
        content={
          <div>
            <div
              className="flex-100 layout-row layout-wrap layout-align-center-start input_box_full"
            >
              <input
                className="flex-100"
                onChange={[Function]}
                placeholder="Search..."
                type="text"
                value=""
              />
            </div>
          </div>
        }
        flexOptions="flex-100"
        header="Filters"
      />
      <SideOptionsBox
        content={
          <div
            className="flex-100 layout-row layout-wrap layout-align-center-start"
          >
            <CollapsingBar
              collapsed={true}
              content={
                <div>
                  <div
                    className="action_section flex-100 layout-row layout-align-center-center layout-wrap"
                  >
                    <p
                      className="flex-80"
                    >
                      Upload undefined Schedules Sheet
                    </p>
                    <FileUploader
                      dispatchFn={[Function]}
                      formClasses=""
                      size="small"
                      square={false}
                      t={[Function]}
                      text="Train Schedules .xlsx"
                      theme={
                        Object {
                          "colors": Object {
                            "primary": "#333",
                            "secondary": "#fafafa",
                          },
                        }
                      }
                      tooltip=""
                      type="xlsx"
                      uploadFn={null}
                    />
                  </div>
                </div>
              }
              contentHeader=""
              faClass="fa fa-cloud-upload"
              handleCollapser={[Function]}
              headerWrapClasses=""
              hideIcon={false}
              mainWrapperStyle={Object {}}
              minHeight=""
              parentClass=""
              showArrow={true}
              startCollapsed={false}
              text="Upload Data"
              theme={
                Object {
                  "colors": Object {
                    "primary": "#333",
                    "secondary": "#fafafa",
                  },
                }
              }
              wrapperContentClasses=""
            />
            <CollapsingBar
              collapsed={true}
              content={
                <div>
                  <div
                    className="action_section flex-100 layout-row layout-wrap layout-align-center-center"
                  >
                    <p
                      className="flex-80"
                    >
                      Download Schedules Sheet
                    </p>
                    <DocumentsDownloader
                      disabled={false}
                      documentDispatch={null}
                      downloadUrls={Object {}}
                      loading={false}
                      options={
                        Object {
                          "itinerary_id": 1,
                        }
                      }
                      size="small"
                      square={false}
                      t={[Function]}
                      target="schedules"
                      theme={
                        Object {
                          "colors": Object {
                            "primary": "#333",
                            "secondary": "#fafafa",
                          },
                        }
                      }
                      tooltip=""
                    />
                  </div>
                </div>
              }
              contentHeader=""
              faClass="fa fa-cloud-download"
              handleCollapser={[Function]}
              headerWrapClasses=""
              hideIcon={false}
              mainWrapperStyle={Object {}}
              minHeight=""
              parentClass=""
              showArrow={true}
              startCollapsed={false}
              text="Download Data"
              theme={
                Object {
                  "colors": Object {
                    "primary": "#333",
                    "secondary": "#fafafa",
                  },
                }
              }
              wrapperContentClasses=""
            />
            <CollapsingBar
              collapsed={true}
              content={
                <div
                  className="action_section flex-100 layout-row layout-wrap layout-align-center-center"
                >
                  <div
                    className="flex-100 layout-row layout-wrap layout-align-center-center sec_upload"
                  >
                    <p
                      className="flex-80"
                    >
                      Create/ Upload Schedules
                    </p>
                    <RoundButton
                      active={true}
                      back={false}
                      classNames=""
                      disabled={false}
                      flexContainer="100"
                      handleDisabled={null}
                      handleNext={[Function]}
                      icon=""
                      iconClass="fa-plus"
                      inverse={false}
                      size="small"
                      text="New"
                      theme={
                        Object {
                          "colors": Object {
                            "primary": "#333",
                            "secondary": "#fafafa",
                          },
                        }
                      }
                    />
                    <ReactTooltip
                      className="tooltip"
                      effect="solid"
                      id="tooltipId"
                      insecure={true}
                      resizeHide={true}
                      wrapper="div"
                    />
                  </div>
                </div>
              }
              contentHeader=""
              faClass="fa fa-plus-circle"
              handleCollapser={[Function]}
              headerWrapClasses=""
              hideIcon={false}
              mainWrapperStyle={Object {}}
              minHeight=""
              parentClass=""
              showArrow={true}
              startCollapsed={false}
              text="Generate Schedules"
              theme={
                Object {
                  "colors": Object {
                    "primary": "#333",
                    "secondary": "#fafafa",
                  },
                }
              }
              wrapperContentClasses=""
            />
          </div>
        }
        flexOptions="flex-100"
        header="Data manager"
      />
    </div>
  </div>
</GenericError>
`;

exports[`scheduleData is falsy 1`] = `""`;

exports[`shallow render 1`] = `
<GenericError
  t={[Function]}
  theme={
    Object {
      "colors": Object {
        "primary": "#333",
        "secondary": "#fafafa",
      },
    }
  }
>
  <div
    className="flex-100 layout-row layout-wrap layout-align-space-around-start extra_padding_left padding_top"
  >
    <AdminUploadsSuccess
      closeDialog={[Function]}
      data={Object {}}
      t={[Function]}
      theme={
        Object {
          "colors": Object {
            "primary": "#333",
            "secondary": "#fafafa",
          },
        }
      }
    />
    <div
      className="flex-80 layout-row layout-align-start-start layout-wrap"
    >
      <div
        className="flex-100 layout-row layout-align-space-between-center sec_title"
      >
        <TextHeading
          color=""
          size={1}
          text="Schedules: undefined"
          theme={
            Object {
              "colors": Object {
                "primary": "#333",
                "secondary": "#fafafa",
              },
            }
          }
        />
      </div>
      <div
        className="layout-row flex-95 layout-wrap layout-align-start-center"
      >
        <ReactTable
          AggregatedComponent={[Function]}
          ExpanderComponent={[Function]}
          FilterComponent={[Function]}
          LoadingComponent={[Function]}
          NoDataComponent={[Function]}
          PadRowComponent={[Function]}
          PaginationComponent={[Function]}
          PivotValueComponent={[Function]}
          ResizerComponent={[Function]}
          TableComponent={[Function]}
          TbodyComponent={[Function]}
          TdComponent={[Function]}
          TfootComponent={[Function]}
          ThComponent={[Function]}
          TheadComponent={[Function]}
          TrComponent={[Function]}
          TrGroupComponent={[Function]}
          aggregatedKey="_aggregated"
          className="flex-100 height_100"
          collapseOnDataChange={true}
          collapseOnPageChange={true}
          collapseOnSortingChange={true}
          column={
            Object {
              "Aggregated": undefined,
              "Cell": undefined,
              "Expander": undefined,
              "Filter": undefined,
              "Footer": undefined,
              "Header": undefined,
              "Pivot": undefined,
              "PivotValue": undefined,
              "aggregate": undefined,
              "className": "",
              "filterAll": false,
              "filterMethod": undefined,
              "filterable": undefined,
              "footerClassName": "",
              "footerStyle": Object {},
              "getFooterProps": [Function],
              "getHeaderProps": [Function],
              "getProps": [Function],
              "headerClassName": "",
              "headerStyle": Object {},
              "minWidth": 100,
              "resizable": undefined,
              "show": true,
              "sortMethod": undefined,
              "sortable": undefined,
              "style": Object {},
            }
          }
          columns={
            Array [
              Object {
                "Cell": [Function],
                "Header": "Closing Date",
                "accessor": "closing_date",
              },
              Object {
                "Cell": [Function],
                "Header": "ETD",
                "accessor": "start_date",
              },
              Object {
                "Cell": [Function],
                "Header": "ETA",
                "accessor": "end_date",
              },
              Object {
                "Header": "Voyage Code",
                "accessor": "voyage_code",
              },
              Object {
                "Header": "Vessel Name",
                "accessor": "vessel",
              },
            ]
          }
          data={Array []}
          defaultExpanded={Object {}}
          defaultFilterMethod={[Function]}
          defaultFiltered={Array []}
          defaultPageSize={20}
          defaultResized={Array []}
          defaultSortDesc={false}
          defaultSortMethod={[Function]}
          defaultSorted={
            Array [
              Object {
                "desc": true,
                "id": "closing_date",
              },
            ]
          }
          expanderDefaults={
            Object {
              "filterable": false,
              "resizable": false,
              "sortable": false,
              "width": 35,
            }
          }
          filterable={false}
          freezeWhenExpanded={false}
          getLoadingProps={[Function]}
          getNoDataProps={[Function]}
          getPaginationProps={[Function]}
          getProps={[Function]}
          getResizerProps={[Function]}
          getTableProps={[Function]}
          getTbodyProps={[Function]}
          getTdProps={[Function]}
          getTfootProps={[Function]}
          getTfootTdProps={[Function]}
          getTfootTrProps={[Function]}
          getTheadFilterProps={[Function]}
          getTheadFilterThProps={[Function]}
          getTheadFilterTrProps={[Function]}
          getTheadGroupProps={[Function]}
          getTheadGroupThProps={[Function]}
          getTheadGroupTrProps={[Function]}
          getTheadProps={[Function]}
          getTheadThProps={[Function]}
          getTheadTrProps={[Function]}
          getTrGroupProps={[Function]}
          getTrProps={[Function]}
          groupedByPivotKey="_groupedByPivot"
          indexKey="_index"
          loading={false}
          loadingText="Loading..."
          multiSort={true}
          nestingLevelKey="_nestingLevel"
          nextText="Next"
          noDataText="No rows found"
          ofText="of"
          onFetchData={[Function]}
          originalKey="_original"
          pageSizeOptions={
            Array [
              5,
              10,
              20,
              25,
              50,
              100,
            ]
          }
          pageText="Page"
          pivotDefaults={Object {}}
          pivotIDKey="_pivotID"
          pivotValKey="_pivotVal"
          previousText="Previous"
          resizable={true}
          resolveData={[Function]}
          rowsText="rows"
          showPageJump={true}
          showPageSizeOptions={true}
          showPagination={true}
          showPaginationBottom={true}
          showPaginationTop={false}
          sortable={true}
          style={Object {}}
          subRowsKey="_subRows"
        />
      </div>
    </div>
    <div
      className=" flex-20 layout-row layout-wrap layout-align-center-start"
    >
      <SideOptionsBox
        content={
          <div>
            <div
              className="flex-100 layout-row layout-wrap layout-align-center-start input_box_full"
            >
              <input
                className="flex-100"
                onChange={[Function]}
                placeholder="Search..."
                type="text"
                value=""
              />
            </div>
          </div>
        }
        flexOptions="flex-100"
        header="Filters"
      />
      <SideOptionsBox
        content={
          <div
            className="flex-100 layout-row layout-wrap layout-align-center-start"
          >
            <CollapsingBar
              collapsed={true}
              content={
                <div>
                  <div
                    className="action_section flex-100 layout-row layout-align-center-center layout-wrap"
                  >
                    <p
                      className="flex-80"
                    >
                      Upload undefined Schedules Sheet
                    </p>
                    <FileUploader
                      dispatchFn={[Function]}
                      formClasses=""
                      size="small"
                      square={false}
                      t={[Function]}
                      text="Train Schedules .xlsx"
                      theme={
                        Object {
                          "colors": Object {
                            "primary": "#333",
                            "secondary": "#fafafa",
                          },
                        }
                      }
                      tooltip=""
                      type="xlsx"
                      uploadFn={null}
                    />
                  </div>
                </div>
              }
              contentHeader=""
              faClass="fa fa-cloud-upload"
              handleCollapser={[Function]}
              headerWrapClasses=""
              hideIcon={false}
              mainWrapperStyle={Object {}}
              minHeight=""
              parentClass=""
              showArrow={true}
              startCollapsed={false}
              text="Upload Data"
              theme={
                Object {
                  "colors": Object {
                    "primary": "#333",
                    "secondary": "#fafafa",
                  },
                }
              }
              wrapperContentClasses=""
            />
            <CollapsingBar
              collapsed={true}
              content={
                <div>
                  <div
                    className="action_section flex-100 layout-row layout-wrap layout-align-center-center"
                  >
                    <p
                      className="flex-80"
                    >
                      Download Schedules Sheet
                    </p>
                    <DocumentsDownloader
                      disabled={false}
                      documentDispatch={null}
                      downloadUrls={Object {}}
                      loading={false}
                      options={
                        Object {
                          "itinerary_id": 1,
                        }
                      }
                      size="small"
                      square={false}
                      t={[Function]}
                      target="schedules"
                      theme={
                        Object {
                          "colors": Object {
                            "primary": "#333",
                            "secondary": "#fafafa",
                          },
                        }
                      }
                      tooltip=""
                    />
                  </div>
                </div>
              }
              contentHeader=""
              faClass="fa fa-cloud-download"
              handleCollapser={[Function]}
              headerWrapClasses=""
              hideIcon={false}
              mainWrapperStyle={Object {}}
              minHeight=""
              parentClass=""
              showArrow={true}
              startCollapsed={false}
              text="Download Data"
              theme={
                Object {
                  "colors": Object {
                    "primary": "#333",
                    "secondary": "#fafafa",
                  },
                }
              }
              wrapperContentClasses=""
            />
            <CollapsingBar
              collapsed={true}
              content={
                <div
                  className="action_section flex-100 layout-row layout-wrap layout-align-center-center"
                >
                  <div
                    className="flex-100 layout-row layout-wrap layout-align-center-center sec_upload"
                  >
                    <p
                      className="flex-80"
                    >
                      Create/ Upload Schedules
                    </p>
                    <RoundButton
                      active={true}
                      back={false}
                      classNames=""
                      disabled={false}
                      flexContainer="100"
                      handleDisabled={null}
                      handleNext={[Function]}
                      icon=""
                      iconClass="fa-plus"
                      inverse={false}
                      size="small"
                      text="New"
                      theme={
                        Object {
                          "colors": Object {
                            "primary": "#333",
                            "secondary": "#fafafa",
                          },
                        }
                      }
                    />
                    <ReactTooltip
                      className="tooltip"
                      effect="solid"
                      id="tooltipId"
                      insecure={true}
                      resizeHide={true}
                      wrapper="div"
                    />
                  </div>
                </div>
              }
              contentHeader=""
              faClass="fa fa-plus-circle"
              handleCollapser={[Function]}
              headerWrapClasses=""
              hideIcon={false}
              mainWrapperStyle={Object {}}
              minHeight=""
              parentClass=""
              showArrow={true}
              startCollapsed={false}
              text="Generate Schedules"
              theme={
                Object {
                  "colors": Object {
                    "primary": "#333",
                    "secondary": "#fafafa",
                  },
                }
              }
              wrapperContentClasses=""
            />
          </div>
        }
        flexOptions="flex-100"
        header="Data manager"
      />
    </div>
  </div>
</GenericError>
`;

exports[`state.showList is false 1`] = `
<GenericError
  t={[Function]}
  theme={
    Object {
      "colors": Object {
        "primary": "#333",
        "secondary": "#fafafa",
      },
    }
  }
>
  <div
    className="flex-100 layout-row layout-wrap layout-align-space-around-start extra_padding_left padding_top"
  >
    <AdminUploadsSuccess
      closeDialog={[Function]}
      data={Object {}}
      t={[Function]}
      theme={
        Object {
          "colors": Object {
            "primary": "#333",
            "secondary": "#fafafa",
          },
        }
      }
    />
    <div
      className="flex-80 layout-row layout-align-start-start layout-wrap"
    >
      <div
        className="flex-100 layout-row layout-align-space-between-center sec_title"
      >
        <TextHeading
          color=""
          size={1}
          text="Schedules: undefined"
          theme={
            Object {
              "colors": Object {
                "primary": "#333",
                "secondary": "#fafafa",
              },
            }
          }
        />
      </div>
      <div
        className="layout-row flex-95 layout-wrap layout-align-start-center"
      >
        <AdminScheduleGenerator
          hubs={Array []}
          itineraries={Array []}
          itinerary={
            Object {
              "id": 1,
            }
          }
          t={[Function]}
          theme={
            Object {
              "colors": Object {
                "primary": "#333",
                "secondary": "#fafafa",
              },
            }
          }
          vehicleTypes={Array []}
        />
      </div>
    </div>
    <div
      className=" flex-20 layout-row layout-wrap layout-align-center-start"
    >
      <SideOptionsBox
        content={
          <div>
            <div
              className="flex-100 layout-row layout-wrap layout-align-center-start input_box_full"
            >
              <input
                className="flex-100"
                onChange={[Function]}
                placeholder="Search..."
                type="text"
                value=""
              />
            </div>
          </div>
        }
        flexOptions="flex-100"
        header="Filters"
      />
      <SideOptionsBox
        content={
          <div
            className="flex-100 layout-row layout-wrap layout-align-center-start"
          >
            <CollapsingBar
              collapsed={true}
              content={
                <div>
                  <div
                    className="action_section flex-100 layout-row layout-align-center-center layout-wrap"
                  >
                    <p
                      className="flex-80"
                    >
                      Upload undefined Schedules Sheet
                    </p>
                    <FileUploader
                      dispatchFn={[Function]}
                      formClasses=""
                      size="small"
                      square={false}
                      t={[Function]}
                      text="Train Schedules .xlsx"
                      theme={
                        Object {
                          "colors": Object {
                            "primary": "#333",
                            "secondary": "#fafafa",
                          },
                        }
                      }
                      tooltip=""
                      type="xlsx"
                      uploadFn={null}
                    />
                  </div>
                </div>
              }
              contentHeader=""
              faClass="fa fa-cloud-upload"
              handleCollapser={[Function]}
              headerWrapClasses=""
              hideIcon={false}
              mainWrapperStyle={Object {}}
              minHeight=""
              parentClass=""
              showArrow={true}
              startCollapsed={false}
              text="Upload Data"
              theme={
                Object {
                  "colors": Object {
                    "primary": "#333",
                    "secondary": "#fafafa",
                  },
                }
              }
              wrapperContentClasses=""
            />
            <CollapsingBar
              collapsed={true}
              content={
                <div>
                  <div
                    className="action_section flex-100 layout-row layout-wrap layout-align-center-center"
                  >
                    <p
                      className="flex-80"
                    >
                      Download Schedules Sheet
                    </p>
                    <DocumentsDownloader
                      disabled={false}
                      documentDispatch={null}
                      downloadUrls={Object {}}
                      loading={false}
                      options={
                        Object {
                          "itinerary_id": 1,
                        }
                      }
                      size="small"
                      square={false}
                      t={[Function]}
                      target="schedules"
                      theme={
                        Object {
                          "colors": Object {
                            "primary": "#333",
                            "secondary": "#fafafa",
                          },
                        }
                      }
                      tooltip=""
                    />
                  </div>
                </div>
              }
              contentHeader=""
              faClass="fa fa-cloud-download"
              handleCollapser={[Function]}
              headerWrapClasses=""
              hideIcon={false}
              mainWrapperStyle={Object {}}
              minHeight=""
              parentClass=""
              showArrow={true}
              startCollapsed={false}
              text="Download Data"
              theme={
                Object {
                  "colors": Object {
                    "primary": "#333",
                    "secondary": "#fafafa",
                  },
                }
              }
              wrapperContentClasses=""
            />
            <CollapsingBar
              collapsed={true}
              content={
                <div
                  className="action_section flex-100 layout-row layout-wrap layout-align-center-center"
                >
                  <RoundButton
                    active={false}
                    back={true}
                    classNames=""
                    disabled={false}
                    flexContainer="100"
                    handleDisabled={null}
                    handleNext={[Function]}
                    icon=""
                    iconClass="fa-th-list"
                    inverse={false}
                    size="small"
                    text="Back to list"
                    theme={
                      Object {
                        "colors": Object {
                          "primary": "#333",
                          "secondary": "#fafafa",
                        },
                      }
                    }
                  />
                </div>
              }
              contentHeader=""
              faClass="fa fa-plus-circle"
              handleCollapser={[Function]}
              headerWrapClasses=""
              hideIcon={false}
              mainWrapperStyle={Object {}}
              minHeight=""
              parentClass=""
              showArrow={true}
              startCollapsed={false}
              text="Generate Schedules"
              theme={
                Object {
                  "colors": Object {
                    "primary": "#333",
                    "secondary": "#fafafa",
                  },
                }
              }
              wrapperContentClasses=""
            />
          </div>
        }
        flexOptions="flex-100"
        header="Data manager"
      />
    </div>
  </div>
</GenericError>
`;
