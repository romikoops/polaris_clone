// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`itineraryData is falsy 1`] = `""`;

exports[`shallow render 1`] = `
<div
  className="flex-100 layout-row layout-wrap layout-align-start-start extra_padding_left"
>
  <div
    className="flex-95 layout-row layout-align-space-between-center sec_title"
  >
    <p
      className=" sec_title_text flex-none"
      style="#333"
    >
      NAME
    </p>
    <div
      className="flex-40 layout-row layout-align-space-between-center"
    >
      <div
        className="flex-40 layout-row layout-align-end-center"
      >
        <NamedSelect
          className="flex-100"
          onChange={[Function]}
          options={
            Array [
              Object {
                "label": "Pricings",
                "value": "pricings",
              },
              Object {
                "label": "Schedules",
                "value": "schedules",
              },
            ]
          }
          placeholder="Jump To..."
          theme={
            Object {
              "colors": Object {
                "primary": "#333",
                "secondary": "#fafafa",
              },
            }
          }
        />
      </div>
      <div
        className="flex-55 layout-row layout-align-end-center"
      >
        <RoundButton
          active={false}
          back={false}
          classNames=""
          disabled={false}
          flexContainer="100"
          handleDisabled={null}
          handleNext={[Function]}
          icon=""
          iconClass="fa-trash"
          inverse={false}
          size="small"
          text="Delete"
          theme={
            Object {
              "colors": Object {
                "primary": "#333",
                "secondary": "#fafafa",
              },
            }
          }
        />
      </div>
    </div>
  </div>
  <div
    className="layout-row flex-95 layout-wrap layout-align-start-center"
  >
    <div
      className="flex-100 layout-row layout-align-space-between-center sec_header"
    >
      <p
        className=" sec_header_text flex-none"
      >
         
        Route Stops
      </p>
    </div>
    <div
      className="flex-100 layout-row layout-wrap layout-align-start-start"
    >
      <AdminHubTile
        handleClick={[Function]}
        hub={null}
        key="RANDOM_KEY_0"
        showIcon={false}
        showTooltip={false}
        theme={
          Object {
            "colors": Object {
              "primary": "#333",
              "secondary": "#fafafa",
            },
          }
        }
        tooltip=""
      />
    </div>
  </div>
  <div
    className="layout-row flex-95 layout-wrap layout-align-start-center"
  >
    <div
      className="flex-100 layout-row layout-align-space-between-center sec_header"
    >
      <p
        className=" sec_header_text flex-none"
      >
         
        Margins
         
      </p>
    </div>
    <div
      className="layout-row flex-95 layout-wrap layout-align-start-center"
    >
      <Connect(AdminClientMargins)
        editable={false}
        targetType="itinerary"
        toggleEdit={[Function]}
      />
    </div>
  </div>
  <div
    className="layout-row flex-95 layout-wrap layout-align-start-center"
  >
    <div
      className="flex-100 layout-row layout-align-space-between-center sec_header"
    >
      <p
        className=" sec_header_text flex-none"
      >
         
        Schedules
         
      </p>
    </div>
    <div
      className="layout-row flex-95 layout-wrap layout-align-start-center"
    >
      <ReactTable
        AggregatedComponent={[Function]}
        ExpanderComponent={[Function]}
        FilterComponent={[Function]}
        LoadingComponent={[Function]}
        NoDataComponent={[Function]}
        PadRowComponent={[Function]}
        PaginationComponent={[Function]}
        PivotValueComponent={[Function]}
        ResizerComponent={[Function]}
        TableComponent={[Function]}
        TbodyComponent={[Function]}
        TdComponent={[Function]}
        TfootComponent={[Function]}
        ThComponent={[Function]}
        TheadComponent={[Function]}
        TrComponent={[Function]}
        TrGroupComponent={[Function]}
        aggregatedKey="_aggregated"
        className="flex-100 height_100"
        collapseOnDataChange={true}
        collapseOnPageChange={true}
        collapseOnSortingChange={true}
        column={
          Object {
            "Aggregated": undefined,
            "Cell": undefined,
            "Expander": undefined,
            "Filter": undefined,
            "Footer": undefined,
            "Header": undefined,
            "Pivot": undefined,
            "PivotValue": undefined,
            "aggregate": undefined,
            "className": "",
            "filterAll": false,
            "filterMethod": undefined,
            "filterable": undefined,
            "footerClassName": "",
            "footerStyle": Object {},
            "getFooterProps": [Function],
            "getHeaderProps": [Function],
            "getProps": [Function],
            "headerClassName": "",
            "headerStyle": Object {},
            "minWidth": 100,
            "resizable": undefined,
            "show": true,
            "sortMethod": undefined,
            "sortable": undefined,
            "style": Object {},
          }
        }
        columns={
          Array [
            Object {
              "Cell": [Function],
              "Header": "Closing Date",
              "accessor": "closing_date",
            },
            Object {
              "Cell": [Function],
              "Header": "ETA",
              "accessor": "start_date",
            },
            Object {
              "Cell": [Function],
              "Header": "ETD",
              "accessor": "end_date",
            },
            Object {
              "Header": "Voyage Code",
              "accessor": "voyage_code",
            },
            Object {
              "Header": "Vessel Name",
              "accessor": "vessel",
            },
          ]
        }
        data={Object {}}
        defaultExpanded={Object {}}
        defaultFilterMethod={[Function]}
        defaultFiltered={Array []}
        defaultPageSize={20}
        defaultResized={Array []}
        defaultSortDesc={false}
        defaultSortMethod={[Function]}
        defaultSorted={
          Array [
            Object {
              "desc": true,
              "id": "closing_date",
            },
          ]
        }
        expanderDefaults={
          Object {
            "filterable": false,
            "resizable": false,
            "sortable": false,
            "width": 35,
          }
        }
        filterable={false}
        freezeWhenExpanded={false}
        getLoadingProps={[Function]}
        getNoDataProps={[Function]}
        getPaginationProps={[Function]}
        getProps={[Function]}
        getResizerProps={[Function]}
        getTableProps={[Function]}
        getTbodyProps={[Function]}
        getTdProps={[Function]}
        getTfootProps={[Function]}
        getTfootTdProps={[Function]}
        getTfootTrProps={[Function]}
        getTheadFilterProps={[Function]}
        getTheadFilterThProps={[Function]}
        getTheadFilterTrProps={[Function]}
        getTheadGroupProps={[Function]}
        getTheadGroupThProps={[Function]}
        getTheadGroupTrProps={[Function]}
        getTheadProps={[Function]}
        getTheadThProps={[Function]}
        getTheadTrProps={[Function]}
        getTrGroupProps={[Function]}
        getTrProps={[Function]}
        groupedByPivotKey="_groupedByPivot"
        indexKey="_index"
        loading={false}
        loadingText="Loading..."
        multiSort={true}
        nestingLevelKey="_nestingLevel"
        nextText="Next"
        noDataText="No rows found"
        ofText="of"
        onFetchData={[Function]}
        originalKey="_original"
        pageSizeOptions={
          Array [
            5,
            10,
            20,
            25,
            50,
            100,
          ]
        }
        pageText="Page"
        pivotDefaults={Object {}}
        pivotIDKey="_pivotID"
        pivotValKey="_pivotVal"
        previousText="Previous"
        resizable={true}
        resolveData={[Function]}
        rowsText="rows"
        showPageJump={true}
        showPageSizeOptions={true}
        showPagination={true}
        showPaginationBottom={true}
        showPaginationTop={false}
        sortable={true}
        style={Object {}}
        subRowsKey="_subRows"
      />
    </div>
  </div>
  <div
    className="flex-95 layout-row layout-align-space-between-center layout-wrap"
  >
    <div
      className="flex-100 layout-row"
    >
      <NotesRow
        adminDispatch={
          Object {
            "deleteItineraryNote": [Function],
            "getHub": [Function],
            "getLayovers": [Function],
          }
        }
        itinerary={
          Object {
            "name": "NAME",
          }
        }
        notes={Object {}}
        t={[Function]}
        textStyle="#333"
        theme={
          Object {
            "colors": Object {
              "primary": "#333",
              "secondary": "#fafafa",
            },
          }
        }
        toggleNotesEdit={[Function]}
      />
    </div>
  </div>
</div>
`;

exports[`state.confirm is true 1`] = `
<div
  className="flex-100 layout-row layout-wrap layout-align-start-start extra_padding_left"
>
  <AdminPromptConfirm
    confirm={[Function]}
    deny={[Function]}
    heading="Are you sure?"
    t={[Function]}
    text="This will delete the route and all related data (pricings, schedules etc)"
    theme={
      Object {
        "colors": Object {
          "primary": "#333",
          "secondary": "#fafafa",
        },
      }
    }
  />
  <div
    className="flex-95 layout-row layout-align-space-between-center sec_title"
  >
    <p
      className=" sec_title_text flex-none"
      style="#333"
    >
      NAME
    </p>
    <div
      className="flex-40 layout-row layout-align-space-between-center"
    >
      <div
        className="flex-40 layout-row layout-align-end-center"
      >
        <NamedSelect
          className="flex-100"
          onChange={[Function]}
          options={
            Array [
              Object {
                "label": "Pricings",
                "value": "pricings",
              },
              Object {
                "label": "Schedules",
                "value": "schedules",
              },
            ]
          }
          placeholder="Jump To..."
          theme={
            Object {
              "colors": Object {
                "primary": "#333",
                "secondary": "#fafafa",
              },
            }
          }
        />
      </div>
      <div
        className="flex-55 layout-row layout-align-end-center"
      >
        <RoundButton
          active={false}
          back={false}
          classNames=""
          disabled={false}
          flexContainer="100"
          handleDisabled={null}
          handleNext={[Function]}
          icon=""
          iconClass="fa-trash"
          inverse={false}
          size="small"
          text="Delete"
          theme={
            Object {
              "colors": Object {
                "primary": "#333",
                "secondary": "#fafafa",
              },
            }
          }
        />
      </div>
    </div>
  </div>
  <div
    className="layout-row flex-95 layout-wrap layout-align-start-center"
  >
    <div
      className="flex-100 layout-row layout-align-space-between-center sec_header"
    >
      <p
        className=" sec_header_text flex-none"
      >
         
        Route Stops
      </p>
    </div>
    <div
      className="flex-100 layout-row layout-wrap layout-align-start-start"
    >
      <AdminHubTile
        handleClick={[Function]}
        hub={null}
        key="RANDOM_KEY_4"
        showIcon={false}
        showTooltip={false}
        theme={
          Object {
            "colors": Object {
              "primary": "#333",
              "secondary": "#fafafa",
            },
          }
        }
        tooltip=""
      />
    </div>
  </div>
  <div
    className="layout-row flex-95 layout-wrap layout-align-start-center"
  >
    <div
      className="flex-100 layout-row layout-align-space-between-center sec_header"
    >
      <p
        className=" sec_header_text flex-none"
      >
         
        Margins
         
      </p>
    </div>
    <div
      className="layout-row flex-95 layout-wrap layout-align-start-center"
    >
      <Connect(AdminClientMargins)
        editable={false}
        targetType="itinerary"
        toggleEdit={[Function]}
      />
    </div>
  </div>
  <div
    className="layout-row flex-95 layout-wrap layout-align-start-center"
  >
    <div
      className="flex-100 layout-row layout-align-space-between-center sec_header"
    >
      <p
        className=" sec_header_text flex-none"
      >
         
        Schedules
         
      </p>
    </div>
    <div
      className="layout-row flex-95 layout-wrap layout-align-start-center"
    >
      <ReactTable
        AggregatedComponent={[Function]}
        ExpanderComponent={[Function]}
        FilterComponent={[Function]}
        LoadingComponent={[Function]}
        NoDataComponent={[Function]}
        PadRowComponent={[Function]}
        PaginationComponent={[Function]}
        PivotValueComponent={[Function]}
        ResizerComponent={[Function]}
        TableComponent={[Function]}
        TbodyComponent={[Function]}
        TdComponent={[Function]}
        TfootComponent={[Function]}
        ThComponent={[Function]}
        TheadComponent={[Function]}
        TrComponent={[Function]}
        TrGroupComponent={[Function]}
        aggregatedKey="_aggregated"
        className="flex-100 height_100"
        collapseOnDataChange={true}
        collapseOnPageChange={true}
        collapseOnSortingChange={true}
        column={
          Object {
            "Aggregated": undefined,
            "Cell": undefined,
            "Expander": undefined,
            "Filter": undefined,
            "Footer": undefined,
            "Header": undefined,
            "Pivot": undefined,
            "PivotValue": undefined,
            "aggregate": undefined,
            "className": "",
            "filterAll": false,
            "filterMethod": undefined,
            "filterable": undefined,
            "footerClassName": "",
            "footerStyle": Object {},
            "getFooterProps": [Function],
            "getHeaderProps": [Function],
            "getProps": [Function],
            "headerClassName": "",
            "headerStyle": Object {},
            "minWidth": 100,
            "resizable": undefined,
            "show": true,
            "sortMethod": undefined,
            "sortable": undefined,
            "style": Object {},
          }
        }
        columns={
          Array [
            Object {
              "Cell": [Function],
              "Header": "Closing Date",
              "accessor": "closing_date",
            },
            Object {
              "Cell": [Function],
              "Header": "ETA",
              "accessor": "start_date",
            },
            Object {
              "Cell": [Function],
              "Header": "ETD",
              "accessor": "end_date",
            },
            Object {
              "Header": "Voyage Code",
              "accessor": "voyage_code",
            },
            Object {
              "Header": "Vessel Name",
              "accessor": "vessel",
            },
          ]
        }
        data={Object {}}
        defaultExpanded={Object {}}
        defaultFilterMethod={[Function]}
        defaultFiltered={Array []}
        defaultPageSize={20}
        defaultResized={Array []}
        defaultSortDesc={false}
        defaultSortMethod={[Function]}
        defaultSorted={
          Array [
            Object {
              "desc": true,
              "id": "closing_date",
            },
          ]
        }
        expanderDefaults={
          Object {
            "filterable": false,
            "resizable": false,
            "sortable": false,
            "width": 35,
          }
        }
        filterable={false}
        freezeWhenExpanded={false}
        getLoadingProps={[Function]}
        getNoDataProps={[Function]}
        getPaginationProps={[Function]}
        getProps={[Function]}
        getResizerProps={[Function]}
        getTableProps={[Function]}
        getTbodyProps={[Function]}
        getTdProps={[Function]}
        getTfootProps={[Function]}
        getTfootTdProps={[Function]}
        getTfootTrProps={[Function]}
        getTheadFilterProps={[Function]}
        getTheadFilterThProps={[Function]}
        getTheadFilterTrProps={[Function]}
        getTheadGroupProps={[Function]}
        getTheadGroupThProps={[Function]}
        getTheadGroupTrProps={[Function]}
        getTheadProps={[Function]}
        getTheadThProps={[Function]}
        getTheadTrProps={[Function]}
        getTrGroupProps={[Function]}
        getTrProps={[Function]}
        groupedByPivotKey="_groupedByPivot"
        indexKey="_index"
        loading={false}
        loadingText="Loading..."
        multiSort={true}
        nestingLevelKey="_nestingLevel"
        nextText="Next"
        noDataText="No rows found"
        ofText="of"
        onFetchData={[Function]}
        originalKey="_original"
        pageSizeOptions={
          Array [
            5,
            10,
            20,
            25,
            50,
            100,
          ]
        }
        pageText="Page"
        pivotDefaults={Object {}}
        pivotIDKey="_pivotID"
        pivotValKey="_pivotVal"
        previousText="Previous"
        resizable={true}
        resolveData={[Function]}
        rowsText="rows"
        showPageJump={true}
        showPageSizeOptions={true}
        showPagination={true}
        showPaginationBottom={true}
        showPaginationTop={false}
        sortable={true}
        style={Object {}}
        subRowsKey="_subRows"
      />
    </div>
  </div>
  <div
    className="flex-95 layout-row layout-align-space-between-center layout-wrap"
  >
    <div
      className="flex-100 layout-row"
    >
      <NotesRow
        adminDispatch={
          Object {
            "deleteItineraryNote": [Function],
            "getHub": [Function],
            "getLayovers": [Function],
          }
        }
        itinerary={
          Object {
            "name": "NAME",
          }
        }
        notes={Object {}}
        t={[Function]}
        textStyle="#333"
        theme={
          Object {
            "colors": Object {
              "primary": "#333",
              "secondary": "#fafafa",
            },
          }
        }
        toggleNotesEdit={[Function]}
      />
    </div>
  </div>
</div>
`;

exports[`state.editNotes is true 1`] = `
<div
  className="flex-100 layout-row layout-wrap layout-align-start-start extra_padding_left"
>
  <div
    className="flex-95 layout-row layout-align-space-between-center sec_title"
  >
    <p
      className=" sec_title_text flex-none"
      style="#333"
    >
      NAME
    </p>
    <div
      className="flex-40 layout-row layout-align-space-between-center"
    >
      <div
        className="flex-40 layout-row layout-align-end-center"
      >
        <NamedSelect
          className="flex-100"
          onChange={[Function]}
          options={
            Array [
              Object {
                "label": "Pricings",
                "value": "pricings",
              },
              Object {
                "label": "Schedules",
                "value": "schedules",
              },
            ]
          }
          placeholder="Jump To..."
          theme={
            Object {
              "colors": Object {
                "primary": "#333",
                "secondary": "#fafafa",
              },
            }
          }
        />
      </div>
      <div
        className="flex-55 layout-row layout-align-end-center"
      >
        <RoundButton
          active={false}
          back={false}
          classNames=""
          disabled={false}
          flexContainer="100"
          handleDisabled={null}
          handleNext={[Function]}
          icon=""
          iconClass="fa-trash"
          inverse={false}
          size="small"
          text="Delete"
          theme={
            Object {
              "colors": Object {
                "primary": "#333",
                "secondary": "#fafafa",
              },
            }
          }
        />
      </div>
    </div>
  </div>
  <div
    className="layout-row flex-95 layout-wrap layout-align-start-center"
  >
    <div
      className="flex-100 layout-row layout-align-space-between-center sec_header"
    >
      <p
        className=" sec_header_text flex-none"
      >
         
        Route Stops
      </p>
    </div>
    <div
      className="flex-100 layout-row layout-wrap layout-align-start-start"
    >
      <AdminHubTile
        handleClick={[Function]}
        hub={null}
        key="RANDOM_KEY_2"
        showIcon={false}
        showTooltip={false}
        theme={
          Object {
            "colors": Object {
              "primary": "#333",
              "secondary": "#fafafa",
            },
          }
        }
        tooltip=""
      />
    </div>
  </div>
  <div
    className="layout-row flex-95 layout-wrap layout-align-start-center"
  >
    <div
      className="flex-100 layout-row layout-align-space-between-center sec_header"
    >
      <p
        className=" sec_header_text flex-none"
      >
         
        Margins
         
      </p>
    </div>
    <div
      className="layout-row flex-95 layout-wrap layout-align-start-center"
    >
      <Connect(AdminClientMargins)
        editable={false}
        targetType="itinerary"
        toggleEdit={[Function]}
      />
    </div>
  </div>
  <div
    className="layout-row flex-95 layout-wrap layout-align-start-center"
  >
    <div
      className="flex-100 layout-row layout-align-space-between-center sec_header"
    >
      <p
        className=" sec_header_text flex-none"
      >
         
        Schedules
         
      </p>
    </div>
    <div
      className="layout-row flex-95 layout-wrap layout-align-start-center"
    >
      <ReactTable
        AggregatedComponent={[Function]}
        ExpanderComponent={[Function]}
        FilterComponent={[Function]}
        LoadingComponent={[Function]}
        NoDataComponent={[Function]}
        PadRowComponent={[Function]}
        PaginationComponent={[Function]}
        PivotValueComponent={[Function]}
        ResizerComponent={[Function]}
        TableComponent={[Function]}
        TbodyComponent={[Function]}
        TdComponent={[Function]}
        TfootComponent={[Function]}
        ThComponent={[Function]}
        TheadComponent={[Function]}
        TrComponent={[Function]}
        TrGroupComponent={[Function]}
        aggregatedKey="_aggregated"
        className="flex-100 height_100"
        collapseOnDataChange={true}
        collapseOnPageChange={true}
        collapseOnSortingChange={true}
        column={
          Object {
            "Aggregated": undefined,
            "Cell": undefined,
            "Expander": undefined,
            "Filter": undefined,
            "Footer": undefined,
            "Header": undefined,
            "Pivot": undefined,
            "PivotValue": undefined,
            "aggregate": undefined,
            "className": "",
            "filterAll": false,
            "filterMethod": undefined,
            "filterable": undefined,
            "footerClassName": "",
            "footerStyle": Object {},
            "getFooterProps": [Function],
            "getHeaderProps": [Function],
            "getProps": [Function],
            "headerClassName": "",
            "headerStyle": Object {},
            "minWidth": 100,
            "resizable": undefined,
            "show": true,
            "sortMethod": undefined,
            "sortable": undefined,
            "style": Object {},
          }
        }
        columns={
          Array [
            Object {
              "Cell": [Function],
              "Header": "Closing Date",
              "accessor": "closing_date",
            },
            Object {
              "Cell": [Function],
              "Header": "ETA",
              "accessor": "start_date",
            },
            Object {
              "Cell": [Function],
              "Header": "ETD",
              "accessor": "end_date",
            },
            Object {
              "Header": "Voyage Code",
              "accessor": "voyage_code",
            },
            Object {
              "Header": "Vessel Name",
              "accessor": "vessel",
            },
          ]
        }
        data={Object {}}
        defaultExpanded={Object {}}
        defaultFilterMethod={[Function]}
        defaultFiltered={Array []}
        defaultPageSize={20}
        defaultResized={Array []}
        defaultSortDesc={false}
        defaultSortMethod={[Function]}
        defaultSorted={
          Array [
            Object {
              "desc": true,
              "id": "closing_date",
            },
          ]
        }
        expanderDefaults={
          Object {
            "filterable": false,
            "resizable": false,
            "sortable": false,
            "width": 35,
          }
        }
        filterable={false}
        freezeWhenExpanded={false}
        getLoadingProps={[Function]}
        getNoDataProps={[Function]}
        getPaginationProps={[Function]}
        getProps={[Function]}
        getResizerProps={[Function]}
        getTableProps={[Function]}
        getTbodyProps={[Function]}
        getTdProps={[Function]}
        getTfootProps={[Function]}
        getTfootTdProps={[Function]}
        getTfootTrProps={[Function]}
        getTheadFilterProps={[Function]}
        getTheadFilterThProps={[Function]}
        getTheadFilterTrProps={[Function]}
        getTheadGroupProps={[Function]}
        getTheadGroupThProps={[Function]}
        getTheadGroupTrProps={[Function]}
        getTheadProps={[Function]}
        getTheadThProps={[Function]}
        getTheadTrProps={[Function]}
        getTrGroupProps={[Function]}
        getTrProps={[Function]}
        groupedByPivotKey="_groupedByPivot"
        indexKey="_index"
        loading={false}
        loadingText="Loading..."
        multiSort={true}
        nestingLevelKey="_nestingLevel"
        nextText="Next"
        noDataText="No rows found"
        ofText="of"
        onFetchData={[Function]}
        originalKey="_original"
        pageSizeOptions={
          Array [
            5,
            10,
            20,
            25,
            50,
            100,
          ]
        }
        pageText="Page"
        pivotDefaults={Object {}}
        pivotIDKey="_pivotID"
        pivotValKey="_pivotVal"
        previousText="Previous"
        resizable={true}
        resolveData={[Function]}
        rowsText="rows"
        showPageJump={true}
        showPageSizeOptions={true}
        showPagination={true}
        showPaginationBottom={true}
        showPaginationTop={false}
        sortable={true}
        style={Object {}}
        subRowsKey="_subRows"
      />
    </div>
  </div>
  <div
    className="flex-95 layout-row layout-align-space-between-center layout-wrap"
  >
    <div
      className="flex-100 layout-row"
    >
      <withRouter(Connect(NotesWriter))
        theme={
          Object {
            "colors": Object {
              "primary": "#333",
              "secondary": "#fafafa",
            },
          }
        }
        toggleView={[Function]}
      />
    </div>
  </div>
</div>
`;
