// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`shallow render 1`] = `
<GenericError
  t={[Function]}
  theme={
    Object {
      "colors": Object {
        "primary": "#333",
        "secondary": "#fafafa",
      },
    }
  }
>
  <div
    className="flex-100 layout-row layout-wrap layout-align-start-start"
  >
    <Switch
      className="flex"
    >
      <Route
        exact={true}
        path="/admin/routes"
        render={[Function]}
      />
      <Route
        exact={true}
        path="/admin/routes/:id"
        render={[Function]}
      />
    </Switch>
  </div>
</GenericError>
`;

exports[`state.newRoute is true 1`] = `
<GenericError
  t={[Function]}
  theme={
    Object {
      "colors": Object {
        "primary": "#333",
        "secondary": "#fafafa",
      },
    }
  }
>
  <div
    className="flex-100 layout-row layout-wrap layout-align-start-start"
  >
    <Modal
      classNames=""
      component={
        <AdminRouteForm
          adminDispatch={
            Object {
              "getRoute": [Function],
              "newRoute": [Function],
            }
          }
          close={[Function]}
          hubs={
            Array [
              Object {
                "address": Object {
                  "city": "FOO_CITY",
                  "country": "Germany",
                  "geocodedAddress": "FOO_GEOCODED_ADDRESS",
                  "id": 246,
                  "primary": true,
                  "street": "FOO_STREET",
                  "streetNumber": 579,
                  "street_number": 579,
                  "zipCode": "22456",
                  "zip_code": "22456",
                },
                "name": "FOO_HUB_NAME",
              },
            ]
          }
          saveRoute={[Function]}
          t={[Function]}
          theme={
            Object {
              "colors": Object {
                "primary": "#333",
                "secondary": "#fafafa",
              },
            }
          }
        />
      }
      flexOptions=""
      horizontalPadding="40px"
      maxWidth="90%"
      minHeight=""
      parentToggle={[Function]}
      showExit={false}
      verticalPadding="30px"
    />
    <Switch
      className="flex"
    >
      <Route
        exact={true}
        path="/admin/routes"
        render={[Function]}
      />
      <Route
        exact={true}
        path="/admin/routes/:id"
        render={[Function]}
      />
    </Switch>
  </div>
</GenericError>
`;
