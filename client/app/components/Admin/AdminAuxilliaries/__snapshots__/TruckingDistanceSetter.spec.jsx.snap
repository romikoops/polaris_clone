// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`shallow render 1`] = `
<TruckingDistanceSetter
  addNewCell={[Function]}
  newCell={Object {}}
  t={[Function]}
  theme={
    Object {
      "colors": Object {
        "primary": "#333",
        "secondary": "#fafafa",
      },
    }
  }
>
  <div
    className="flex-100 layout-row layout-align-start-center"
  >
    <Formsy
      className="flex-100 layout-row layout-align-start-center"
      disabled={false}
      getErrorMessage={[Function]}
      getErrorMessages={[Function]}
      getValue={[Function]}
      hasValue={[Function]}
      isFormDisabled={[Function]}
      isFormSubmitted={[Function]}
      isPristine={[Function]}
      isRequired={[Function]}
      isValid={[Function]}
      isValidValue={[Function]}
      mapping={null}
      onChange={[Function]}
      onError={[Function]}
      onInvalid={[Function]}
      onInvalidSubmit={[Function]}
      onReset={[Function]}
      onSubmit={[Function]}
      onValid={[Function]}
      onValidSubmit={[Function]}
      preventExternalInvalidation={false}
      resetValue={[Function]}
      setValidations={[Function]}
      setValue={[Function]}
      showError={[Function]}
      showRequired={[Function]}
      validationErrors={null}
    >
      <form
        className="flex-100 layout-row layout-align-start-center"
        disabled={false}
        onError={[Function]}
        onReset={[Function]}
        onSubmit={[Function]}
      >
        <div
          className="flex-33 layout-row layout-row layout-wrap layout-align-center-start"
        >
          <div
            className="flex-100 layout-row layout-align-start-center"
          >
            <p
              className="flex-none sup_l"
            >
              Lower limit distance
            </p>
          </div>
          <div
            className="flex-100 layout-row layout-align-start-center input_box"
          >
            <_class
              name="lower_distance"
              placeholder="NO_TRANSLATION | key \\"admin:lowerDistance\\""
              type="number"
            >
              <Formsy(FormsyInput)
                innerRef={[Function]}
                name="lower_distance"
                placeholder="NO_TRANSLATION | key \\"admin:lowerDistance\\""
                required={false}
                type="number"
                validationError=""
                validationErrors={Object {}}
                validations={null}
              >
                <FormsyInput
                  className=""
                  disabled={false}
                  errorMessageStyles={Object {}}
                  getErrorMessage={[Function]}
                  getErrorMessages={[Function]}
                  getValue={[Function]}
                  hasValue={[Function]}
                  id={null}
                  innerRef={[Function]}
                  isFormDisabled={[Function]}
                  isFormSubmitted={[Function]}
                  isPristine={[Function]}
                  isRequired={[Function]}
                  isValid={[Function]}
                  isValidValue={[Function]}
                  name="lower_distance"
                  onBlur={null}
                  onChange={null}
                  onFocus={null}
                  placeholder="NO_TRANSLATION | key \\"admin:lowerDistance\\""
                  required={false}
                  resetValue={[Function]}
                  setValidations={[Function]}
                  setValue={[Function]}
                  showError={[Function]}
                  showRequired={[Function]}
                  submitAttempted={false}
                  type="number"
                  validationError=""
                  validationErrors={Object {}}
                  validations={null}
                  wrapperClassName=""
                >
                  <div
                    className=" wrapper_input"
                  >
                    <input
                      className=""
                      disabled={false}
                      id={null}
                      name="lower_distance"
                      onBlur={null}
                      onChange={[Function]}
                      onFocus={null}
                      placeholder="NO_TRANSLATION | key \\"admin:lowerDistance\\""
                      style={Object {}}
                      type="number"
                      value=""
                    />
                    <span
                      className="error_message"
                      style={Object {}}
                    />
                  </div>
                </FormsyInput>
              </Formsy(FormsyInput)>
            </_class>
          </div>
        </div>
        <div
          className="flex-33 layout-row layout-row layout-wrap layout-align-center-start"
        >
          <div
            className="flex-100 layout-row layout-align-start-center"
          >
            <p
              className="flex-none sup_l"
            >
              Upper limit distance
            </p>
          </div>
          <div
            className="flex-100 layout-row layout-align-start-center input_box"
          >
            <_class
              name="upper_distance"
              placeholder="Upper Distance"
              type="number"
            >
              <Formsy(FormsyInput)
                innerRef={[Function]}
                name="upper_distance"
                placeholder="Upper Distance"
                required={false}
                type="number"
                validationError=""
                validationErrors={Object {}}
                validations={null}
              >
                <FormsyInput
                  className=""
                  disabled={false}
                  errorMessageStyles={Object {}}
                  getErrorMessage={[Function]}
                  getErrorMessages={[Function]}
                  getValue={[Function]}
                  hasValue={[Function]}
                  id={null}
                  innerRef={[Function]}
                  isFormDisabled={[Function]}
                  isFormSubmitted={[Function]}
                  isPristine={[Function]}
                  isRequired={[Function]}
                  isValid={[Function]}
                  isValidValue={[Function]}
                  name="upper_distance"
                  onBlur={null}
                  onChange={null}
                  onFocus={null}
                  placeholder="Upper Distance"
                  required={false}
                  resetValue={[Function]}
                  setValidations={[Function]}
                  setValue={[Function]}
                  showError={[Function]}
                  showRequired={[Function]}
                  submitAttempted={false}
                  type="number"
                  validationError=""
                  validationErrors={Object {}}
                  validations={null}
                  wrapperClassName=""
                >
                  <div
                    className=" wrapper_input"
                  >
                    <input
                      className=""
                      disabled={false}
                      id={null}
                      name="upper_distance"
                      onBlur={null}
                      onChange={[Function]}
                      onFocus={null}
                      placeholder="Upper Distance"
                      style={Object {}}
                      type="number"
                      value=""
                    />
                    <span
                      className="error_message"
                      style={Object {}}
                    />
                  </div>
                </FormsyInput>
              </Formsy(FormsyInput)>
            </_class>
          </div>
        </div>
        <div
          className="flex-33 layout-row layout-align-center-center"
        >
          <RoundButton
            active={false}
            back={false}
            classNames=""
            disabled={false}
            flexContainer="100"
            handleDisabled={null}
            handleNext={null}
            icon=""
            iconClass="fa-plus-square-o"
            inverse={false}
            size="small"
            text="Add another"
            theme={
              Object {
                "colors": Object {
                  "primary": "#333",
                  "secondary": "#fafafa",
                },
              }
            }
          >
            <div
              className="flex-100 "
            >
              <button
                className="round_btn neutral small clickable"
                onClick={null}
                style={Object {}}
              >
                <div
                  className="layout-fill layout-row layout-align-space-around-center"
                >
                  <p
                    className="content"
                  >
                    <span
                      className="icon"
                    >
                      <i
                        className="flex-none icon_f fa fa-plus-square-o"
                      />
                    </span>
                    Add another
                  </p>
                </div>
              </button>
            </div>
          </RoundButton>
        </div>
      </form>
    </Formsy>
  </div>
</TruckingDistanceSetter>
`;
