// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`shallow rendering 1`] = `
<div
  className="flex-100 layout-row layout-wrap"
>
  <h3>
    Company Details
  </h3>
  <div
    className="grouped_inputs flex-100 layout-row layout-wrap"
  >
    <div
      className="flex-95 layout-row"
    >
      <IconLable
        faClass="building-o"
        theme={
          Object {
            "colors": Object {
              "primary": "#333",
              "secondary": "#fafafa",
            },
          }
        }
      />
      <Formsy(FormsyInput)
        className="input"
        errorMessageStyles={
          Object {
            "bottom": "-19px",
            "fontSize": "12px",
          }
        }
        innerRef={[Function]}
        name="companyName"
        placeholder="Company Name"
        required={true}
        submitAttempted={false}
        type="text"
        validationError=""
        validationErrors={
          Object {
            "isDefaultRequiredValue": "Must be at least two characters longs",
            "minLength": "Must be at least two characters longs",
          }
        }
        validations="minLength:2"
        value="FOO_COMPANY_NAME"
        wrapperClassName="wrapper_input flex"
      />
    </div>
  </div>
  <div
    className="grouped_inputs flex-100 layout-row layout-wrap"
  >
    <div
      className="flex-95 layout-row"
    >
      <IconLable
        faClass="user"
        theme={
          Object {
            "colors": Object {
              "primary": "#333",
              "secondary": "#fafafa",
            },
          }
        }
      />
      <div
        className="flex layout-row layout-wrap"
      >
        <Formsy(FormsyInput)
          className="input"
          errorMessageStyles={
            Object {
              "bottom": "-19px",
              "fontSize": "12px",
            }
          }
          innerRef={[Function]}
          name="firstName"
          placeholder="First Name"
          required={true}
          submitAttempted={false}
          type="text"
          validationError=""
          validationErrors={
            Object {
              "isDefaultRequiredValue": "Must be at least two characters longs",
              "minLength": "Must be at least two characters longs",
            }
          }
          validations="minLength:2"
          value="FOO_FIRST_NAME"
          wrapperClassName="wrapper_input flex-100"
        />
        <Formsy(FormsyInput)
          className="input"
          errorMessageStyles={
            Object {
              "bottom": "-19px",
              "fontSize": "12px",
            }
          }
          innerRef={[Function]}
          name="lastName"
          placeholder="Last Name"
          required={true}
          submitAttempted={false}
          type="text"
          validationError=""
          validationErrors={
            Object {
              "isDefaultRequiredValue": "Must be at least two characters longs",
              "minLength": "Must be at least two characters longs",
            }
          }
          validations="minLength:2"
          value="FOO_LAST_NAME"
          wrapperClassName="wrapper_input flex-100"
        />
      </div>
    </div>
  </div>
  <div
    className="grouped_inputs flex-100 layout-row layout-wrap"
  >
    <div
      className="flex-95 layout-row"
    >
      <IconLable
        faClass="envelope"
        theme={
          Object {
            "colors": Object {
              "primary": "#333",
              "secondary": "#fafafa",
            },
          }
        }
      />
      <Formsy(FormsyInput)
        className="input"
        errorMessageStyles={
          Object {
            "bottom": "-19px",
            "fontSize": "12px",
          }
        }
        innerRef={[Function]}
        name="email"
        onBlur={[Function]}
        placeholder="Email"
        required={true}
        submitAttempted={false}
        type="text"
        validationError=""
        validationErrors={
          Object {
            "isDefaultRequiredValue": "Must not be blank",
            "matchRegexp": "Invalid Email",
          }
        }
        validations={
          Object {
            "matchRegexp": /\\^\\(\\[\\^@\\\\s\\]\\+\\)@\\(\\(\\?:\\[-a-z0-9\\]\\+\\\\\\.\\)\\+\\[a-z\\]\\{2,\\}\\)\\$/i,
          }
        }
        value="foo@bar.com"
        wrapperClassName="wrapper_input flex-95"
      />
    </div>
    <div
      className="flex-95 layout-row"
    >
      <IconLable
        faClass="phone"
        theme={
          Object {
            "colors": Object {
              "primary": "#333",
              "secondary": "#fafafa",
            },
          }
        }
      />
      <Formsy(FormsyInput)
        className="input"
        errorMessageStyles={
          Object {
            "bottom": "-19px",
            "fontSize": "12px",
          }
        }
        innerRef={[Function]}
        name="phone"
        placeholder="Phone"
        required={true}
        submitAttempted={false}
        type="text"
        validationError=""
        validationErrors={
          Object {
            "isDefaultRequiredValue": "Must be at least four characters long",
            "minLength": "Minimum 4 characters",
          }
        }
        validations="minLength:4"
        value="0789323143"
        wrapperClassName="wrapper_input flex-95"
      />
    </div>
  </div>
</div>
`;
