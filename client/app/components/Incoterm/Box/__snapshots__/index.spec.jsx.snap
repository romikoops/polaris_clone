// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`incoterm_info_level is simple 1`] = `
<div
  className="flex-100 layout-row layout-align-start-start  incoterm_wrapper"
>
  <div
    className="flex-100 layout-row layout-align-end-center layout-wrap"
  >
    <div
      className="flex-100 layout-row layout-align-end-center"
    >
      <div
        className="flex-none"
      >
        <TextHeading
          color="black"
          fontWeight="normal"
          size={3}
          text="Select Incoterm:"
          theme={
            Object {
              "colors": Object {
                "primary": "#333",
                "secondary": "#fafafa",
              },
            }
          }
        />
      </div>
    </div>
    <div
      className="flex-80"
      name="incoterms"
      style={
        Object {
          "position": "relative",
        }
      }
    >
      <Styled(Select)
        className="select"
        name="incoterms"
        onChange={[Function]}
        options={
          Array [
            Object {
              "direction": "export",
              "label": "Door to Destination Port",
              "onCarriage": false,
              "preCarriage": true,
              "value": "DTP",
            },
            Object {
              "direction": "export",
              "label": "Door to Door",
              "onCarriage": true,
              "preCarriage": true,
              "value": "DTD",
            },
            Object {
              "direction": "export",
              "label": "Origin Port to Door",
              "onCarriage": true,
              "preCarriage": true,
              "value": "PTD",
            },
            Object {
              "direction": "export",
              "label": "Origin Port to Destination Port",
              "onCarriage": false,
              "preCarriage": false,
              "value": "PTP",
            },
          ]
        }
        value="INCOTERM"
      />
      <span />
    </div>
  </div>
</div>
`;

exports[`incoterm_info_level render is full 1`] = `
<div
  className="flex-100 layout-row layout-align-start-start  incoterm_wrapper"
>
  <div
    className="flex-100 layout-row layout-align-end-center layout-wrap"
  >
    <div
      className="flex-100 layout-row layout-align-end-center"
    >
      <div
        className="flex-none"
      >
        <TextHeading
          color="black"
          fontWeight="normal"
          size={3}
          text="Select Incoterm:"
          theme={
            Object {
              "colors": Object {
                "primary": "#333",
                "secondary": "#fafafa",
              },
            }
          }
        />
      </div>
    </div>
    <div
      className="flex-80"
      name="incoterms"
      style={
        Object {
          "position": "relative",
        }
      }
    >
      <Styled(Select)
        className="select"
        name="incoterms"
        onChange={[Function]}
        options={
          Array [
            Object {
              "label": "EXW - Ex Works (named place of delivery)",
              "type": "any",
              "value": "EXW",
            },
            Object {
              "label": "FCA - Free Carrier (named place of delivery)",
              "type": "any",
              "value": "FCA",
            },
            Object {
              "label": "CPT - Carriage Paid To (named place of destination)",
              "type": "any",
              "value": "CPT",
            },
            Object {
              "label": "CIP - Carriage and Insurance Paid to (named place of destination)",
              "type": "any",
              "value": "CIP",
            },
            Object {
              "label": "DAT - Delivered at Terminal (named terminal at port or place of destination)",
              "type": "any",
              "value": "DAT",
            },
            Object {
              "label": "DAP - Delivered at Place (named place of destination)",
              "type": "any",
              "value": "DAP",
            },
            Object {
              "label": "DDP - Delivered Duty Paid (named place of destination)",
              "type": "any",
              "value": "DDP",
            },
            Object {
              "label": "FAS - Free Alongside Ship (named port of shipment)",
              "value": "FAS",
            },
            Object {
              "label": "FOB - Free on Board (named port of shipment)",
              "value": "FOB",
            },
            Object {
              "label": "CFR - Cost and Freight (named port of destination)",
              "value": "CFR",
            },
            Object {
              "label": "CIF - Cost, Insurance and Freight (named port of destination)",
              "value": "CIF",
            },
          ]
        }
        value="INCOTERM"
      />
      <span />
    </div>
  </div>
</div>
`;

exports[`incoterm_info_level render is text 1`] = `
<div
  className="flex-100 layout-row layout-align-start-start  incoterm_wrapper"
>
  <div
    className="flex-100 layout-row layout-align-end-center layout-wrap"
  >
    <div
      className="flex-60 layout-row layout-align-end-center"
    >
      <div
        className="flex-50"
      >
        <TextHeading
          color="black"
          fontWeight="normal"
          size={3}
          text="Service Level:"
          theme={
            Object {
              "colors": Object {
                "primary": "#333",
                "secondary": "#fafafa",
              },
            }
          }
        />
      </div>
      <div
        className="flex-10 layout-row layout-align-center-center"
      >
        <i
          className="fa fa-chain flex-none"
          style={
            Object {
              "color": "#E0E0E0",
              "paddingRight": "8px",
            }
          }
        />
      </div>
      <div
        className="flex-5"
      />
      <div
        className="flex-35 layout-row layout-align-center-center"
      >
        <p
          className="flex-none no_m"
        >
          Port to Port
        </p>
      </div>
    </div>
  </div>
</div>
`;

exports[`onCarriage is true 1`] = `
<div
  className="flex-100 layout-row layout-align-start-start  incoterm_wrapper"
>
  <div
    className="flex-100 layout-row layout-align-end-center layout-wrap"
  >
    <div
      className="flex-100 layout-row layout-align-end-center"
    >
      <div
        className="flex-none"
      >
        <TextHeading
          color="black"
          fontWeight="normal"
          size={3}
          text="Select Incoterm:"
          theme={
            Object {
              "colors": Object {
                "primary": "#333",
                "secondary": "#fafafa",
              },
            }
          }
        />
      </div>
    </div>
    <div
      className="flex-80"
      name="incoterms"
      style={
        Object {
          "position": "relative",
        }
      }
    >
      <Styled(Select)
        className="select"
        name="incoterms"
        onChange={[Function]}
        options={
          Array [
            Object {
              "direction": "export",
              "label": "Door to Destination Port",
              "onCarriage": false,
              "preCarriage": true,
              "value": "DTP",
            },
            Object {
              "direction": "export",
              "label": "Door to Door",
              "onCarriage": true,
              "preCarriage": true,
              "value": "DTD",
            },
            Object {
              "direction": "export",
              "label": "Origin Port to Door",
              "onCarriage": true,
              "preCarriage": true,
              "value": "PTD",
            },
            Object {
              "direction": "export",
              "label": "Origin Port to Destination Port",
              "onCarriage": false,
              "preCarriage": false,
              "value": "PTP",
            },
          ]
        }
        value="INCOTERM"
      />
      <span />
    </div>
  </div>
</div>
`;

exports[`preCarriage is true 1`] = `
<div
  className="flex-100 layout-row layout-align-start-start  incoterm_wrapper"
>
  <div
    className="flex-100 layout-row layout-align-end-center layout-wrap"
  >
    <div
      className="flex-100 layout-row layout-align-end-center"
    >
      <div
        className="flex-none"
      >
        <TextHeading
          color="black"
          fontWeight="normal"
          size={3}
          text="Select Incoterm:"
          theme={
            Object {
              "colors": Object {
                "primary": "#333",
                "secondary": "#fafafa",
              },
            }
          }
        />
      </div>
    </div>
    <div
      className="flex-80"
      name="incoterms"
      style={
        Object {
          "position": "relative",
        }
      }
    >
      <Styled(Select)
        className="select"
        name="incoterms"
        onChange={[Function]}
        options={
          Array [
            Object {
              "direction": "export",
              "label": "Door to Destination Port",
              "onCarriage": false,
              "preCarriage": true,
              "value": "DTP",
            },
            Object {
              "direction": "export",
              "label": "Door to Door",
              "onCarriage": true,
              "preCarriage": true,
              "value": "DTD",
            },
            Object {
              "direction": "export",
              "label": "Origin Port to Door",
              "onCarriage": true,
              "preCarriage": true,
              "value": "PTD",
            },
            Object {
              "direction": "export",
              "label": "Origin Port to Destination Port",
              "onCarriage": false,
              "preCarriage": false,
              "value": "PTP",
            },
          ]
        }
        value="INCOTERM"
      />
      <span />
    </div>
  </div>
</div>
`;

exports[`preCarriage&&onCarriage is true 1`] = `
<div
  className="flex-100 layout-row layout-align-start-start  incoterm_wrapper"
>
  <div
    className="flex-100 layout-row layout-align-end-center layout-wrap"
  >
    <div
      className="flex-100 layout-row layout-align-end-center"
    >
      <div
        className="flex-none"
      >
        <TextHeading
          color="black"
          fontWeight="normal"
          size={3}
          text="Select Incoterm:"
          theme={
            Object {
              "colors": Object {
                "primary": "#333",
                "secondary": "#fafafa",
              },
            }
          }
        />
      </div>
    </div>
    <div
      className="flex-80"
      name="incoterms"
      style={
        Object {
          "position": "relative",
        }
      }
    >
      <Styled(Select)
        className="select"
        name="incoterms"
        onChange={[Function]}
        options={
          Array [
            Object {
              "direction": "export",
              "label": "Door to Destination Port",
              "onCarriage": false,
              "preCarriage": true,
              "value": "DTP",
            },
            Object {
              "direction": "export",
              "label": "Door to Door",
              "onCarriage": true,
              "preCarriage": true,
              "value": "DTD",
            },
            Object {
              "direction": "export",
              "label": "Origin Port to Door",
              "onCarriage": true,
              "preCarriage": true,
              "value": "PTD",
            },
            Object {
              "direction": "export",
              "label": "Origin Port to Destination Port",
              "onCarriage": false,
              "preCarriage": false,
              "value": "PTP",
            },
          ]
        }
        value="INCOTERM"
      />
      <span />
    </div>
  </div>
</div>
`;

exports[`tenantScope is empty object 1`] = `
<div
  className="flex-100 layout-row layout-align-start-start  incoterm_wrapper"
/>
`;

exports[`theme is falsy 1`] = `
<div
  className="flex-100 layout-row layout-align-start-start  incoterm_wrapper"
>
  <div
    className="flex-100 layout-row layout-align-end-center layout-wrap"
  >
    <div
      className="flex-100 layout-row layout-align-end-center"
    >
      <div
        className="flex-none"
      >
        <TextHeading
          color="black"
          fontWeight="normal"
          size={3}
          text="Select Incoterm:"
          theme={null}
        />
      </div>
    </div>
    <div
      className="flex-80"
      name="incoterms"
      style={
        Object {
          "position": "relative",
        }
      }
    >
      <Styled(Select)
        className="select"
        name="incoterms"
        onChange={[Function]}
        options={
          Array [
            Object {
              "direction": "export",
              "label": "Door to Destination Port",
              "onCarriage": false,
              "preCarriage": true,
              "value": "DTP",
            },
            Object {
              "direction": "export",
              "label": "Door to Door",
              "onCarriage": true,
              "preCarriage": true,
              "value": "DTD",
            },
            Object {
              "direction": "export",
              "label": "Origin Port to Door",
              "onCarriage": true,
              "preCarriage": true,
              "value": "PTD",
            },
            Object {
              "direction": "export",
              "label": "Origin Port to Destination Port",
              "onCarriage": false,
              "preCarriage": false,
              "value": "PTP",
            },
          ]
        }
        value="INCOTERM"
      />
      <span />
    </div>
  </div>
</div>
`;
