// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`customs.import.unknown && customs.export.unknown 1`] = `
<div
  className="flex-100 layout-row layout-wrap padd_top"
  name="cargoDetailsBox"
>
  <div
    className="flex-100 layout-row layout-align-center"
  >
    <div
      className="flex-none content_width layout-row layout-wrap"
    >
      <div
        className="flex-100 layout-row layout-sm-wrap"
      >
        <div
          className="flex-50"
        >
          <div
            className="flex-100"
          >
            <div
              className="flex-100 layout-align-start-center layout-row"
            >
              <div
                className="flex-none"
              >
                <TextHeading
                  color=""
                  size={2}
                  text="Cargo Details"
                  theme={
                    Object {
                      "colors": Object {
                        "primary": "#333",
                        "secondary": "#fafafa",
                      },
                    }
                  }
                />
              </div>
            </div>
             
            <div
              className="flex-none"
            >
              <TextHeading
                color=""
                size={3}
                text="Total value of goods"
                theme={
                  Object {
                    "colors": Object {
                      "primary": "#333",
                      "secondary": "#fafafa",
                    },
                  }
                }
              />
            </div>
          </div>
          <div
            className="flex-100 layout-row layout-wrap layout-align-start-start"
          >
            <div
              className="flex-100 layout-row layout-wrap"
            >
              <div
                className="flex-100 layout-row"
              >
                <div
                  className="flex-66 layout-row"
                >
                  <Formsy(FormsyInput)
                    className="flex-100 ccb_total_goods_value cargo_input "
                    errorMessageStyles={
                      Object {
                        "bottom": "-17px",
                        "fontSize": "13px",
                      }
                    }
                    innerRef={[Function]}
                    name="totalGoodsValue"
                    onBlur={[Function]}
                    required={3370}
                    submitAttempted={false}
                    type="number"
                    validationError=""
                    validationErrors={
                      Object {
                        "isDefaultRequiredValue": "Must be greater than 0",
                        "nonNegative": "Must be greater than 0",
                      }
                    }
                    validations={
                      Object {
                        "nonNegative": [Function],
                      }
                    }
                    value={11}
                    wrapperClassName="flex-100 wrapper_cargo_input"
                  />
                </div>
                <div
                  className="flex-33 layout-row"
                >
                  <NamedSelect
                    className="flex-100 ccb_currency"
                    clearable={false}
                    onChange={[Function]}
                    options={
                      Array [
                        Object {
                          "label": "EUR",
                          "value": "EUR",
                        },
                        Object {
                          "label": "AUD",
                          "value": "AUD",
                        },
                        Object {
                          "label": "BGN",
                          "value": "BGN",
                        },
                        Object {
                          "label": "BRL",
                          "value": "BRL",
                        },
                        Object {
                          "label": "CAD",
                          "value": "CAD",
                        },
                        Object {
                          "label": "CHF",
                          "value": "CHF",
                        },
                        Object {
                          "label": "CNY",
                          "value": "CNY",
                        },
                        Object {
                          "label": "CZK",
                          "value": "CZK",
                        },
                        Object {
                          "label": "DKK",
                          "value": "DKK",
                        },
                        Object {
                          "label": "GBP",
                          "value": "GBP",
                        },
                        Object {
                          "label": "HKD",
                          "value": "HKD",
                        },
                        Object {
                          "label": "HRK",
                          "value": "HRK",
                        },
                        Object {
                          "label": "HUF",
                          "value": "HUF",
                        },
                        Object {
                          "label": "IDR",
                          "value": "IDR",
                        },
                        Object {
                          "label": "ILS",
                          "value": "ILS",
                        },
                        Object {
                          "label": "INR",
                          "value": "INR",
                        },
                        Object {
                          "label": "JPY",
                          "value": "JPY",
                        },
                        Object {
                          "label": "KRW",
                          "value": "KRW",
                        },
                        Object {
                          "label": "MXN",
                          "value": "MXN",
                        },
                        Object {
                          "label": "MYR",
                          "value": "MYR",
                        },
                        Object {
                          "label": "NOK",
                          "value": "NOK",
                        },
                        Object {
                          "label": "NZD",
                          "value": "NZD",
                        },
                        Object {
                          "label": "PHP",
                          "value": "PHP",
                        },
                        Object {
                          "label": "PLN",
                          "value": "PLN",
                        },
                        Object {
                          "label": "RON",
                          "value": "RON",
                        },
                        Object {
                          "label": "RUB",
                          "value": "RUB",
                        },
                        Object {
                          "label": "SEK",
                          "value": "SEK",
                        },
                        Object {
                          "label": "SGD",
                          "value": "SGD",
                        },
                        Object {
                          "label": "THB",
                          "value": "THB",
                        },
                        Object {
                          "label": "TRY",
                          "value": "TRY",
                        },
                        Object {
                          "label": "USD",
                          "value": "USD",
                        },
                        Object {
                          "label": "ZAR",
                          "value": "ZAR",
                        },
                      ]
                    }
                    value={
                      Object {
                        "label": "EUR",
                        "value": "EUR",
                      }
                    }
                  />
                </div>
              </div>
            </div>
            <div
              className="flex-100 layout-row layout-wrap"
              id="cargo_notes"
            >
              <div
                className="flex-100"
              >
                <div
                  className="flex-none f_header"
                >
                   
                  <TextHeading
                    color=""
                    size={3}
                    text="Description of Goods (HS Codes if available)"
                    theme={
                      Object {
                        "colors": Object {
                          "primary": "#333",
                          "secondary": "#fafafa",
                        },
                      }
                    }
                  />
                </div>
              </div>
              <div
                className="flex-100"
              >
                <Formsy(FormsyTextarea)
                  className="flex-100 ccb_description_goods cargo_text_area "
                  errorMessageStyles={
                    Object {
                      "bottom": "-17px",
                      "fontSize": "13px",
                    }
                  }
                  innerRef={[Function]}
                  name="cargoNotes"
                  onBlur={[Function]}
                  required="MANDATORY_FIELDS_DESCRIPTION"
                  submitAttempted={false}
                  type="textarea"
                  validationError=""
                  validationErrors={
                    Object {
                      "isDefaultRequiredValue": "Must not be empty",
                    }
                  }
                  validations={null}
                  value="CARGO_NOTES"
                  wrapperClassName="flex-100 wrapper_cargo_input"
                />
              </div>
            </div>
            <div
              className="flex-100 layout-row layout-align-start-start layout-wrap"
            >
              <div
                className="flex-100"
              >
                <div
                  className="flex-none f_header"
                >
                   
                  <h4
                    className="no_m flex-30"
                  >
                    Incoterms
                     
                    <span>
                      (Optional)
                    </span>
                  </h4>
                  <p
                    className="pointy flex-none incoterm_info"
                    onClick={[Function]}
                  >
                    More info
                  </p>
                </div>
              </div>
              <div
                className="flex-100 layout-row layout-align-start-start input_box_full"
              >
                <Formsy(FormsyTextarea)
                  className="flex-100 cargo_text_area "
                  errorMessageStyles={
                    Object {
                      "bottom": "-17px",
                      "fontSize": "13px",
                    }
                  }
                  innerRef={[Function]}
                  name="incotermText"
                  onBlur={[Function]}
                  required={false}
                  submitAttempted={false}
                  type="textarea"
                  validationError=""
                  validationErrors={Object {}}
                  validations={null}
                  value=""
                  wrapperClassName="flex-100 wrapper_cargo_input"
                />
              </div>
            </div>
          </div>
        </div>
        <div
          className="flex-50 padding_left offset-gt-sm-5 layout-row layout-wrap layout-align-start-start"
        >
          <div
            className="flex-100 layout-align-start-center layout-row"
          >
            <div
              className="flex-none"
            >
              <TextHeading
                color=""
                size={2}
                text="Shipment Documents "
                theme={
                  Object {
                    "colors": Object {
                      "primary": "#333",
                      "secondary": "#fafafa",
                    },
                  }
                }
              />
              <br />
              (
              if available
              )
            </div>
          </div>
          <div
            className="flex-100 layout-row layout-wrap"
            name="packing_sheet"
          >
            <div
              className="flex-100 layout-row margin_5"
            >
              <DocumentsMultiForm
                deleteFn={[Function]}
                dispatchFn={[Function]}
                documents={Array []}
                isRequired={true}
                t={[Function]}
                text="Packing List"
                theme={
                  Object {
                    "colors": Object {
                      "primary": "#333",
                      "secondary": "#fafafa",
                    },
                  }
                }
                tooltip=""
                type="packing_sheet"
                uploadFn={null}
              />
            </div>
          </div>
          <div
            className="flex-100 layout-row layout-wrap"
            name="commercial_invoice"
          >
            <div
              className="flex-100 layout-row margin_5"
            >
              <DocumentsMultiForm
                deleteFn={[Function]}
                dispatchFn={[Function]}
                documents={Array []}
                isRequired={true}
                t={[Function]}
                text="Commercial Invoice"
                theme={
                  Object {
                    "colors": Object {
                      "primary": "#333",
                      "secondary": "#fafafa",
                    },
                  }
                }
                tooltip=""
                type="commercial_invoice"
                uploadFn={null}
              />
            </div>
          </div>
          <div
            className="flex-100 layout-row layout-align-start-start layout-wrap"
          >
            <div
              className="flex-100 layout-row layout-align-start-start layout-wrap"
            >
              <div
                className="flex-100"
              >
                <div
                  className="flex-none f_header"
                >
                   
                  <TextHeading
                    color=""
                    size={3}
                    text="Notes (Optional)"
                    theme={
                      Object {
                        "colors": Object {
                          "primary": "#333",
                          "secondary": "#fafafa",
                        },
                      }
                    }
                  />
                </div>
              </div>
              <div
                className="flex-100 layout-row layout-align-start-start input_box_full"
              >
                <Formsy(FormsyTextarea)
                  className="flex-100 cargo_text_area "
                  errorMessageStyles={
                    Object {
                      "bottom": "-17px",
                      "fontSize": "13px",
                    }
                  }
                  innerRef={[Function]}
                  name="notes"
                  onBlur={[Function]}
                  required={false}
                  submitAttempted={false}
                  type="textarea"
                  validationError=""
                  validationErrors={Object {}}
                  validations={null}
                  value="NOTES"
                  wrapperClassName="flex-100 wrapper_cargo_input"
                />
              </div>
            </div>
            <div
              className="flex-gt-sm-100 layout-row layout-align-start-start layout-wrap"
            >
              <div
                className=" flex-100 layout-row layout-align-start-start-space-around layout-wrap"
              >
                <DocumentsMultiForm
                  deleteFn={[Function]}
                  dispatchFn={[Function]}
                  documents={Array []}
                  t={[Function]}
                  text="Miscellaneous"
                  theme={
                    Object {
                      "colors": Object {
                        "primary": "#333",
                        "secondary": "#fafafa",
                      },
                    }
                  }
                  tooltip=""
                  type="miscellaneous"
                  uploadFn={null}
                />
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <div
    className="insurance_customs_sec flex-100 layout-row layout-wrap layout-align-center"
  >
    <div
      className="flex-100 layout-row layout-align-center padd_top"
    >
      <div
        className="flex-none content_width layout-row layout-wrap section_padding"
      >
        <div
          className="flex-100 layout-row layout-align-space-between-start"
        >
          <div
            className="flex-none layout-row layout-align-space-around-center"
          >
            <TextHeading
              color=""
              size={2}
              text="Insurance"
              theme={
                Object {
                  "colors": Object {
                    "primary": "#333",
                    "secondary": "#fafafa",
                  },
                }
              }
            />
          </div>
          <div
            className="flex-33 layout-row layout-align-space-around-center layout-wrap"
          >
            <div
              className="flex-100 layout-row layout-wrap layout-align-end-center"
            >
              <div
                className="flex-90 layout-row layout-align-start-center"
              >
                <label
                  className="pointy"
                  htmlFor="yes_insurance"
                >
                  Yes, I want TENANT_NAME to quote insurance for my cargo
                </label>
              </div>
              <div
                className="flex-10 layout-row layout-align-end-center"
              >
                <Checkbox
                  checked={true}
                  className="ccb_yes_insurance"
                  disabled={false}
                  id="yes_insurance"
                  onChange={[Function]}
                  onClick={null}
                  size={null}
                  theme={
                    Object {
                      "colors": Object {
                        "primary": "#333",
                        "secondary": "#fafafa",
                      },
                    }
                  }
                />
              </div>
            </div>
            <div
              className="flex-100 layout-row layout-align-end-center"
            >
              <div
                className="flex-90 layout-row layout-align-start-center"
              >
                <label
                  className="pointy"
                  htmlFor="no_insurance"
                >
                  No, I do not want TENANT_NAME to quote insurance for my cargo
                </label>
              </div>
              <div
                className="flex-10 layout-row layout-align-end-center"
              >
                <Checkbox
                  checked={false}
                  className="ccb_no_insurance"
                  disabled={false}
                  id="no_insurance"
                  onChange={[Function]}
                  onClick={null}
                  size={null}
                  theme={
                    Object {
                      "colors": Object {
                        "primary": "#333",
                        "secondary": "#fafafa",
                      },
                    }
                  }
                />
              </div>
            </div>
          </div>
        </div>
        <div
          className="flex-100 layout-row layout-align-start-center"
        >
          <p
            className="flex-60 margin_5"
          >
            <b>
              Cargo Insurance provides cover on all risk terms for physical loss or damage to cargo during transport by land, sea or air.
            </b>
          </p>
        </div>
        <div
          className="flex-100 layout-row layout-align-start-center"
        >
          <p
            className="flex-60 margin_5"
          >
            <b>
              Insurance is a cost effective and simple way to cover for physical loss or damage to goods in transit.
            </b>
          </p>
        </div>
        <div
          className="flex-100 layout-row  box_content show"
        >
          <div
            className="flex-80 layout-row layout-wrap"
          >
            <p
              className="flex-90"
            >
              <strong>
                 
                A cost effective and simple way to cover for physical loss or damage to goods in transit.
              </strong>
            </p>
            <p
              className="flex-90"
            >
              Please contact your local {{tenantName}} office for more info.
            </p>
          </div>
        </div>
        <div
          className="flex-100 layout-row layout-align-start-center"
        >
          <div
            className="flex-none layout-row layout-align-center-center"
            onClick={[Function]}
          >
            <p
              className="flex-none pointy"
            >
              Read more...
            </p>
            <i
              className="flex-none offset-5 fa fa-external-link"
            />
          </div>
        </div>
      </div>
    </div>
    <div
      className="flex-100 layout-row layout-align-center padd_top"
    >
      <div
        className="flex-none content_width layout-row layout-wrap section_padding"
      >
        <div
          className="flex-100 layout-row layout-align-space-between-start layout-wrap"
        >
          <div
            className="flex-none layout-row layout-align-space-around-center"
          >
            <TextHeading
              color=""
              size={2}
              text="Customs Handling"
              theme={
                Object {
                  "colors": Object {
                    "primary": "#333",
                    "secondary": "#fafafa",
                  },
                }
              }
            />
          </div>
          <div
            className="flex-33 layout-wrap layout-row layout-align-space-around-center"
          >
            <div
              className="flex-100 layout-row layout-align-end-center"
            >
              <div
                className="flex-90 layout-row layout-align-start-center"
              >
                <label
                  className="pointy"
                  htmlFor="yes_clearance"
                >
                  Yes, I want TENANT_NAME to handle my customs clearance
                </label>
              </div>
              <div
                className="flex-10 layout-row layout-align-end-center"
              >
                <Checkbox
                  checked={null}
                  className="ccb_yes_clearance"
                  disabled={false}
                  id="yes_clearance"
                  onChange={[Function]}
                  onClick={null}
                  size={null}
                  theme={
                    Object {
                      "colors": Object {
                        "primary": "#333",
                        "secondary": "#fafafa",
                      },
                    }
                  }
                />
              </div>
            </div>
            <div
              className="flex-100 layout-row layout-align-end-center"
            >
              <div
                className="flex-90 layout-row layout-align-start-center"
              >
                <label
                  className="pointy"
                  htmlFor="no_clearance"
                >
                  No, I do not want TENANT_NAME to handle my customs clearance
                </label>
              </div>
              <div
                className="flex-10 layout-row layout-align-end-center"
              >
                <Checkbox
                  checked={null}
                  className="ccb_no_clearance"
                  disabled={false}
                  id="no_clearance"
                  onChange={[Function]}
                  onClick={null}
                  size={null}
                  theme={
                    Object {
                      "colors": Object {
                        "primary": "#333",
                        "secondary": "#fafafa",
                      },
                    }
                  }
                />
              </div>
            </div>
          </div>
        </div>
        <div
          className="flex-100 layout-row layout-wrap customs_box  box_content hidden"
        >
          <div
            className="flex-60 layout-row layout-wrap"
          >
            <p
              className="flex-90 margin_5"
            >
              <strong>
                 
                When you ship goods from outside the European Union (EU), you may be charged customs duty and/or VAT. You can either handle the customs on your own, or have it handled for you.
              </strong>
            </p>
            <p
              className="flex-90 margin_5"
            >
              To cover our costs when we present your goods to the customs authorities – and pay any customs duty or VAT due on your behalf – we charge a clearance / handling fee. The fee depends on the value of the goods you are shipping, and can be found here to the right.
            </p>
            <div
              className="flex-100 layout-row layout-align-start-start layout-wrap"
            >
              <div
                className="flex-100 layout-row layout-align-start-center"
                style={
                  Object {
                    "height": "36px",
                  }
                }
              >
                <p
                  className="flex-none"
                >
                   
                  I would like TENANT_NAME to handle:
                </p>
              </div>
              <div
                className="flex-100 layout-row layout-align-start-center layout-wrap"
                style={
                  Object {
                    "height": "36px",
                  }
                }
              >
                <div
                  className="flex-45 layout-row layout-align-space-around-center"
                  data-for="preCarriageTooltip"
                  data-tip="Export Customs is not applicable for shipments without delivery to the port (pre-carriage)."
                >
                  <p
                    className="faded_text flex-none"
                  >
                     Export Customs: 
                  </p>
                  <Checkbox
                    checked={true}
                    className=""
                    disabled={true}
                    id={null}
                    onChange={[Function]}
                    onClick={null}
                    size={null}
                    theme={
                      Object {
                        "colors": Object {
                          "primary": "#333",
                          "secondary": "#fafafa",
                        },
                      }
                    }
                  />
                </div>
                <ReactTooltip
                  className="tooltip_box"
                  effect="solid"
                  id="preCarriageTooltip"
                  insecure={true}
                  resizeHide={true}
                  wrapper="div"
                />
                <div
                  className="flex-45 layout-row layout-align-space-around-center"
                  data-for="onCarriageTooltip"
                  data-tip="Import Customs is not applicable for shipments without delivery from the port (on-carriage)."
                >
                  <p
                    className="faded_text flex-none"
                  >
                     Import Customs
                  </p>
                  <Checkbox
                    checked={true}
                    className=""
                    disabled={true}
                    id={null}
                    onChange={[Function]}
                    onClick={null}
                    size={null}
                    theme={
                      Object {
                        "colors": Object {
                          "primary": "#333",
                          "secondary": "#fafafa",
                        },
                      }
                    }
                  />
                  <ReactTooltip
                    className="tooltip_box"
                    effect="solid"
                    id="onCarriageTooltip"
                    insecure={true}
                    resizeHide={true}
                    wrapper="div"
                  />
                </div>
              </div>
              <div
                className="flex-100 no_max layout-row layout-align-start-center"
              >
                <div
                  className="flex-33 layout-row layout-wrap"
                >
                  <div
                    className="flex-100"
                  >
                    <TextHeading
                      Comp={
                        <b
                          style={
                            Object {
                              "fontSize": ".83em",
                              "fontWeight": "normal",
                            }
                          }
                        >
                          (
                          if applicable
                          )
                        </b>
                      }
                      color=""
                      size={3}
                      text="EORI"
                      theme={
                        Object {
                          "colors": Object {
                            "primary": "#333",
                            "secondary": "#fafafa",
                          },
                        }
                      }
                    />
                  </div>
                  <div
                    className="flex-100 input_box"
                  >
                    <input
                      className="EORI_input"
                      name="eori"
                      onChange={[Function]}
                      placeholder="Type in EORI number"
                      type="text"
                      value="EORI"
                    />
                  </div>
                </div>
              </div>
            </div>
          </div>
          <div
            className=" prices flex-20 layout-row layout-wrap layout-align-start-start"
          >
            <div
              className="customs_prices flex-100 layout-row  layout-align-end-center"
            >
              <p
                className="flex-none"
              >
                Import
              </p>
              <h6
                className="flex-none center"
              >
                 
                Price subject to local regulations
              </h6>
            </div>
            <div
              className="customs_prices flex-100 layout-row  layout-align-end-center"
            >
              <p
                className="flex-none"
              >
                Export
              </p>
              <h6
                className="flex-none center"
              >
                 
                Price subject to local regulations
              </h6>
            </div>
            <div
              className="customs_total flex-100 layout-row  layout-align-end-center"
            >
              <p
                className="flex-none"
              >
                Total
              </p>
              <h6
                className="flex-none center"
              >
                 
                Price subject to local regulations
              </h6>
            </div>
          </div>
        </div>
        <div
          className="flex-100 layout-row layout-align-start-center layout-wrap no_customs_box show"
        >
          <div
            className="flex-60 layout-row layout-align-start-center layout-wrap"
          >
            <p
              className="flex-100 margin_5"
            >
              <b>
                A customs declaration is mandatory to pass a national border when exporting or importing. If you choose to handle the customs clearance on your own, TENANT_NAME will need a copy of the customs declaration.
              </b>
            </p>
            <p
              className="flex-100 margin_5"
            >
              <b>
                When you ship goods from outside the European Union (EU), you may be charged customs duty and/or VAT according to local regulations.
              </b>
            </p>
          </div>
          <div
            className="flex-33 no_max layout-row layout-align-end-center"
          />
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`customsData[target].unknown 1`] = `
<div
  className="flex-100 layout-row layout-wrap padd_top"
  name="cargoDetailsBox"
>
  <div
    className="flex-100 layout-row layout-align-center"
  >
    <div
      className="flex-none content_width layout-row layout-wrap"
    >
      <div
        className="flex-100 layout-row layout-sm-wrap"
      >
        <div
          className="flex-50"
        >
          <div
            className="flex-100"
          >
            <div
              className="flex-100 layout-align-start-center layout-row"
            >
              <div
                className="flex-none"
              >
                <TextHeading
                  color=""
                  size={2}
                  text="Cargo Details"
                  theme={
                    Object {
                      "colors": Object {
                        "primary": "#333",
                        "secondary": "#fafafa",
                      },
                    }
                  }
                />
              </div>
            </div>
             
            <div
              className="flex-none"
            >
              <TextHeading
                color=""
                size={3}
                text="Total value of goods"
                theme={
                  Object {
                    "colors": Object {
                      "primary": "#333",
                      "secondary": "#fafafa",
                    },
                  }
                }
              />
            </div>
          </div>
          <div
            className="flex-100 layout-row layout-wrap layout-align-start-start"
          >
            <div
              className="flex-100 layout-row layout-wrap"
            >
              <div
                className="flex-100 layout-row"
              >
                <div
                  className="flex-66 layout-row"
                >
                  <Formsy(FormsyInput)
                    className="flex-100 ccb_total_goods_value cargo_input "
                    errorMessageStyles={
                      Object {
                        "bottom": "-17px",
                        "fontSize": "13px",
                      }
                    }
                    innerRef={[Function]}
                    name="totalGoodsValue"
                    onBlur={[Function]}
                    required={3370}
                    submitAttempted={false}
                    type="number"
                    validationError=""
                    validationErrors={
                      Object {
                        "isDefaultRequiredValue": "Must be greater than 0",
                        "nonNegative": "Must be greater than 0",
                      }
                    }
                    validations={
                      Object {
                        "nonNegative": [Function],
                      }
                    }
                    value={11}
                    wrapperClassName="flex-100 wrapper_cargo_input"
                  />
                </div>
                <div
                  className="flex-33 layout-row"
                >
                  <NamedSelect
                    className="flex-100 ccb_currency"
                    clearable={false}
                    onChange={[Function]}
                    options={
                      Array [
                        Object {
                          "label": "EUR",
                          "value": "EUR",
                        },
                        Object {
                          "label": "AUD",
                          "value": "AUD",
                        },
                        Object {
                          "label": "BGN",
                          "value": "BGN",
                        },
                        Object {
                          "label": "BRL",
                          "value": "BRL",
                        },
                        Object {
                          "label": "CAD",
                          "value": "CAD",
                        },
                        Object {
                          "label": "CHF",
                          "value": "CHF",
                        },
                        Object {
                          "label": "CNY",
                          "value": "CNY",
                        },
                        Object {
                          "label": "CZK",
                          "value": "CZK",
                        },
                        Object {
                          "label": "DKK",
                          "value": "DKK",
                        },
                        Object {
                          "label": "GBP",
                          "value": "GBP",
                        },
                        Object {
                          "label": "HKD",
                          "value": "HKD",
                        },
                        Object {
                          "label": "HRK",
                          "value": "HRK",
                        },
                        Object {
                          "label": "HUF",
                          "value": "HUF",
                        },
                        Object {
                          "label": "IDR",
                          "value": "IDR",
                        },
                        Object {
                          "label": "ILS",
                          "value": "ILS",
                        },
                        Object {
                          "label": "INR",
                          "value": "INR",
                        },
                        Object {
                          "label": "JPY",
                          "value": "JPY",
                        },
                        Object {
                          "label": "KRW",
                          "value": "KRW",
                        },
                        Object {
                          "label": "MXN",
                          "value": "MXN",
                        },
                        Object {
                          "label": "MYR",
                          "value": "MYR",
                        },
                        Object {
                          "label": "NOK",
                          "value": "NOK",
                        },
                        Object {
                          "label": "NZD",
                          "value": "NZD",
                        },
                        Object {
                          "label": "PHP",
                          "value": "PHP",
                        },
                        Object {
                          "label": "PLN",
                          "value": "PLN",
                        },
                        Object {
                          "label": "RON",
                          "value": "RON",
                        },
                        Object {
                          "label": "RUB",
                          "value": "RUB",
                        },
                        Object {
                          "label": "SEK",
                          "value": "SEK",
                        },
                        Object {
                          "label": "SGD",
                          "value": "SGD",
                        },
                        Object {
                          "label": "THB",
                          "value": "THB",
                        },
                        Object {
                          "label": "TRY",
                          "value": "TRY",
                        },
                        Object {
                          "label": "USD",
                          "value": "USD",
                        },
                        Object {
                          "label": "ZAR",
                          "value": "ZAR",
                        },
                      ]
                    }
                    value={
                      Object {
                        "label": "EUR",
                        "value": "EUR",
                      }
                    }
                  />
                </div>
              </div>
            </div>
            <div
              className="flex-100 layout-row layout-wrap"
              id="cargo_notes"
            >
              <div
                className="flex-100"
              >
                <div
                  className="flex-none f_header"
                >
                   
                  <TextHeading
                    color=""
                    size={3}
                    text="Description of Goods (HS Codes if available)"
                    theme={
                      Object {
                        "colors": Object {
                          "primary": "#333",
                          "secondary": "#fafafa",
                        },
                      }
                    }
                  />
                </div>
              </div>
              <div
                className="flex-100"
              >
                <Formsy(FormsyTextarea)
                  className="flex-100 ccb_description_goods cargo_text_area "
                  errorMessageStyles={
                    Object {
                      "bottom": "-17px",
                      "fontSize": "13px",
                    }
                  }
                  innerRef={[Function]}
                  name="cargoNotes"
                  onBlur={[Function]}
                  required="MANDATORY_FIELDS_DESCRIPTION"
                  submitAttempted={false}
                  type="textarea"
                  validationError=""
                  validationErrors={
                    Object {
                      "isDefaultRequiredValue": "Must not be empty",
                    }
                  }
                  validations={null}
                  value="CARGO_NOTES"
                  wrapperClassName="flex-100 wrapper_cargo_input"
                />
              </div>
            </div>
            <div
              className="flex-100 layout-row layout-align-start-start layout-wrap"
            >
              <div
                className="flex-100"
              >
                <div
                  className="flex-none f_header"
                >
                   
                  <h4
                    className="no_m flex-30"
                  >
                    Incoterms
                     
                    <span>
                      (Optional)
                    </span>
                  </h4>
                  <p
                    className="pointy flex-none incoterm_info"
                    onClick={[Function]}
                  >
                    More info
                  </p>
                </div>
              </div>
              <div
                className="flex-100 layout-row layout-align-start-start input_box_full"
              >
                <Formsy(FormsyTextarea)
                  className="flex-100 cargo_text_area "
                  errorMessageStyles={
                    Object {
                      "bottom": "-17px",
                      "fontSize": "13px",
                    }
                  }
                  innerRef={[Function]}
                  name="incotermText"
                  onBlur={[Function]}
                  required={false}
                  submitAttempted={false}
                  type="textarea"
                  validationError=""
                  validationErrors={Object {}}
                  validations={null}
                  value=""
                  wrapperClassName="flex-100 wrapper_cargo_input"
                />
              </div>
            </div>
          </div>
        </div>
        <div
          className="flex-50 padding_left offset-gt-sm-5 layout-row layout-wrap layout-align-start-start"
        >
          <div
            className="flex-100 layout-align-start-center layout-row"
          >
            <div
              className="flex-none"
            >
              <TextHeading
                color=""
                size={2}
                text="Shipment Documents "
                theme={
                  Object {
                    "colors": Object {
                      "primary": "#333",
                      "secondary": "#fafafa",
                    },
                  }
                }
              />
              <br />
              (
              if available
              )
            </div>
          </div>
          <div
            className="flex-100 layout-row layout-wrap"
            name="packing_sheet"
          >
            <div
              className="flex-100 layout-row margin_5"
            >
              <DocumentsMultiForm
                deleteFn={[Function]}
                dispatchFn={[Function]}
                documents={Array []}
                isRequired={true}
                t={[Function]}
                text="Packing List"
                theme={
                  Object {
                    "colors": Object {
                      "primary": "#333",
                      "secondary": "#fafafa",
                    },
                  }
                }
                tooltip=""
                type="packing_sheet"
                uploadFn={null}
              />
            </div>
          </div>
          <div
            className="flex-100 layout-row layout-wrap"
            name="commercial_invoice"
          >
            <div
              className="flex-100 layout-row margin_5"
            >
              <DocumentsMultiForm
                deleteFn={[Function]}
                dispatchFn={[Function]}
                documents={Array []}
                isRequired={true}
                t={[Function]}
                text="Commercial Invoice"
                theme={
                  Object {
                    "colors": Object {
                      "primary": "#333",
                      "secondary": "#fafafa",
                    },
                  }
                }
                tooltip=""
                type="commercial_invoice"
                uploadFn={null}
              />
            </div>
          </div>
          <div
            className="flex-100 layout-row layout-align-start-start layout-wrap"
          >
            <div
              className="flex-100 layout-row layout-align-start-start layout-wrap"
            >
              <div
                className="flex-100"
              >
                <div
                  className="flex-none f_header"
                >
                   
                  <TextHeading
                    color=""
                    size={3}
                    text="Notes (Optional)"
                    theme={
                      Object {
                        "colors": Object {
                          "primary": "#333",
                          "secondary": "#fafafa",
                        },
                      }
                    }
                  />
                </div>
              </div>
              <div
                className="flex-100 layout-row layout-align-start-start input_box_full"
              >
                <Formsy(FormsyTextarea)
                  className="flex-100 cargo_text_area "
                  errorMessageStyles={
                    Object {
                      "bottom": "-17px",
                      "fontSize": "13px",
                    }
                  }
                  innerRef={[Function]}
                  name="notes"
                  onBlur={[Function]}
                  required={false}
                  submitAttempted={false}
                  type="textarea"
                  validationError=""
                  validationErrors={Object {}}
                  validations={null}
                  value="NOTES"
                  wrapperClassName="flex-100 wrapper_cargo_input"
                />
              </div>
            </div>
            <div
              className="flex-gt-sm-100 layout-row layout-align-start-start layout-wrap"
            >
              <div
                className=" flex-100 layout-row layout-align-start-start-space-around layout-wrap"
              >
                <DocumentsMultiForm
                  deleteFn={[Function]}
                  dispatchFn={[Function]}
                  documents={Array []}
                  t={[Function]}
                  text="Miscellaneous"
                  theme={
                    Object {
                      "colors": Object {
                        "primary": "#333",
                        "secondary": "#fafafa",
                      },
                    }
                  }
                  tooltip=""
                  type="miscellaneous"
                  uploadFn={null}
                />
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <div
    className="insurance_customs_sec flex-100 layout-row layout-wrap layout-align-center"
  >
    <div
      className="flex-100 layout-row layout-align-center padd_top"
    >
      <div
        className="flex-none content_width layout-row layout-wrap section_padding"
      >
        <div
          className="flex-100 layout-row layout-align-space-between-start"
        >
          <div
            className="flex-none layout-row layout-align-space-around-center"
          >
            <TextHeading
              color=""
              size={2}
              text="Insurance"
              theme={
                Object {
                  "colors": Object {
                    "primary": "#333",
                    "secondary": "#fafafa",
                  },
                }
              }
            />
          </div>
          <div
            className="flex-33 layout-row layout-align-space-around-center layout-wrap"
          >
            <div
              className="flex-100 layout-row layout-wrap layout-align-end-center"
            >
              <div
                className="flex-90 layout-row layout-align-start-center"
              >
                <label
                  className="pointy"
                  htmlFor="yes_insurance"
                >
                  Yes, I want TENANT_NAME to quote insurance for my cargo
                </label>
              </div>
              <div
                className="flex-10 layout-row layout-align-end-center"
              >
                <Checkbox
                  checked={true}
                  className="ccb_yes_insurance"
                  disabled={false}
                  id="yes_insurance"
                  onChange={[Function]}
                  onClick={null}
                  size={null}
                  theme={
                    Object {
                      "colors": Object {
                        "primary": "#333",
                        "secondary": "#fafafa",
                      },
                    }
                  }
                />
              </div>
            </div>
            <div
              className="flex-100 layout-row layout-align-end-center"
            >
              <div
                className="flex-90 layout-row layout-align-start-center"
              >
                <label
                  className="pointy"
                  htmlFor="no_insurance"
                >
                  No, I do not want TENANT_NAME to quote insurance for my cargo
                </label>
              </div>
              <div
                className="flex-10 layout-row layout-align-end-center"
              >
                <Checkbox
                  checked={false}
                  className="ccb_no_insurance"
                  disabled={false}
                  id="no_insurance"
                  onChange={[Function]}
                  onClick={null}
                  size={null}
                  theme={
                    Object {
                      "colors": Object {
                        "primary": "#333",
                        "secondary": "#fafafa",
                      },
                    }
                  }
                />
              </div>
            </div>
          </div>
        </div>
        <div
          className="flex-100 layout-row layout-align-start-center"
        >
          <p
            className="flex-60 margin_5"
          >
            <b>
              Cargo Insurance provides cover on all risk terms for physical loss or damage to cargo during transport by land, sea or air.
            </b>
          </p>
        </div>
        <div
          className="flex-100 layout-row layout-align-start-center"
        >
          <p
            className="flex-60 margin_5"
          >
            <b>
              Insurance is a cost effective and simple way to cover for physical loss or damage to goods in transit.
            </b>
          </p>
        </div>
        <div
          className="flex-100 layout-row  box_content show"
        >
          <div
            className="flex-80 layout-row layout-wrap"
          >
            <p
              className="flex-90"
            >
              <strong>
                 
                A cost effective and simple way to cover for physical loss or damage to goods in transit.
              </strong>
            </p>
            <p
              className="flex-90"
            >
              Please contact your local {{tenantName}} office for more info.
            </p>
          </div>
        </div>
        <div
          className="flex-100 layout-row layout-align-start-center"
        >
          <div
            className="flex-none layout-row layout-align-center-center"
            onClick={[Function]}
          >
            <p
              className="flex-none pointy"
            >
              Read more...
            </p>
            <i
              className="flex-none offset-5 fa fa-external-link"
            />
          </div>
        </div>
      </div>
    </div>
    <div
      className="flex-100 layout-row layout-align-center padd_top"
    >
      <div
        className="flex-none content_width layout-row layout-wrap section_padding"
      >
        <div
          className="flex-100 layout-row layout-align-space-between-start layout-wrap"
        >
          <div
            className="flex-none layout-row layout-align-space-around-center"
          >
            <TextHeading
              color=""
              size={2}
              text="Customs Handling"
              theme={
                Object {
                  "colors": Object {
                    "primary": "#333",
                    "secondary": "#fafafa",
                  },
                }
              }
            />
          </div>
          <div
            className="flex-33 layout-wrap layout-row layout-align-space-around-center"
          >
            <div
              className="flex-100 layout-row layout-align-end-center"
            >
              <div
                className="flex-90 layout-row layout-align-start-center"
              >
                <label
                  className="pointy"
                  htmlFor="yes_clearance"
                >
                  Yes, I want TENANT_NAME to handle my customs clearance
                </label>
              </div>
              <div
                className="flex-10 layout-row layout-align-end-center"
              >
                <Checkbox
                  checked={null}
                  className="ccb_yes_clearance"
                  disabled={false}
                  id="yes_clearance"
                  onChange={[Function]}
                  onClick={null}
                  size={null}
                  theme={
                    Object {
                      "colors": Object {
                        "primary": "#333",
                        "secondary": "#fafafa",
                      },
                    }
                  }
                />
              </div>
            </div>
            <div
              className="flex-100 layout-row layout-align-end-center"
            >
              <div
                className="flex-90 layout-row layout-align-start-center"
              >
                <label
                  className="pointy"
                  htmlFor="no_clearance"
                >
                  No, I do not want TENANT_NAME to handle my customs clearance
                </label>
              </div>
              <div
                className="flex-10 layout-row layout-align-end-center"
              >
                <Checkbox
                  checked={null}
                  className="ccb_no_clearance"
                  disabled={false}
                  id="no_clearance"
                  onChange={[Function]}
                  onClick={null}
                  size={null}
                  theme={
                    Object {
                      "colors": Object {
                        "primary": "#333",
                        "secondary": "#fafafa",
                      },
                    }
                  }
                />
              </div>
            </div>
          </div>
        </div>
        <div
          className="flex-100 layout-row layout-wrap customs_box  box_content hidden"
        >
          <div
            className="flex-60 layout-row layout-wrap"
          >
            <p
              className="flex-90 margin_5"
            >
              <strong>
                 
                When you ship goods from outside the European Union (EU), you may be charged customs duty and/or VAT. You can either handle the customs on your own, or have it handled for you.
              </strong>
            </p>
            <p
              className="flex-90 margin_5"
            >
              To cover our costs when we present your goods to the customs authorities – and pay any customs duty or VAT due on your behalf – we charge a clearance / handling fee. The fee depends on the value of the goods you are shipping, and can be found here to the right.
            </p>
            <div
              className="flex-100 layout-row layout-align-start-start layout-wrap"
            >
              <div
                className="flex-100 layout-row layout-align-start-center"
                style={
                  Object {
                    "height": "36px",
                  }
                }
              >
                <p
                  className="flex-none"
                >
                   
                  I would like TENANT_NAME to handle:
                </p>
              </div>
              <div
                className="flex-100 layout-row layout-align-start-center layout-wrap"
                style={
                  Object {
                    "height": "36px",
                  }
                }
              >
                <div
                  className="flex-45 layout-row layout-align-space-around-center"
                  data-for="preCarriageTooltip"
                  data-tip="Export Customs is not applicable for shipments without delivery to the port (pre-carriage)."
                >
                  <p
                    className="faded_text flex-none"
                  >
                     Export Customs: 
                  </p>
                  <Checkbox
                    checked={false}
                    className=""
                    disabled={true}
                    id={null}
                    onChange={[Function]}
                    onClick={null}
                    size={null}
                    theme={
                      Object {
                        "colors": Object {
                          "primary": "#333",
                          "secondary": "#fafafa",
                        },
                      }
                    }
                  />
                </div>
                <ReactTooltip
                  className="tooltip_box"
                  effect="solid"
                  id="preCarriageTooltip"
                  insecure={true}
                  resizeHide={true}
                  wrapper="div"
                />
                <div
                  className="flex-45 layout-row layout-align-space-around-center"
                  data-for="onCarriageTooltip"
                  data-tip="Import Customs is not applicable for shipments without delivery from the port (on-carriage)."
                >
                  <p
                    className="faded_text flex-none"
                  >
                     Import Customs
                  </p>
                  <Checkbox
                    checked={false}
                    className=""
                    disabled={true}
                    id={null}
                    onChange={[Function]}
                    onClick={null}
                    size={null}
                    theme={
                      Object {
                        "colors": Object {
                          "primary": "#333",
                          "secondary": "#fafafa",
                        },
                      }
                    }
                  />
                  <ReactTooltip
                    className="tooltip_box"
                    effect="solid"
                    id="onCarriageTooltip"
                    insecure={true}
                    resizeHide={true}
                    wrapper="div"
                  />
                </div>
              </div>
              <div
                className="flex-100 no_max layout-row layout-align-start-center"
              >
                <div
                  className="flex-33 layout-row layout-wrap"
                >
                  <div
                    className="flex-100"
                  >
                    <TextHeading
                      Comp={
                        <b
                          style={
                            Object {
                              "fontSize": ".83em",
                              "fontWeight": "normal",
                            }
                          }
                        >
                          (
                          if applicable
                          )
                        </b>
                      }
                      color=""
                      size={3}
                      text="EORI"
                      theme={
                        Object {
                          "colors": Object {
                            "primary": "#333",
                            "secondary": "#fafafa",
                          },
                        }
                      }
                    />
                  </div>
                  <div
                    className="flex-100 input_box"
                  >
                    <input
                      className="EORI_input"
                      name="eori"
                      onChange={[Function]}
                      placeholder="Type in EORI number"
                      type="text"
                      value="EORI"
                    />
                  </div>
                </div>
              </div>
            </div>
          </div>
          <div
            className=" prices flex-20 layout-row layout-wrap layout-align-start-start"
          >
            <div
              className="customs_prices flex-100 layout-row  layout-align-end-center"
            >
              <p
                className="flex-none"
              >
                Import
              </p>
              <h6
                className="flex-none center"
              >
                 
                Price subject to local regulations
              </h6>
            </div>
            <div
              className="customs_prices flex-100 layout-row  layout-align-end-center"
            >
              <p
                className="flex-none"
              >
                Export
              </p>
              <h6
                className="flex-none center"
              >
                 
                0 EUR
              </h6>
            </div>
            <div
              className="customs_total flex-100 layout-row  layout-align-end-center"
            >
              <p
                className="flex-none"
              >
                Total
              </p>
              <h6
                className="flex-none center"
              >
                 
                0.00 EUR
              </h6>
            </div>
          </div>
        </div>
        <div
          className="flex-100 layout-row layout-align-start-center layout-wrap no_customs_box show"
        >
          <div
            className="flex-60 layout-row layout-align-start-center layout-wrap"
          >
            <p
              className="flex-100 margin_5"
            >
              <b>
                A customs declaration is mandatory to pass a national border when exporting or importing. If you choose to handle the customs clearance on your own, TENANT_NAME will need a copy of the customs declaration.
              </b>
            </p>
            <p
              className="flex-100 margin_5"
            >
              <b>
                When you ship goods from outside the European Union (EU), you may be charged customs duty and/or VAT according to local regulations.
              </b>
            </p>
          </div>
          <div
            className="flex-33 no_max layout-row layout-align-end-center"
          />
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`scope.has_customs || scope.has_insurance || scope.customs_export_paper is false 1`] = `
<div
  className="flex-100 layout-row layout-wrap padd_top"
  name="cargoDetailsBox"
>
  <div
    className="flex-100 layout-row layout-align-center"
  >
    <div
      className="flex-none content_width layout-row layout-wrap"
    >
      <div
        className="flex-100 layout-row layout-sm-wrap"
      >
        <div
          className="flex-50"
        >
          <div
            className="flex-100"
          >
            <div
              className="flex-100 layout-align-start-center layout-row"
            >
              <div
                className="flex-none"
              >
                <TextHeading
                  color=""
                  size={2}
                  text="Cargo Details"
                  theme={
                    Object {
                      "colors": Object {
                        "primary": "#333",
                        "secondary": "#fafafa",
                      },
                    }
                  }
                />
              </div>
            </div>
             
            <div
              className="flex-none"
            >
              <TextHeading
                color=""
                size={3}
                text="Total value of goods"
                theme={
                  Object {
                    "colors": Object {
                      "primary": "#333",
                      "secondary": "#fafafa",
                    },
                  }
                }
              />
            </div>
          </div>
          <div
            className="flex-100 layout-row layout-wrap layout-align-start-start"
          >
            <div
              className="flex-100 layout-row layout-wrap"
            >
              <div
                className="flex-100 layout-row"
              >
                <div
                  className="flex-66 layout-row"
                >
                  <Formsy(FormsyInput)
                    className="flex-100 ccb_total_goods_value cargo_input "
                    errorMessageStyles={
                      Object {
                        "bottom": "-17px",
                        "fontSize": "13px",
                      }
                    }
                    innerRef={[Function]}
                    name="totalGoodsValue"
                    onBlur={[Function]}
                    required={3370}
                    submitAttempted={false}
                    type="number"
                    validationError=""
                    validationErrors={
                      Object {
                        "isDefaultRequiredValue": "Must be greater than 0",
                        "nonNegative": "Must be greater than 0",
                      }
                    }
                    validations={
                      Object {
                        "nonNegative": [Function],
                      }
                    }
                    value={11}
                    wrapperClassName="flex-100 wrapper_cargo_input"
                  />
                </div>
                <div
                  className="flex-33 layout-row"
                >
                  <NamedSelect
                    className="flex-100 ccb_currency"
                    clearable={false}
                    onChange={[Function]}
                    options={
                      Array [
                        Object {
                          "label": "EUR",
                          "value": "EUR",
                        },
                        Object {
                          "label": "AUD",
                          "value": "AUD",
                        },
                        Object {
                          "label": "BGN",
                          "value": "BGN",
                        },
                        Object {
                          "label": "BRL",
                          "value": "BRL",
                        },
                        Object {
                          "label": "CAD",
                          "value": "CAD",
                        },
                        Object {
                          "label": "CHF",
                          "value": "CHF",
                        },
                        Object {
                          "label": "CNY",
                          "value": "CNY",
                        },
                        Object {
                          "label": "CZK",
                          "value": "CZK",
                        },
                        Object {
                          "label": "DKK",
                          "value": "DKK",
                        },
                        Object {
                          "label": "GBP",
                          "value": "GBP",
                        },
                        Object {
                          "label": "HKD",
                          "value": "HKD",
                        },
                        Object {
                          "label": "HRK",
                          "value": "HRK",
                        },
                        Object {
                          "label": "HUF",
                          "value": "HUF",
                        },
                        Object {
                          "label": "IDR",
                          "value": "IDR",
                        },
                        Object {
                          "label": "ILS",
                          "value": "ILS",
                        },
                        Object {
                          "label": "INR",
                          "value": "INR",
                        },
                        Object {
                          "label": "JPY",
                          "value": "JPY",
                        },
                        Object {
                          "label": "KRW",
                          "value": "KRW",
                        },
                        Object {
                          "label": "MXN",
                          "value": "MXN",
                        },
                        Object {
                          "label": "MYR",
                          "value": "MYR",
                        },
                        Object {
                          "label": "NOK",
                          "value": "NOK",
                        },
                        Object {
                          "label": "NZD",
                          "value": "NZD",
                        },
                        Object {
                          "label": "PHP",
                          "value": "PHP",
                        },
                        Object {
                          "label": "PLN",
                          "value": "PLN",
                        },
                        Object {
                          "label": "RON",
                          "value": "RON",
                        },
                        Object {
                          "label": "RUB",
                          "value": "RUB",
                        },
                        Object {
                          "label": "SEK",
                          "value": "SEK",
                        },
                        Object {
                          "label": "SGD",
                          "value": "SGD",
                        },
                        Object {
                          "label": "THB",
                          "value": "THB",
                        },
                        Object {
                          "label": "TRY",
                          "value": "TRY",
                        },
                        Object {
                          "label": "USD",
                          "value": "USD",
                        },
                        Object {
                          "label": "ZAR",
                          "value": "ZAR",
                        },
                      ]
                    }
                    value={
                      Object {
                        "label": "EUR",
                        "value": "EUR",
                      }
                    }
                  />
                </div>
              </div>
            </div>
            <div
              className="flex-100 layout-row layout-wrap"
              id="cargo_notes"
            >
              <div
                className="flex-100"
              >
                <div
                  className="flex-none f_header"
                >
                   
                  <TextHeading
                    color=""
                    size={3}
                    text="Description of Goods (HS Codes if available)"
                    theme={
                      Object {
                        "colors": Object {
                          "primary": "#333",
                          "secondary": "#fafafa",
                        },
                      }
                    }
                  />
                </div>
              </div>
              <div
                className="flex-100"
              >
                <Formsy(FormsyTextarea)
                  className="flex-100 ccb_description_goods cargo_text_area "
                  errorMessageStyles={
                    Object {
                      "bottom": "-17px",
                      "fontSize": "13px",
                    }
                  }
                  innerRef={[Function]}
                  name="cargoNotes"
                  onBlur={[Function]}
                  required="MANDATORY_FIELDS_DESCRIPTION"
                  submitAttempted={false}
                  type="textarea"
                  validationError=""
                  validationErrors={
                    Object {
                      "isDefaultRequiredValue": "Must not be empty",
                    }
                  }
                  validations={null}
                  value="CARGO_NOTES"
                  wrapperClassName="flex-100 wrapper_cargo_input"
                />
              </div>
            </div>
            <div
              className="flex-100 layout-row layout-align-start-start layout-wrap"
            >
              <div
                className="flex-100"
              >
                <div
                  className="flex-none f_header"
                >
                   
                  <h4
                    className="no_m flex-30"
                  >
                    Incoterms
                     
                    <span>
                      (Optional)
                    </span>
                  </h4>
                  <p
                    className="pointy flex-none incoterm_info"
                    onClick={[Function]}
                  >
                    More info
                  </p>
                </div>
              </div>
              <div
                className="flex-100 layout-row layout-align-start-start input_box_full"
              >
                <Formsy(FormsyTextarea)
                  className="flex-100 cargo_text_area "
                  errorMessageStyles={
                    Object {
                      "bottom": "-17px",
                      "fontSize": "13px",
                    }
                  }
                  innerRef={[Function]}
                  name="incotermText"
                  onBlur={[Function]}
                  required={false}
                  submitAttempted={false}
                  type="textarea"
                  validationError=""
                  validationErrors={Object {}}
                  validations={null}
                  value=""
                  wrapperClassName="flex-100 wrapper_cargo_input"
                />
              </div>
            </div>
          </div>
        </div>
        <div
          className="flex-50 padding_left offset-gt-sm-5 layout-row layout-wrap layout-align-start-start"
        >
          <div
            className="flex-100 layout-align-start-center layout-row"
          >
            <div
              className="flex-none"
            >
              <TextHeading
                color=""
                size={2}
                text="Shipment Documents "
                theme={
                  Object {
                    "colors": Object {
                      "primary": "#333",
                      "secondary": "#fafafa",
                    },
                  }
                }
              />
              <br />
              (
              if available
              )
            </div>
          </div>
          <div
            className="flex-100 layout-row layout-wrap"
            name="packing_sheet"
          >
            <div
              className="flex-100 layout-row margin_5"
            >
              <DocumentsMultiForm
                deleteFn={[Function]}
                dispatchFn={[Function]}
                documents={Array []}
                isRequired={true}
                t={[Function]}
                text="Packing List"
                theme={
                  Object {
                    "colors": Object {
                      "primary": "#333",
                      "secondary": "#fafafa",
                    },
                  }
                }
                tooltip=""
                type="packing_sheet"
                uploadFn={null}
              />
            </div>
          </div>
          <div
            className="flex-100 layout-row layout-wrap"
            name="commercial_invoice"
          >
            <div
              className="flex-100 layout-row margin_5"
            >
              <DocumentsMultiForm
                deleteFn={[Function]}
                dispatchFn={[Function]}
                documents={Array []}
                isRequired={true}
                t={[Function]}
                text="Commercial Invoice"
                theme={
                  Object {
                    "colors": Object {
                      "primary": "#333",
                      "secondary": "#fafafa",
                    },
                  }
                }
                tooltip=""
                type="commercial_invoice"
                uploadFn={null}
              />
            </div>
          </div>
          <div
            className="flex-100 layout-row layout-align-start-start layout-wrap"
          >
            <div
              className="flex-100 layout-row layout-align-start-start layout-wrap"
            >
              <div
                className="flex-100"
              >
                <div
                  className="flex-none f_header"
                >
                   
                  <TextHeading
                    color=""
                    size={3}
                    text="Notes (Optional)"
                    theme={
                      Object {
                        "colors": Object {
                          "primary": "#333",
                          "secondary": "#fafafa",
                        },
                      }
                    }
                  />
                </div>
              </div>
              <div
                className="flex-100 layout-row layout-align-start-start input_box_full"
              >
                <Formsy(FormsyTextarea)
                  className="flex-100 cargo_text_area "
                  errorMessageStyles={
                    Object {
                      "bottom": "-17px",
                      "fontSize": "13px",
                    }
                  }
                  innerRef={[Function]}
                  name="notes"
                  onBlur={[Function]}
                  required={false}
                  submitAttempted={false}
                  type="textarea"
                  validationError=""
                  validationErrors={Object {}}
                  validations={null}
                  value="NOTES"
                  wrapperClassName="flex-100 wrapper_cargo_input"
                />
              </div>
            </div>
            <div
              className="flex-gt-sm-100 layout-row layout-align-start-start layout-wrap"
            >
              <div
                className=" flex-100 layout-row layout-align-start-start-space-around layout-wrap"
              >
                <DocumentsMultiForm
                  deleteFn={[Function]}
                  dispatchFn={[Function]}
                  documents={Array []}
                  t={[Function]}
                  text="Miscellaneous"
                  theme={
                    Object {
                      "colors": Object {
                        "primary": "#333",
                        "secondary": "#fafafa",
                      },
                    }
                  }
                  tooltip=""
                  type="miscellaneous"
                  uploadFn={null}
                />
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`scope.has_customs || scope.has_insurance 1`] = `
<div
  className="flex-100 layout-row layout-wrap padd_top"
  name="cargoDetailsBox"
>
  <div
    className="flex-100 layout-row layout-align-center"
  >
    <div
      className="flex-none content_width layout-row layout-wrap"
    >
      <div
        className="flex-100 layout-row layout-sm-wrap"
      >
        <div
          className="flex-50"
        >
          <div
            className="flex-100"
          >
            <div
              className="flex-100 layout-align-start-center layout-row"
            >
              <div
                className="flex-none"
              >
                <TextHeading
                  color=""
                  size={2}
                  text="Cargo Details"
                  theme={
                    Object {
                      "colors": Object {
                        "primary": "#333",
                        "secondary": "#fafafa",
                      },
                    }
                  }
                />
              </div>
            </div>
             
            <div
              className="flex-none"
            >
              <TextHeading
                color=""
                size={3}
                text="Total value of goods"
                theme={
                  Object {
                    "colors": Object {
                      "primary": "#333",
                      "secondary": "#fafafa",
                    },
                  }
                }
              />
            </div>
          </div>
          <div
            className="flex-100 layout-row layout-wrap layout-align-start-start"
          >
            <div
              className="flex-100 layout-row layout-wrap"
            >
              <div
                className="flex-100 layout-row"
              >
                <div
                  className="flex-66 layout-row"
                >
                  <Formsy(FormsyInput)
                    className="flex-100 ccb_total_goods_value cargo_input "
                    errorMessageStyles={
                      Object {
                        "bottom": "-17px",
                        "fontSize": "13px",
                      }
                    }
                    innerRef={[Function]}
                    name="totalGoodsValue"
                    onBlur={[Function]}
                    required={3370}
                    submitAttempted={false}
                    type="number"
                    validationError=""
                    validationErrors={
                      Object {
                        "isDefaultRequiredValue": "Must be greater than 0",
                        "nonNegative": "Must be greater than 0",
                      }
                    }
                    validations={
                      Object {
                        "nonNegative": [Function],
                      }
                    }
                    value={11}
                    wrapperClassName="flex-100 wrapper_cargo_input"
                  />
                </div>
                <div
                  className="flex-33 layout-row"
                >
                  <NamedSelect
                    className="flex-100 ccb_currency"
                    clearable={false}
                    onChange={[Function]}
                    options={
                      Array [
                        Object {
                          "label": "EUR",
                          "value": "EUR",
                        },
                        Object {
                          "label": "AUD",
                          "value": "AUD",
                        },
                        Object {
                          "label": "BGN",
                          "value": "BGN",
                        },
                        Object {
                          "label": "BRL",
                          "value": "BRL",
                        },
                        Object {
                          "label": "CAD",
                          "value": "CAD",
                        },
                        Object {
                          "label": "CHF",
                          "value": "CHF",
                        },
                        Object {
                          "label": "CNY",
                          "value": "CNY",
                        },
                        Object {
                          "label": "CZK",
                          "value": "CZK",
                        },
                        Object {
                          "label": "DKK",
                          "value": "DKK",
                        },
                        Object {
                          "label": "GBP",
                          "value": "GBP",
                        },
                        Object {
                          "label": "HKD",
                          "value": "HKD",
                        },
                        Object {
                          "label": "HRK",
                          "value": "HRK",
                        },
                        Object {
                          "label": "HUF",
                          "value": "HUF",
                        },
                        Object {
                          "label": "IDR",
                          "value": "IDR",
                        },
                        Object {
                          "label": "ILS",
                          "value": "ILS",
                        },
                        Object {
                          "label": "INR",
                          "value": "INR",
                        },
                        Object {
                          "label": "JPY",
                          "value": "JPY",
                        },
                        Object {
                          "label": "KRW",
                          "value": "KRW",
                        },
                        Object {
                          "label": "MXN",
                          "value": "MXN",
                        },
                        Object {
                          "label": "MYR",
                          "value": "MYR",
                        },
                        Object {
                          "label": "NOK",
                          "value": "NOK",
                        },
                        Object {
                          "label": "NZD",
                          "value": "NZD",
                        },
                        Object {
                          "label": "PHP",
                          "value": "PHP",
                        },
                        Object {
                          "label": "PLN",
                          "value": "PLN",
                        },
                        Object {
                          "label": "RON",
                          "value": "RON",
                        },
                        Object {
                          "label": "RUB",
                          "value": "RUB",
                        },
                        Object {
                          "label": "SEK",
                          "value": "SEK",
                        },
                        Object {
                          "label": "SGD",
                          "value": "SGD",
                        },
                        Object {
                          "label": "THB",
                          "value": "THB",
                        },
                        Object {
                          "label": "TRY",
                          "value": "TRY",
                        },
                        Object {
                          "label": "USD",
                          "value": "USD",
                        },
                        Object {
                          "label": "ZAR",
                          "value": "ZAR",
                        },
                      ]
                    }
                    value={
                      Object {
                        "label": "EUR",
                        "value": "EUR",
                      }
                    }
                  />
                </div>
              </div>
            </div>
            <div
              className="flex-100 layout-row layout-wrap"
              id="cargo_notes"
            >
              <div
                className="flex-100"
              >
                <div
                  className="flex-none f_header"
                >
                   
                  <TextHeading
                    color=""
                    size={3}
                    text="Description of Goods (HS Codes if available)"
                    theme={
                      Object {
                        "colors": Object {
                          "primary": "#333",
                          "secondary": "#fafafa",
                        },
                      }
                    }
                  />
                </div>
              </div>
              <div
                className="flex-100"
              >
                <Formsy(FormsyTextarea)
                  className="flex-100 ccb_description_goods cargo_text_area "
                  errorMessageStyles={
                    Object {
                      "bottom": "-17px",
                      "fontSize": "13px",
                    }
                  }
                  innerRef={[Function]}
                  name="cargoNotes"
                  onBlur={[Function]}
                  required="MANDATORY_FIELDS_DESCRIPTION"
                  submitAttempted={false}
                  type="textarea"
                  validationError=""
                  validationErrors={
                    Object {
                      "isDefaultRequiredValue": "Must not be empty",
                    }
                  }
                  validations={null}
                  value="CARGO_NOTES"
                  wrapperClassName="flex-100 wrapper_cargo_input"
                />
              </div>
            </div>
            <div
              className="flex-100 layout-row layout-align-start-start layout-wrap"
            >
              <div
                className="flex-100"
              >
                <div
                  className="flex-none f_header"
                >
                   
                  <h4
                    className="no_m flex-30"
                  >
                    Incoterms
                     
                    <span>
                      (Optional)
                    </span>
                  </h4>
                  <p
                    className="pointy flex-none incoterm_info"
                    onClick={[Function]}
                  >
                    More info
                  </p>
                </div>
              </div>
              <div
                className="flex-100 layout-row layout-align-start-start input_box_full"
              >
                <Formsy(FormsyTextarea)
                  className="flex-100 cargo_text_area "
                  errorMessageStyles={
                    Object {
                      "bottom": "-17px",
                      "fontSize": "13px",
                    }
                  }
                  innerRef={[Function]}
                  name="incotermText"
                  onBlur={[Function]}
                  required={false}
                  submitAttempted={false}
                  type="textarea"
                  validationError=""
                  validationErrors={Object {}}
                  validations={null}
                  value=""
                  wrapperClassName="flex-100 wrapper_cargo_input"
                />
              </div>
            </div>
          </div>
        </div>
        <div
          className="flex-50 padding_left offset-gt-sm-5 layout-row layout-wrap layout-align-start-start"
        >
          <div
            className="flex-100 layout-align-start-center layout-row"
          >
            <div
              className="flex-none"
            >
              <TextHeading
                color=""
                size={2}
                text="Shipment Documents "
                theme={
                  Object {
                    "colors": Object {
                      "primary": "#333",
                      "secondary": "#fafafa",
                    },
                  }
                }
              />
              <br />
              (
              if available
              )
            </div>
          </div>
          <div
            className="flex-100 layout-row layout-wrap"
            name="packing_sheet"
          >
            <div
              className="flex-100 layout-row margin_5"
            >
              <DocumentsMultiForm
                deleteFn={[Function]}
                dispatchFn={[Function]}
                documents={Array []}
                isRequired={true}
                t={[Function]}
                text="Packing List"
                theme={
                  Object {
                    "colors": Object {
                      "primary": "#333",
                      "secondary": "#fafafa",
                    },
                  }
                }
                tooltip=""
                type="packing_sheet"
                uploadFn={null}
              />
            </div>
          </div>
          <div
            className="flex-100 layout-row layout-wrap"
            name="commercial_invoice"
          >
            <div
              className="flex-100 layout-row margin_5"
            >
              <DocumentsMultiForm
                deleteFn={[Function]}
                dispatchFn={[Function]}
                documents={Array []}
                isRequired={true}
                t={[Function]}
                text="Commercial Invoice"
                theme={
                  Object {
                    "colors": Object {
                      "primary": "#333",
                      "secondary": "#fafafa",
                    },
                  }
                }
                tooltip=""
                type="commercial_invoice"
                uploadFn={null}
              />
            </div>
          </div>
          <div
            className="flex-100 layout-row layout-align-start-start layout-wrap"
          >
            <div
              className="flex-100 layout-row layout-align-start-start layout-wrap"
            >
              <div
                className="flex-100"
              >
                <div
                  className="flex-none f_header"
                >
                   
                  <TextHeading
                    color=""
                    size={3}
                    text="Notes (Optional)"
                    theme={
                      Object {
                        "colors": Object {
                          "primary": "#333",
                          "secondary": "#fafafa",
                        },
                      }
                    }
                  />
                </div>
              </div>
              <div
                className="flex-100 layout-row layout-align-start-start input_box_full"
              >
                <Formsy(FormsyTextarea)
                  className="flex-100 cargo_text_area "
                  errorMessageStyles={
                    Object {
                      "bottom": "-17px",
                      "fontSize": "13px",
                    }
                  }
                  innerRef={[Function]}
                  name="notes"
                  onBlur={[Function]}
                  required={false}
                  submitAttempted={false}
                  type="textarea"
                  validationError=""
                  validationErrors={Object {}}
                  validations={null}
                  value="NOTES"
                  wrapperClassName="flex-100 wrapper_cargo_input"
                />
              </div>
            </div>
            <div
              className="flex-gt-sm-100 layout-row layout-align-start-start layout-wrap"
            >
              <div
                className=" flex-100 layout-row layout-align-start-start-space-around layout-wrap"
              >
                <DocumentsMultiForm
                  deleteFn={[Function]}
                  dispatchFn={[Function]}
                  documents={Array []}
                  t={[Function]}
                  text="Miscellaneous"
                  theme={
                    Object {
                      "colors": Object {
                        "primary": "#333",
                        "secondary": "#fafafa",
                      },
                    }
                  }
                  tooltip=""
                  type="miscellaneous"
                  uploadFn={null}
                />
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <div
    className="insurance_customs_sec flex-100 layout-row layout-wrap layout-align-center"
  >
    <div
      className="flex-100 layout-row layout-align-center padd_top"
    >
      <div
        className="flex-none content_width layout-row layout-wrap section_padding"
      >
        <div
          className="flex-100 layout-row layout-align-space-between-start"
        >
          <div
            className="flex-none layout-row layout-align-space-around-center"
          >
            <TextHeading
              color=""
              size={2}
              text="Insurance"
              theme={
                Object {
                  "colors": Object {
                    "primary": "#333",
                    "secondary": "#fafafa",
                  },
                }
              }
            />
          </div>
          <div
            className="flex-33 layout-row layout-align-space-around-center layout-wrap"
          >
            <div
              className="flex-100 layout-row layout-wrap layout-align-end-center"
            >
              <div
                className="flex-90 layout-row layout-align-start-center"
              >
                <label
                  className="pointy"
                  htmlFor="yes_insurance"
                >
                  Yes, I want TENANT_NAME to quote insurance for my cargo
                </label>
              </div>
              <div
                className="flex-10 layout-row layout-align-end-center"
              >
                <Checkbox
                  checked={null}
                  className="ccb_yes_insurance"
                  disabled={false}
                  id="yes_insurance"
                  onChange={[Function]}
                  onClick={null}
                  size={null}
                  theme={
                    Object {
                      "colors": Object {
                        "primary": "#333",
                        "secondary": "#fafafa",
                      },
                    }
                  }
                />
              </div>
            </div>
            <div
              className="flex-100 layout-row layout-align-end-center"
            >
              <div
                className="flex-90 layout-row layout-align-start-center"
              >
                <label
                  className="pointy"
                  htmlFor="no_insurance"
                >
                  No, I do not want TENANT_NAME to quote insurance for my cargo
                </label>
              </div>
              <div
                className="flex-10 layout-row layout-align-end-center"
              >
                <Checkbox
                  checked={null}
                  className="ccb_no_insurance"
                  disabled={false}
                  id="no_insurance"
                  onChange={[Function]}
                  onClick={null}
                  size={null}
                  theme={
                    Object {
                      "colors": Object {
                        "primary": "#333",
                        "secondary": "#fafafa",
                      },
                    }
                  }
                />
              </div>
            </div>
          </div>
        </div>
        <div
          className="flex-100 layout-row layout-align-start-center"
        >
          <p
            className="flex-60 margin_5"
          >
            <b>
              Cargo Insurance provides cover on all risk terms for physical loss or damage to cargo during transport by land, sea or air.
            </b>
          </p>
        </div>
        <div
          className="flex-100 layout-row layout-align-start-center"
        >
          <p
            className="flex-60 margin_5"
          >
            <b>
              Insurance is a cost effective and simple way to cover for physical loss or damage to goods in transit.
            </b>
          </p>
        </div>
        <div
          className="flex-100 layout-row  box_content "
        >
          <div
            className="flex-80 layout-row layout-wrap"
          >
            <p
              className="flex-90"
            >
              <strong>
                 
                A cost effective and simple way to cover for physical loss or damage to goods in transit.
              </strong>
            </p>
            <p
              className="flex-90"
            >
              Please contact your local {{tenantName}} office for more info.
            </p>
          </div>
        </div>
        <div
          className="flex-100 layout-row layout-align-start-center"
        >
          <div
            className="flex-none layout-row layout-align-center-center"
            onClick={[Function]}
          >
            <p
              className="flex-none pointy"
            >
              Read more...
            </p>
            <i
              className="flex-none offset-5 fa fa-external-link"
            />
          </div>
        </div>
      </div>
    </div>
    <div
      className="flex-100 layout-row layout-align-center padd_top"
    >
      <div
        className="flex-none content_width layout-row layout-wrap section_padding"
      >
        <div
          className="flex-100 layout-row layout-align-space-between-start layout-wrap"
        >
          <div
            className="flex-none layout-row layout-align-space-around-center"
          >
            <TextHeading
              color=""
              size={2}
              text="Customs Handling"
              theme={
                Object {
                  "colors": Object {
                    "primary": "#333",
                    "secondary": "#fafafa",
                  },
                }
              }
            />
          </div>
          <div
            className="flex-33 layout-wrap layout-row layout-align-space-around-center"
          >
            <div
              className="flex-100 layout-row layout-align-end-center"
            >
              <div
                className="flex-90 layout-row layout-align-start-center"
              >
                <label
                  className="pointy"
                  htmlFor="yes_clearance"
                >
                  Yes, I want TENANT_NAME to handle my customs clearance
                </label>
              </div>
              <div
                className="flex-10 layout-row layout-align-end-center"
              >
                <Checkbox
                  checked={null}
                  className="ccb_yes_clearance"
                  disabled={false}
                  id="yes_clearance"
                  onChange={[Function]}
                  onClick={null}
                  size={null}
                  theme={
                    Object {
                      "colors": Object {
                        "primary": "#333",
                        "secondary": "#fafafa",
                      },
                    }
                  }
                />
              </div>
            </div>
            <div
              className="flex-100 layout-row layout-align-end-center"
            >
              <div
                className="flex-90 layout-row layout-align-start-center"
              >
                <label
                  className="pointy"
                  htmlFor="no_clearance"
                >
                  No, I do not want TENANT_NAME to handle my customs clearance
                </label>
              </div>
              <div
                className="flex-10 layout-row layout-align-end-center"
              >
                <Checkbox
                  checked={null}
                  className="ccb_no_clearance"
                  disabled={false}
                  id="no_clearance"
                  onChange={[Function]}
                  onClick={null}
                  size={null}
                  theme={
                    Object {
                      "colors": Object {
                        "primary": "#333",
                        "secondary": "#fafafa",
                      },
                    }
                  }
                />
              </div>
            </div>
          </div>
        </div>
        <div
          className="flex-100 layout-row layout-wrap customs_box  box_content hidden"
        >
          <div
            className="flex-60 layout-row layout-wrap"
          >
            <p
              className="flex-90 margin_5"
            >
              <strong>
                 
                When you ship goods from outside the European Union (EU), you may be charged customs duty and/or VAT. You can either handle the customs on your own, or have it handled for you.
              </strong>
            </p>
            <p
              className="flex-90 margin_5"
            >
              To cover our costs when we present your goods to the customs authorities – and pay any customs duty or VAT due on your behalf – we charge a clearance / handling fee. The fee depends on the value of the goods you are shipping, and can be found here to the right.
            </p>
            <div
              className="flex-100 layout-row layout-align-start-start layout-wrap"
            >
              <div
                className="flex-100 layout-row layout-align-start-center"
                style={
                  Object {
                    "height": "36px",
                  }
                }
              >
                <p
                  className="flex-none"
                >
                   
                  I would like TENANT_NAME to handle:
                </p>
              </div>
              <div
                className="flex-100 layout-row layout-align-start-center layout-wrap"
                style={
                  Object {
                    "height": "36px",
                  }
                }
              >
                <div
                  className="flex-45 layout-row layout-align-space-around-center"
                  data-for="preCarriageTooltip"
                  data-tip="Export Customs is not applicable for shipments without delivery to the port (pre-carriage)."
                >
                  <p
                    className="faded_text flex-none"
                  >
                     Export Customs: 
                  </p>
                  <Checkbox
                    checked={true}
                    className=""
                    disabled={true}
                    id={null}
                    onChange={[Function]}
                    onClick={null}
                    size={null}
                    theme={
                      Object {
                        "colors": Object {
                          "primary": "#333",
                          "secondary": "#fafafa",
                        },
                      }
                    }
                  />
                </div>
                <ReactTooltip
                  className="tooltip_box"
                  effect="solid"
                  id="preCarriageTooltip"
                  insecure={true}
                  resizeHide={true}
                  wrapper="div"
                />
                <div
                  className="flex-45 layout-row layout-align-space-around-center"
                  data-for="onCarriageTooltip"
                  data-tip="Import Customs is not applicable for shipments without delivery from the port (on-carriage)."
                >
                  <p
                    className="faded_text flex-none"
                  >
                     Import Customs
                  </p>
                  <Checkbox
                    checked={true}
                    className=""
                    disabled={true}
                    id={null}
                    onChange={[Function]}
                    onClick={null}
                    size={null}
                    theme={
                      Object {
                        "colors": Object {
                          "primary": "#333",
                          "secondary": "#fafafa",
                        },
                      }
                    }
                  />
                  <ReactTooltip
                    className="tooltip_box"
                    effect="solid"
                    id="onCarriageTooltip"
                    insecure={true}
                    resizeHide={true}
                    wrapper="div"
                  />
                </div>
              </div>
              <div
                className="flex-100 no_max layout-row layout-align-start-center"
              >
                <div
                  className="flex-33 layout-row layout-wrap"
                >
                  <div
                    className="flex-100"
                  >
                    <TextHeading
                      Comp={
                        <b
                          style={
                            Object {
                              "fontSize": ".83em",
                              "fontWeight": "normal",
                            }
                          }
                        >
                          (
                          if applicable
                          )
                        </b>
                      }
                      color=""
                      size={3}
                      text="EORI"
                      theme={
                        Object {
                          "colors": Object {
                            "primary": "#333",
                            "secondary": "#fafafa",
                          },
                        }
                      }
                    />
                  </div>
                  <div
                    className="flex-100 input_box"
                  >
                    <input
                      className="EORI_input"
                      name="eori"
                      onChange={[Function]}
                      placeholder="Type in EORI number"
                      type="text"
                      value="EORI"
                    />
                  </div>
                </div>
              </div>
            </div>
          </div>
          <div
            className=" prices flex-20 layout-row layout-wrap layout-align-start-start"
          >
            <div
              className="customs_prices flex-100 layout-row  layout-align-end-center"
            >
              <p
                className="flex-none"
              >
                Import
              </p>
              <h6
                className="flex-none center"
              >
                 
                Price subject to local regulations
              </h6>
            </div>
            <div
              className="customs_prices flex-100 layout-row  layout-align-end-center"
            >
              <p
                className="flex-none"
              >
                Export
              </p>
              <h6
                className="flex-none center"
              >
                 
                100.00 EUR
              </h6>
            </div>
            <div
              className="customs_total flex-100 layout-row  layout-align-end-center"
            >
              <p
                className="flex-none"
              >
                Total
              </p>
              <h6
                className="flex-none center"
              >
                 
                NaN EUR
              </h6>
            </div>
          </div>
        </div>
        <div
          className="flex-100 layout-row layout-align-start-center layout-wrap no_customs_box show"
        >
          <div
            className="flex-60 layout-row layout-align-start-center layout-wrap"
          >
            <p
              className="flex-100 margin_5"
            >
              <b>
                A customs declaration is mandatory to pass a national border when exporting or importing. If you choose to handle the customs clearance on your own, TENANT_NAME will need a copy of the customs declaration.
              </b>
            </p>
            <p
              className="flex-100 margin_5"
            >
              <b>
                When you ship goods from outside the European Union (EU), you may be charged customs duty and/or VAT according to local regulations.
              </b>
            </p>
          </div>
          <div
            className="flex-33 no_max layout-row layout-align-end-center"
          />
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`shallow render 1`] = `
<div
  className="flex-100 layout-row layout-wrap padd_top"
  name="cargoDetailsBox"
>
  <div
    className="flex-100 layout-row layout-align-center"
  >
    <div
      className="flex-none content_width layout-row layout-wrap"
    >
      <div
        className="flex-100 layout-row layout-sm-wrap"
      >
        <div
          className="flex-50"
        >
          <div
            className="flex-100"
          >
            <div
              className="flex-100 layout-align-start-center layout-row"
            >
              <div
                className="flex-none"
              >
                <TextHeading
                  color=""
                  size={2}
                  text="Cargo Details"
                  theme={
                    Object {
                      "colors": Object {
                        "primary": "#333",
                        "secondary": "#fafafa",
                      },
                    }
                  }
                />
              </div>
            </div>
             
            <div
              className="flex-none"
            >
              <TextHeading
                color=""
                size={3}
                text="Total value of goods"
                theme={
                  Object {
                    "colors": Object {
                      "primary": "#333",
                      "secondary": "#fafafa",
                    },
                  }
                }
              />
            </div>
          </div>
          <div
            className="flex-100 layout-row layout-wrap layout-align-start-start"
          >
            <div
              className="flex-100 layout-row layout-wrap"
            >
              <div
                className="flex-100 layout-row"
              >
                <div
                  className="flex-66 layout-row"
                >
                  <Formsy(FormsyInput)
                    className="flex-100 ccb_total_goods_value cargo_input "
                    errorMessageStyles={
                      Object {
                        "bottom": "-17px",
                        "fontSize": "13px",
                      }
                    }
                    innerRef={[Function]}
                    name="totalGoodsValue"
                    onBlur={[Function]}
                    required={3370}
                    submitAttempted={false}
                    type="number"
                    validationError=""
                    validationErrors={
                      Object {
                        "isDefaultRequiredValue": "Must be greater than 0",
                        "nonNegative": "Must be greater than 0",
                      }
                    }
                    validations={
                      Object {
                        "nonNegative": [Function],
                      }
                    }
                    value={11}
                    wrapperClassName="flex-100 wrapper_cargo_input"
                  />
                </div>
                <div
                  className="flex-33 layout-row"
                >
                  <NamedSelect
                    className="flex-100 ccb_currency"
                    clearable={false}
                    onChange={[Function]}
                    options={
                      Array [
                        Object {
                          "label": "EUR",
                          "value": "EUR",
                        },
                        Object {
                          "label": "AUD",
                          "value": "AUD",
                        },
                        Object {
                          "label": "BGN",
                          "value": "BGN",
                        },
                        Object {
                          "label": "BRL",
                          "value": "BRL",
                        },
                        Object {
                          "label": "CAD",
                          "value": "CAD",
                        },
                        Object {
                          "label": "CHF",
                          "value": "CHF",
                        },
                        Object {
                          "label": "CNY",
                          "value": "CNY",
                        },
                        Object {
                          "label": "CZK",
                          "value": "CZK",
                        },
                        Object {
                          "label": "DKK",
                          "value": "DKK",
                        },
                        Object {
                          "label": "GBP",
                          "value": "GBP",
                        },
                        Object {
                          "label": "HKD",
                          "value": "HKD",
                        },
                        Object {
                          "label": "HRK",
                          "value": "HRK",
                        },
                        Object {
                          "label": "HUF",
                          "value": "HUF",
                        },
                        Object {
                          "label": "IDR",
                          "value": "IDR",
                        },
                        Object {
                          "label": "ILS",
                          "value": "ILS",
                        },
                        Object {
                          "label": "INR",
                          "value": "INR",
                        },
                        Object {
                          "label": "JPY",
                          "value": "JPY",
                        },
                        Object {
                          "label": "KRW",
                          "value": "KRW",
                        },
                        Object {
                          "label": "MXN",
                          "value": "MXN",
                        },
                        Object {
                          "label": "MYR",
                          "value": "MYR",
                        },
                        Object {
                          "label": "NOK",
                          "value": "NOK",
                        },
                        Object {
                          "label": "NZD",
                          "value": "NZD",
                        },
                        Object {
                          "label": "PHP",
                          "value": "PHP",
                        },
                        Object {
                          "label": "PLN",
                          "value": "PLN",
                        },
                        Object {
                          "label": "RON",
                          "value": "RON",
                        },
                        Object {
                          "label": "RUB",
                          "value": "RUB",
                        },
                        Object {
                          "label": "SEK",
                          "value": "SEK",
                        },
                        Object {
                          "label": "SGD",
                          "value": "SGD",
                        },
                        Object {
                          "label": "THB",
                          "value": "THB",
                        },
                        Object {
                          "label": "TRY",
                          "value": "TRY",
                        },
                        Object {
                          "label": "USD",
                          "value": "USD",
                        },
                        Object {
                          "label": "ZAR",
                          "value": "ZAR",
                        },
                      ]
                    }
                    value={
                      Object {
                        "label": "EUR",
                        "value": "EUR",
                      }
                    }
                  />
                </div>
              </div>
            </div>
            <div
              className="flex-100 layout-row layout-wrap"
              id="cargo_notes"
            >
              <div
                className="flex-100"
              >
                <div
                  className="flex-none f_header"
                >
                   
                  <TextHeading
                    color=""
                    size={3}
                    text="Description of Goods (HS Codes if available)"
                    theme={
                      Object {
                        "colors": Object {
                          "primary": "#333",
                          "secondary": "#fafafa",
                        },
                      }
                    }
                  />
                </div>
              </div>
              <div
                className="flex-100"
              >
                <Formsy(FormsyTextarea)
                  className="flex-100 ccb_description_goods cargo_text_area "
                  errorMessageStyles={
                    Object {
                      "bottom": "-17px",
                      "fontSize": "13px",
                    }
                  }
                  innerRef={[Function]}
                  name="cargoNotes"
                  onBlur={[Function]}
                  required="MANDATORY_FIELDS_DESCRIPTION"
                  submitAttempted={false}
                  type="textarea"
                  validationError=""
                  validationErrors={
                    Object {
                      "isDefaultRequiredValue": "Must not be empty",
                    }
                  }
                  validations={null}
                  value="CARGO_NOTES"
                  wrapperClassName="flex-100 wrapper_cargo_input"
                />
              </div>
            </div>
            <div
              className="flex-100 layout-row layout-align-start-start layout-wrap"
            >
              <div
                className="flex-100"
              >
                <div
                  className="flex-none f_header"
                >
                   
                  <h4
                    className="no_m flex-30"
                  >
                    Incoterms
                     
                    <span>
                      (Optional)
                    </span>
                  </h4>
                  <p
                    className="pointy flex-none incoterm_info"
                    onClick={[Function]}
                  >
                    More info
                  </p>
                </div>
              </div>
              <div
                className="flex-100 layout-row layout-align-start-start input_box_full"
              >
                <Formsy(FormsyTextarea)
                  className="flex-100 cargo_text_area "
                  errorMessageStyles={
                    Object {
                      "bottom": "-17px",
                      "fontSize": "13px",
                    }
                  }
                  innerRef={[Function]}
                  name="incotermText"
                  onBlur={[Function]}
                  required={false}
                  submitAttempted={false}
                  type="textarea"
                  validationError=""
                  validationErrors={Object {}}
                  validations={null}
                  value=""
                  wrapperClassName="flex-100 wrapper_cargo_input"
                />
              </div>
            </div>
          </div>
        </div>
        <div
          className="flex-50 padding_left offset-gt-sm-5 layout-row layout-wrap layout-align-start-start"
        >
          <div
            className="flex-100 layout-align-start-center layout-row"
          >
            <div
              className="flex-none"
            >
              <TextHeading
                color=""
                size={2}
                text="Shipment Documents "
                theme={
                  Object {
                    "colors": Object {
                      "primary": "#333",
                      "secondary": "#fafafa",
                    },
                  }
                }
              />
              <br />
              (
              if available
              )
            </div>
          </div>
          <div
            className="flex-100 layout-row layout-wrap"
            name="packing_sheet"
          >
            <div
              className="flex-100 layout-row margin_5"
            >
              <DocumentsMultiForm
                deleteFn={[Function]}
                dispatchFn={[Function]}
                documents={Array []}
                isRequired={true}
                t={[Function]}
                text="Packing List"
                theme={
                  Object {
                    "colors": Object {
                      "primary": "#333",
                      "secondary": "#fafafa",
                    },
                  }
                }
                tooltip=""
                type="packing_sheet"
                uploadFn={null}
              />
            </div>
          </div>
          <div
            className="flex-100 layout-row layout-wrap"
            name="commercial_invoice"
          >
            <div
              className="flex-100 layout-row margin_5"
            >
              <DocumentsMultiForm
                deleteFn={[Function]}
                dispatchFn={[Function]}
                documents={Array []}
                isRequired={true}
                t={[Function]}
                text="Commercial Invoice"
                theme={
                  Object {
                    "colors": Object {
                      "primary": "#333",
                      "secondary": "#fafafa",
                    },
                  }
                }
                tooltip=""
                type="commercial_invoice"
                uploadFn={null}
              />
            </div>
          </div>
          <div
            className="flex-100 layout-row layout-align-start-start layout-wrap"
          >
            <div
              className="flex-100 layout-row layout-align-start-start layout-wrap"
            >
              <div
                className="flex-100"
              >
                <div
                  className="flex-none f_header"
                >
                   
                  <TextHeading
                    color=""
                    size={3}
                    text="Notes (Optional)"
                    theme={
                      Object {
                        "colors": Object {
                          "primary": "#333",
                          "secondary": "#fafafa",
                        },
                      }
                    }
                  />
                </div>
              </div>
              <div
                className="flex-100 layout-row layout-align-start-start input_box_full"
              >
                <Formsy(FormsyTextarea)
                  className="flex-100 cargo_text_area "
                  errorMessageStyles={
                    Object {
                      "bottom": "-17px",
                      "fontSize": "13px",
                    }
                  }
                  innerRef={[Function]}
                  name="notes"
                  onBlur={[Function]}
                  required={false}
                  submitAttempted={false}
                  type="textarea"
                  validationError=""
                  validationErrors={Object {}}
                  validations={null}
                  value="NOTES"
                  wrapperClassName="flex-100 wrapper_cargo_input"
                />
              </div>
            </div>
            <div
              className="flex-gt-sm-100 layout-row layout-align-start-start layout-wrap"
            >
              <div
                className=" flex-100 layout-row layout-align-start-start-space-around layout-wrap"
              >
                <DocumentsMultiForm
                  deleteFn={[Function]}
                  dispatchFn={[Function]}
                  documents={Array []}
                  t={[Function]}
                  text="Miscellaneous"
                  theme={
                    Object {
                      "colors": Object {
                        "primary": "#333",
                        "secondary": "#fafafa",
                      },
                    }
                  }
                  tooltip=""
                  type="miscellaneous"
                  uploadFn={null}
                />
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <div
    className="insurance_customs_sec flex-100 layout-row layout-wrap layout-align-center"
  >
    <div
      className="flex-100 layout-row layout-align-center padd_top"
    >
      <div
        className="flex-none content_width layout-row layout-wrap section_padding"
      >
        <div
          className="flex-100 layout-row layout-align-space-between-start"
        >
          <div
            className="flex-none layout-row layout-align-space-around-center"
          >
            <TextHeading
              color=""
              size={2}
              text="Insurance"
              theme={
                Object {
                  "colors": Object {
                    "primary": "#333",
                    "secondary": "#fafafa",
                  },
                }
              }
            />
          </div>
          <div
            className="flex-33 layout-row layout-align-space-around-center layout-wrap"
          >
            <div
              className="flex-100 layout-row layout-wrap layout-align-end-center"
            >
              <div
                className="flex-90 layout-row layout-align-start-center"
              >
                <label
                  className="pointy"
                  htmlFor="yes_insurance"
                >
                  Yes, I want TENANT_NAME to quote insurance for my cargo
                </label>
              </div>
              <div
                className="flex-10 layout-row layout-align-end-center"
              >
                <Checkbox
                  checked={true}
                  className="ccb_yes_insurance"
                  disabled={false}
                  id="yes_insurance"
                  onChange={[Function]}
                  onClick={null}
                  size={null}
                  theme={
                    Object {
                      "colors": Object {
                        "primary": "#333",
                        "secondary": "#fafafa",
                      },
                    }
                  }
                />
              </div>
            </div>
            <div
              className="flex-100 layout-row layout-align-end-center"
            >
              <div
                className="flex-90 layout-row layout-align-start-center"
              >
                <label
                  className="pointy"
                  htmlFor="no_insurance"
                >
                  No, I do not want TENANT_NAME to quote insurance for my cargo
                </label>
              </div>
              <div
                className="flex-10 layout-row layout-align-end-center"
              >
                <Checkbox
                  checked={false}
                  className="ccb_no_insurance"
                  disabled={false}
                  id="no_insurance"
                  onChange={[Function]}
                  onClick={null}
                  size={null}
                  theme={
                    Object {
                      "colors": Object {
                        "primary": "#333",
                        "secondary": "#fafafa",
                      },
                    }
                  }
                />
              </div>
            </div>
          </div>
        </div>
        <div
          className="flex-100 layout-row layout-align-start-center"
        >
          <p
            className="flex-60 margin_5"
          >
            <b>
              Cargo Insurance provides cover on all risk terms for physical loss or damage to cargo during transport by land, sea or air.
            </b>
          </p>
        </div>
        <div
          className="flex-100 layout-row layout-align-start-center"
        >
          <p
            className="flex-60 margin_5"
          >
            <b>
              Insurance is a cost effective and simple way to cover for physical loss or damage to goods in transit.
            </b>
          </p>
        </div>
        <div
          className="flex-100 layout-row  box_content show"
        >
          <div
            className="flex-80 layout-row layout-wrap"
          >
            <p
              className="flex-90"
            >
              <strong>
                 
                A cost effective and simple way to cover for physical loss or damage to goods in transit.
              </strong>
            </p>
            <p
              className="flex-90"
            >
              Please contact your local {{tenantName}} office for more info.
            </p>
          </div>
        </div>
        <div
          className="flex-100 layout-row layout-align-start-center"
        >
          <div
            className="flex-none layout-row layout-align-center-center"
            onClick={[Function]}
          >
            <p
              className="flex-none pointy"
            >
              Read more...
            </p>
            <i
              className="flex-none offset-5 fa fa-external-link"
            />
          </div>
        </div>
      </div>
    </div>
    <div
      className="flex-100 layout-row layout-align-center padd_top"
    >
      <div
        className="flex-none content_width layout-row layout-wrap section_padding"
      >
        <div
          className="flex-100 layout-row layout-align-space-between-start layout-wrap"
        >
          <div
            className="flex-none layout-row layout-align-space-around-center"
          >
            <TextHeading
              color=""
              size={2}
              text="Customs Handling"
              theme={
                Object {
                  "colors": Object {
                    "primary": "#333",
                    "secondary": "#fafafa",
                  },
                }
              }
            />
          </div>
          <div
            className="flex-33 layout-wrap layout-row layout-align-space-around-center"
          >
            <div
              className="flex-100 layout-row layout-align-end-center"
            >
              <div
                className="flex-90 layout-row layout-align-start-center"
              >
                <label
                  className="pointy"
                  htmlFor="yes_clearance"
                >
                  Yes, I want TENANT_NAME to handle my customs clearance
                </label>
              </div>
              <div
                className="flex-10 layout-row layout-align-end-center"
              >
                <Checkbox
                  checked={null}
                  className="ccb_yes_clearance"
                  disabled={false}
                  id="yes_clearance"
                  onChange={[Function]}
                  onClick={null}
                  size={null}
                  theme={
                    Object {
                      "colors": Object {
                        "primary": "#333",
                        "secondary": "#fafafa",
                      },
                    }
                  }
                />
              </div>
            </div>
            <div
              className="flex-100 layout-row layout-align-end-center"
            >
              <div
                className="flex-90 layout-row layout-align-start-center"
              >
                <label
                  className="pointy"
                  htmlFor="no_clearance"
                >
                  No, I do not want TENANT_NAME to handle my customs clearance
                </label>
              </div>
              <div
                className="flex-10 layout-row layout-align-end-center"
              >
                <Checkbox
                  checked={null}
                  className="ccb_no_clearance"
                  disabled={false}
                  id="no_clearance"
                  onChange={[Function]}
                  onClick={null}
                  size={null}
                  theme={
                    Object {
                      "colors": Object {
                        "primary": "#333",
                        "secondary": "#fafafa",
                      },
                    }
                  }
                />
              </div>
            </div>
          </div>
        </div>
        <div
          className="flex-100 layout-row layout-wrap customs_box  box_content hidden"
        >
          <div
            className="flex-60 layout-row layout-wrap"
          >
            <p
              className="flex-90 margin_5"
            >
              <strong>
                 
                When you ship goods from outside the European Union (EU), you may be charged customs duty and/or VAT. You can either handle the customs on your own, or have it handled for you.
              </strong>
            </p>
            <p
              className="flex-90 margin_5"
            >
              To cover our costs when we present your goods to the customs authorities – and pay any customs duty or VAT due on your behalf – we charge a clearance / handling fee. The fee depends on the value of the goods you are shipping, and can be found here to the right.
            </p>
            <div
              className="flex-100 layout-row layout-align-start-start layout-wrap"
            >
              <div
                className="flex-100 layout-row layout-align-start-center"
                style={
                  Object {
                    "height": "36px",
                  }
                }
              >
                <p
                  className="flex-none"
                >
                   
                  I would like TENANT_NAME to handle:
                </p>
              </div>
              <div
                className="flex-100 layout-row layout-align-start-center layout-wrap"
                style={
                  Object {
                    "height": "36px",
                  }
                }
              >
                <div
                  className="flex-45 layout-row layout-align-space-around-center"
                  data-for="preCarriageTooltip"
                  data-tip="Export Customs is not applicable for shipments without delivery to the port (pre-carriage)."
                >
                  <p
                    className="faded_text flex-none"
                  >
                     Export Customs: 
                  </p>
                  <Checkbox
                    checked={true}
                    className=""
                    disabled={true}
                    id={null}
                    onChange={[Function]}
                    onClick={null}
                    size={null}
                    theme={
                      Object {
                        "colors": Object {
                          "primary": "#333",
                          "secondary": "#fafafa",
                        },
                      }
                    }
                  />
                </div>
                <ReactTooltip
                  className="tooltip_box"
                  effect="solid"
                  id="preCarriageTooltip"
                  insecure={true}
                  resizeHide={true}
                  wrapper="div"
                />
                <div
                  className="flex-45 layout-row layout-align-space-around-center"
                  data-for="onCarriageTooltip"
                  data-tip="Import Customs is not applicable for shipments without delivery from the port (on-carriage)."
                >
                  <p
                    className="faded_text flex-none"
                  >
                     Import Customs
                  </p>
                  <Checkbox
                    checked={true}
                    className=""
                    disabled={true}
                    id={null}
                    onChange={[Function]}
                    onClick={null}
                    size={null}
                    theme={
                      Object {
                        "colors": Object {
                          "primary": "#333",
                          "secondary": "#fafafa",
                        },
                      }
                    }
                  />
                  <ReactTooltip
                    className="tooltip_box"
                    effect="solid"
                    id="onCarriageTooltip"
                    insecure={true}
                    resizeHide={true}
                    wrapper="div"
                  />
                </div>
              </div>
              <div
                className="flex-100 no_max layout-row layout-align-start-center"
              >
                <div
                  className="flex-33 layout-row layout-wrap"
                >
                  <div
                    className="flex-100"
                  >
                    <TextHeading
                      Comp={
                        <b
                          style={
                            Object {
                              "fontSize": ".83em",
                              "fontWeight": "normal",
                            }
                          }
                        >
                          (
                          if applicable
                          )
                        </b>
                      }
                      color=""
                      size={3}
                      text="EORI"
                      theme={
                        Object {
                          "colors": Object {
                            "primary": "#333",
                            "secondary": "#fafafa",
                          },
                        }
                      }
                    />
                  </div>
                  <div
                    className="flex-100 input_box"
                  >
                    <input
                      className="EORI_input"
                      name="eori"
                      onChange={[Function]}
                      placeholder="Type in EORI number"
                      type="text"
                      value="EORI"
                    />
                  </div>
                </div>
              </div>
            </div>
          </div>
          <div
            className=" prices flex-20 layout-row layout-wrap layout-align-start-start"
          >
            <div
              className="customs_prices flex-100 layout-row  layout-align-end-center"
            >
              <p
                className="flex-none"
              >
                Import
              </p>
              <h6
                className="flex-none center"
              >
                 
                Price subject to local regulations
              </h6>
            </div>
            <div
              className="customs_prices flex-100 layout-row  layout-align-end-center"
            >
              <p
                className="flex-none"
              >
                Export
              </p>
              <h6
                className="flex-none center"
              >
                 
                100.00 EUR
              </h6>
            </div>
            <div
              className="customs_total flex-100 layout-row  layout-align-end-center"
            >
              <p
                className="flex-none"
              >
                Total
              </p>
              <h6
                className="flex-none center"
              >
                 
                NaN EUR
              </h6>
            </div>
          </div>
        </div>
        <div
          className="flex-100 layout-row layout-align-start-center layout-wrap no_customs_box show"
        >
          <div
            className="flex-60 layout-row layout-align-start-center layout-wrap"
          >
            <p
              className="flex-100 margin_5"
            >
              <b>
                A customs declaration is mandatory to pass a national border when exporting or importing. If you choose to handle the customs clearance on your own, TENANT_NAME will need a copy of the customs declaration.
              </b>
            </p>
            <p
              className="flex-100 margin_5"
            >
              <b>
                When you ship goods from outside the European Union (EU), you may be charged customs duty and/or VAT according to local regulations.
              </b>
            </p>
          </div>
          <div
            className="flex-33 no_max layout-row layout-align-end-center"
          />
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`shipment.has_pre_carriage ? 1`] = `
<div
  className="flex-100 layout-row layout-wrap padd_top"
  name="cargoDetailsBox"
>
  <div
    className="flex-100 layout-row layout-align-center"
  >
    <div
      className="flex-none content_width layout-row layout-wrap"
    >
      <div
        className="flex-100 layout-row layout-sm-wrap"
      >
        <div
          className="flex-50"
        >
          <div
            className="flex-100"
          >
            <div
              className="flex-100 layout-align-start-center layout-row"
            >
              <div
                className="flex-none"
              >
                <TextHeading
                  color=""
                  size={2}
                  text="Cargo Details"
                  theme={
                    Object {
                      "colors": Object {
                        "primary": "#333",
                        "secondary": "#fafafa",
                      },
                    }
                  }
                />
              </div>
            </div>
             
            <div
              className="flex-none"
            >
              <TextHeading
                color=""
                size={3}
                text="Total value of goods"
                theme={
                  Object {
                    "colors": Object {
                      "primary": "#333",
                      "secondary": "#fafafa",
                    },
                  }
                }
              />
            </div>
          </div>
          <div
            className="flex-100 layout-row layout-wrap layout-align-start-start"
          >
            <div
              className="flex-100 layout-row layout-wrap"
            >
              <div
                className="flex-100 layout-row"
              >
                <div
                  className="flex-66 layout-row"
                >
                  <Formsy(FormsyInput)
                    className="flex-100 ccb_total_goods_value cargo_input "
                    errorMessageStyles={
                      Object {
                        "bottom": "-17px",
                        "fontSize": "13px",
                      }
                    }
                    innerRef={[Function]}
                    name="totalGoodsValue"
                    onBlur={[Function]}
                    required={3370}
                    submitAttempted={false}
                    type="number"
                    validationError=""
                    validationErrors={
                      Object {
                        "isDefaultRequiredValue": "Must be greater than 0",
                        "nonNegative": "Must be greater than 0",
                      }
                    }
                    validations={
                      Object {
                        "nonNegative": [Function],
                      }
                    }
                    value={11}
                    wrapperClassName="flex-100 wrapper_cargo_input"
                  />
                </div>
                <div
                  className="flex-33 layout-row"
                >
                  <NamedSelect
                    className="flex-100 ccb_currency"
                    clearable={false}
                    onChange={[Function]}
                    options={
                      Array [
                        Object {
                          "label": "EUR",
                          "value": "EUR",
                        },
                        Object {
                          "label": "AUD",
                          "value": "AUD",
                        },
                        Object {
                          "label": "BGN",
                          "value": "BGN",
                        },
                        Object {
                          "label": "BRL",
                          "value": "BRL",
                        },
                        Object {
                          "label": "CAD",
                          "value": "CAD",
                        },
                        Object {
                          "label": "CHF",
                          "value": "CHF",
                        },
                        Object {
                          "label": "CNY",
                          "value": "CNY",
                        },
                        Object {
                          "label": "CZK",
                          "value": "CZK",
                        },
                        Object {
                          "label": "DKK",
                          "value": "DKK",
                        },
                        Object {
                          "label": "GBP",
                          "value": "GBP",
                        },
                        Object {
                          "label": "HKD",
                          "value": "HKD",
                        },
                        Object {
                          "label": "HRK",
                          "value": "HRK",
                        },
                        Object {
                          "label": "HUF",
                          "value": "HUF",
                        },
                        Object {
                          "label": "IDR",
                          "value": "IDR",
                        },
                        Object {
                          "label": "ILS",
                          "value": "ILS",
                        },
                        Object {
                          "label": "INR",
                          "value": "INR",
                        },
                        Object {
                          "label": "JPY",
                          "value": "JPY",
                        },
                        Object {
                          "label": "KRW",
                          "value": "KRW",
                        },
                        Object {
                          "label": "MXN",
                          "value": "MXN",
                        },
                        Object {
                          "label": "MYR",
                          "value": "MYR",
                        },
                        Object {
                          "label": "NOK",
                          "value": "NOK",
                        },
                        Object {
                          "label": "NZD",
                          "value": "NZD",
                        },
                        Object {
                          "label": "PHP",
                          "value": "PHP",
                        },
                        Object {
                          "label": "PLN",
                          "value": "PLN",
                        },
                        Object {
                          "label": "RON",
                          "value": "RON",
                        },
                        Object {
                          "label": "RUB",
                          "value": "RUB",
                        },
                        Object {
                          "label": "SEK",
                          "value": "SEK",
                        },
                        Object {
                          "label": "SGD",
                          "value": "SGD",
                        },
                        Object {
                          "label": "THB",
                          "value": "THB",
                        },
                        Object {
                          "label": "TRY",
                          "value": "TRY",
                        },
                        Object {
                          "label": "USD",
                          "value": "USD",
                        },
                        Object {
                          "label": "ZAR",
                          "value": "ZAR",
                        },
                      ]
                    }
                    value={
                      Object {
                        "label": "EUR",
                        "value": "EUR",
                      }
                    }
                  />
                </div>
              </div>
            </div>
            <div
              className="flex-100 layout-row layout-wrap"
              id="cargo_notes"
            >
              <div
                className="flex-100"
              >
                <div
                  className="flex-none f_header"
                >
                   
                  <TextHeading
                    color=""
                    size={3}
                    text="Description of Goods (HS Codes if available)"
                    theme={
                      Object {
                        "colors": Object {
                          "primary": "#333",
                          "secondary": "#fafafa",
                        },
                      }
                    }
                  />
                </div>
              </div>
              <div
                className="flex-100"
              >
                <Formsy(FormsyTextarea)
                  className="flex-100 ccb_description_goods cargo_text_area "
                  errorMessageStyles={
                    Object {
                      "bottom": "-17px",
                      "fontSize": "13px",
                    }
                  }
                  innerRef={[Function]}
                  name="cargoNotes"
                  onBlur={[Function]}
                  required="MANDATORY_FIELDS_DESCRIPTION"
                  submitAttempted={false}
                  type="textarea"
                  validationError=""
                  validationErrors={
                    Object {
                      "isDefaultRequiredValue": "Must not be empty",
                    }
                  }
                  validations={null}
                  value="CARGO_NOTES"
                  wrapperClassName="flex-100 wrapper_cargo_input"
                />
              </div>
            </div>
            <div
              className="flex-100 layout-row layout-align-start-start layout-wrap"
            >
              <div
                className="flex-100"
              >
                <div
                  className="flex-none f_header"
                >
                   
                  <h4
                    className="no_m flex-30"
                  >
                    Incoterms
                     
                    <span>
                      (Optional)
                    </span>
                  </h4>
                  <p
                    className="pointy flex-none incoterm_info"
                    onClick={[Function]}
                  >
                    More info
                  </p>
                </div>
              </div>
              <div
                className="flex-100 layout-row layout-align-start-start input_box_full"
              >
                <Formsy(FormsyTextarea)
                  className="flex-100 cargo_text_area "
                  errorMessageStyles={
                    Object {
                      "bottom": "-17px",
                      "fontSize": "13px",
                    }
                  }
                  innerRef={[Function]}
                  name="incotermText"
                  onBlur={[Function]}
                  required={false}
                  submitAttempted={false}
                  type="textarea"
                  validationError=""
                  validationErrors={Object {}}
                  validations={null}
                  value=""
                  wrapperClassName="flex-100 wrapper_cargo_input"
                />
              </div>
            </div>
          </div>
        </div>
        <div
          className="flex-50 padding_left offset-gt-sm-5 layout-row layout-wrap layout-align-start-start"
        >
          <div
            className="flex-100 layout-align-start-center layout-row"
          >
            <div
              className="flex-none"
            >
              <TextHeading
                color=""
                size={2}
                text="Shipment Documents "
                theme={
                  Object {
                    "colors": Object {
                      "primary": "#333",
                      "secondary": "#fafafa",
                    },
                  }
                }
              />
              <br />
              (
              if available
              )
            </div>
          </div>
          <div
            className="flex-100 layout-row layout-wrap"
            name="packing_sheet"
          >
            <div
              className="flex-100 layout-row margin_5"
            >
              <DocumentsMultiForm
                deleteFn={[Function]}
                dispatchFn={[Function]}
                documents={Array []}
                isRequired={true}
                t={[Function]}
                text="Packing List"
                theme={
                  Object {
                    "colors": Object {
                      "primary": "#333",
                      "secondary": "#fafafa",
                    },
                  }
                }
                tooltip=""
                type="packing_sheet"
                uploadFn={null}
              />
            </div>
          </div>
          <div
            className="flex-100 layout-row layout-wrap"
            name="commercial_invoice"
          >
            <div
              className="flex-100 layout-row margin_5"
            >
              <DocumentsMultiForm
                deleteFn={[Function]}
                dispatchFn={[Function]}
                documents={Array []}
                isRequired={true}
                t={[Function]}
                text="Commercial Invoice"
                theme={
                  Object {
                    "colors": Object {
                      "primary": "#333",
                      "secondary": "#fafafa",
                    },
                  }
                }
                tooltip=""
                type="commercial_invoice"
                uploadFn={null}
              />
            </div>
          </div>
          <div
            className="flex-100 layout-row layout-align-start-start layout-wrap"
          >
            <div
              className="flex-100 layout-row layout-align-start-start layout-wrap"
            >
              <div
                className="flex-100"
              >
                <div
                  className="flex-none f_header"
                >
                   
                  <TextHeading
                    color=""
                    size={3}
                    text="Notes (Optional)"
                    theme={
                      Object {
                        "colors": Object {
                          "primary": "#333",
                          "secondary": "#fafafa",
                        },
                      }
                    }
                  />
                </div>
              </div>
              <div
                className="flex-100 layout-row layout-align-start-start input_box_full"
              >
                <Formsy(FormsyTextarea)
                  className="flex-100 cargo_text_area "
                  errorMessageStyles={
                    Object {
                      "bottom": "-17px",
                      "fontSize": "13px",
                    }
                  }
                  innerRef={[Function]}
                  name="notes"
                  onBlur={[Function]}
                  required={false}
                  submitAttempted={false}
                  type="textarea"
                  validationError=""
                  validationErrors={Object {}}
                  validations={null}
                  value="NOTES"
                  wrapperClassName="flex-100 wrapper_cargo_input"
                />
              </div>
            </div>
            <div
              className="flex-gt-sm-100 layout-row layout-align-start-start layout-wrap"
            >
              <div
                className=" flex-100 layout-row layout-align-start-start-space-around layout-wrap"
              >
                <DocumentsMultiForm
                  deleteFn={[Function]}
                  dispatchFn={[Function]}
                  documents={Array []}
                  t={[Function]}
                  text="Miscellaneous"
                  theme={
                    Object {
                      "colors": Object {
                        "primary": "#333",
                        "secondary": "#fafafa",
                      },
                    }
                  }
                  tooltip=""
                  type="miscellaneous"
                  uploadFn={null}
                />
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <div
    className="insurance_customs_sec flex-100 layout-row layout-wrap layout-align-center"
  >
    <div
      className="flex-100 layout-row layout-align-center padd_top"
    >
      <div
        className="flex-none content_width layout-row layout-wrap section_padding"
      >
        <div
          className="flex-100 layout-row layout-align-space-between-start"
        >
          <div
            className="flex-none layout-row layout-align-space-around-center"
          >
            <TextHeading
              color=""
              size={2}
              text="Insurance"
              theme={
                Object {
                  "colors": Object {
                    "primary": "#333",
                    "secondary": "#fafafa",
                  },
                }
              }
            />
          </div>
          <div
            className="flex-33 layout-row layout-align-space-around-center layout-wrap"
          >
            <div
              className="flex-100 layout-row layout-wrap layout-align-end-center"
            >
              <div
                className="flex-90 layout-row layout-align-start-center"
              >
                <label
                  className="pointy"
                  htmlFor="yes_insurance"
                >
                  Yes, I want TENANT_NAME to quote insurance for my cargo
                </label>
              </div>
              <div
                className="flex-10 layout-row layout-align-end-center"
              >
                <Checkbox
                  checked={true}
                  className="ccb_yes_insurance"
                  disabled={false}
                  id="yes_insurance"
                  onChange={[Function]}
                  onClick={null}
                  size={null}
                  theme={
                    Object {
                      "colors": Object {
                        "primary": "#333",
                        "secondary": "#fafafa",
                      },
                    }
                  }
                />
              </div>
            </div>
            <div
              className="flex-100 layout-row layout-align-end-center"
            >
              <div
                className="flex-90 layout-row layout-align-start-center"
              >
                <label
                  className="pointy"
                  htmlFor="no_insurance"
                >
                  No, I do not want TENANT_NAME to quote insurance for my cargo
                </label>
              </div>
              <div
                className="flex-10 layout-row layout-align-end-center"
              >
                <Checkbox
                  checked={false}
                  className="ccb_no_insurance"
                  disabled={false}
                  id="no_insurance"
                  onChange={[Function]}
                  onClick={null}
                  size={null}
                  theme={
                    Object {
                      "colors": Object {
                        "primary": "#333",
                        "secondary": "#fafafa",
                      },
                    }
                  }
                />
              </div>
            </div>
          </div>
        </div>
        <div
          className="flex-100 layout-row layout-align-start-center"
        >
          <p
            className="flex-60 margin_5"
          >
            <b>
              Cargo Insurance provides cover on all risk terms for physical loss or damage to cargo during transport by land, sea or air.
            </b>
          </p>
        </div>
        <div
          className="flex-100 layout-row layout-align-start-center"
        >
          <p
            className="flex-60 margin_5"
          >
            <b>
              Insurance is a cost effective and simple way to cover for physical loss or damage to goods in transit.
            </b>
          </p>
        </div>
        <div
          className="flex-100 layout-row  box_content show"
        >
          <div
            className="flex-80 layout-row layout-wrap"
          >
            <p
              className="flex-90"
            >
              <strong>
                 
                A cost effective and simple way to cover for physical loss or damage to goods in transit.
              </strong>
            </p>
            <p
              className="flex-90"
            >
              Please contact your local {{tenantName}} office for more info.
            </p>
          </div>
        </div>
        <div
          className="flex-100 layout-row layout-align-start-center"
        >
          <div
            className="flex-none layout-row layout-align-center-center"
            onClick={[Function]}
          >
            <p
              className="flex-none pointy"
            >
              Read more...
            </p>
            <i
              className="flex-none offset-5 fa fa-external-link"
            />
          </div>
        </div>
      </div>
    </div>
    <div
      className="flex-100 layout-row layout-align-center padd_top"
    >
      <div
        className="flex-none content_width layout-row layout-wrap section_padding"
      >
        <div
          className="flex-100 layout-row layout-align-space-between-start layout-wrap"
        >
          <div
            className="flex-none layout-row layout-align-space-around-center"
          >
            <TextHeading
              color=""
              size={2}
              text="Customs Handling"
              theme={
                Object {
                  "colors": Object {
                    "primary": "#333",
                    "secondary": "#fafafa",
                  },
                }
              }
            />
          </div>
          <div
            className="flex-33 layout-wrap layout-row layout-align-space-around-center"
          >
            <div
              className="flex-100 layout-row layout-align-end-center"
            >
              <div
                className="flex-90 layout-row layout-align-start-center"
              >
                <label
                  className="pointy"
                  htmlFor="yes_clearance"
                >
                  Yes, I want TENANT_NAME to handle my customs clearance
                </label>
              </div>
              <div
                className="flex-10 layout-row layout-align-end-center"
              >
                <Checkbox
                  checked={null}
                  className="ccb_yes_clearance"
                  disabled={false}
                  id="yes_clearance"
                  onChange={[Function]}
                  onClick={null}
                  size={null}
                  theme={
                    Object {
                      "colors": Object {
                        "primary": "#333",
                        "secondary": "#fafafa",
                      },
                    }
                  }
                />
              </div>
            </div>
            <div
              className="flex-100 layout-row layout-align-end-center"
            >
              <div
                className="flex-90 layout-row layout-align-start-center"
              >
                <label
                  className="pointy"
                  htmlFor="no_clearance"
                >
                  No, I do not want TENANT_NAME to handle my customs clearance
                </label>
              </div>
              <div
                className="flex-10 layout-row layout-align-end-center"
              >
                <Checkbox
                  checked={null}
                  className="ccb_no_clearance"
                  disabled={false}
                  id="no_clearance"
                  onChange={[Function]}
                  onClick={null}
                  size={null}
                  theme={
                    Object {
                      "colors": Object {
                        "primary": "#333",
                        "secondary": "#fafafa",
                      },
                    }
                  }
                />
              </div>
            </div>
          </div>
        </div>
        <div
          className="flex-100 layout-row layout-wrap customs_box  box_content hidden"
        >
          <div
            className="flex-60 layout-row layout-wrap"
          >
            <p
              className="flex-90 margin_5"
            >
              <strong>
                 
                When you ship goods from outside the European Union (EU), you may be charged customs duty and/or VAT. You can either handle the customs on your own, or have it handled for you.
              </strong>
            </p>
            <p
              className="flex-90 margin_5"
            >
              To cover our costs when we present your goods to the customs authorities – and pay any customs duty or VAT due on your behalf – we charge a clearance / handling fee. The fee depends on the value of the goods you are shipping, and can be found here to the right.
            </p>
            <div
              className="flex-100 layout-row layout-align-start-start layout-wrap"
            >
              <div
                className="flex-100 layout-row layout-align-start-center"
                style={
                  Object {
                    "height": "36px",
                  }
                }
              >
                <p
                  className="flex-none"
                >
                   
                  I would like TENANT_NAME to handle:
                </p>
              </div>
              <div
                className="flex-100 layout-row layout-align-start-center layout-wrap"
                style={
                  Object {
                    "height": "36px",
                  }
                }
              >
                <div
                  className="flex-45 layout-row layout-align-space-around-center"
                  data-for="preCarriageTooltip"
                  data-tip="Export Customs is not applicable for shipments without delivery to the port (pre-carriage)."
                >
                  <p
                    className=" flex-none"
                  >
                     Export Customs: 
                  </p>
                  <Checkbox
                    checked={true}
                    className=""
                    disabled={false}
                    id={null}
                    onChange={[Function]}
                    onClick={null}
                    size={null}
                    theme={
                      Object {
                        "colors": Object {
                          "primary": "#333",
                          "secondary": "#fafafa",
                        },
                      }
                    }
                  />
                </div>
                <div
                  className="flex-45 layout-row layout-align-space-around-center"
                  data-for="onCarriageTooltip"
                  data-tip="Import Customs is not applicable for shipments without delivery from the port (on-carriage)."
                >
                  <p
                    className=" flex-none"
                  >
                     Import Customs
                  </p>
                  <Checkbox
                    checked={true}
                    className=""
                    disabled={false}
                    id={null}
                    onChange={[Function]}
                    onClick={null}
                    size={null}
                    theme={
                      Object {
                        "colors": Object {
                          "primary": "#333",
                          "secondary": "#fafafa",
                        },
                      }
                    }
                  />
                </div>
              </div>
              <div
                className="flex-100 no_max layout-row layout-align-start-center"
              >
                <div
                  className="flex-33 layout-row layout-wrap"
                >
                  <div
                    className="flex-100"
                  >
                    <TextHeading
                      Comp={
                        <b
                          style={
                            Object {
                              "fontSize": ".83em",
                              "fontWeight": "normal",
                            }
                          }
                        >
                          (
                          if applicable
                          )
                        </b>
                      }
                      color=""
                      size={3}
                      text="EORI"
                      theme={
                        Object {
                          "colors": Object {
                            "primary": "#333",
                            "secondary": "#fafafa",
                          },
                        }
                      }
                    />
                  </div>
                  <div
                    className="flex-100 input_box"
                  >
                    <input
                      className="EORI_input"
                      name="eori"
                      onChange={[Function]}
                      placeholder="Type in EORI number"
                      type="text"
                      value="EORI"
                    />
                  </div>
                </div>
              </div>
            </div>
          </div>
          <div
            className=" prices flex-20 layout-row layout-wrap layout-align-start-start"
          >
            <div
              className="customs_prices flex-100 layout-row  layout-align-end-center"
            >
              <p
                className="flex-none"
              >
                Import
              </p>
              <h6
                className="flex-none center"
              >
                 
                Price subject to local regulations
              </h6>
            </div>
            <div
              className="customs_prices flex-100 layout-row  layout-align-end-center"
            >
              <p
                className="flex-none"
              >
                Export
              </p>
              <h6
                className="flex-none center"
              >
                 
                100.00 EUR
              </h6>
            </div>
            <div
              className="customs_total flex-100 layout-row  layout-align-end-center"
            >
              <p
                className="flex-none"
              >
                Total
              </p>
              <h6
                className="flex-none center"
              >
                 
                NaN EUR
              </h6>
            </div>
          </div>
        </div>
        <div
          className="flex-100 layout-row layout-align-start-center layout-wrap no_customs_box show"
        >
          <div
            className="flex-60 layout-row layout-align-start-center layout-wrap"
          >
            <p
              className="flex-100 margin_5"
            >
              <b>
                A customs declaration is mandatory to pass a national border when exporting or importing. If you choose to handle the customs clearance on your own, TENANT_NAME will need a copy of the customs declaration.
              </b>
            </p>
            <p
              className="flex-100 margin_5"
            >
              <b>
                When you ship goods from outside the European Union (EU), you may be charged customs duty and/or VAT according to local regulations.
              </b>
            </p>
          </div>
          <div
            className="flex-33 no_max layout-row layout-align-end-center"
          />
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`shipmentData.dangerousGoods is true 1`] = `
<div
  className="flex-100 layout-row layout-wrap padd_top"
  name="cargoDetailsBox"
>
  <div
    className="flex-100 layout-row layout-align-center"
  >
    <div
      className="flex-none content_width layout-row layout-wrap"
    >
      <div
        className="flex-100 layout-row layout-sm-wrap"
      >
        <div
          className="flex-50"
        >
          <div
            className="flex-100"
          >
            <div
              className="flex-100 layout-align-start-center layout-row"
            >
              <div
                className="flex-none"
              >
                <TextHeading
                  color=""
                  size={2}
                  text="Cargo Details"
                  theme={
                    Object {
                      "colors": Object {
                        "primary": "#333",
                        "secondary": "#fafafa",
                      },
                    }
                  }
                />
              </div>
            </div>
             
            <div
              className="flex-none"
            >
              <TextHeading
                color=""
                size={3}
                text="Total value of goods"
                theme={
                  Object {
                    "colors": Object {
                      "primary": "#333",
                      "secondary": "#fafafa",
                    },
                  }
                }
              />
            </div>
          </div>
          <div
            className="flex-100 layout-row layout-wrap layout-align-start-start"
          >
            <div
              className="flex-100 layout-row layout-wrap"
            >
              <div
                className="flex-100 layout-row"
              >
                <div
                  className="flex-66 layout-row"
                >
                  <Formsy(FormsyInput)
                    className="flex-100 ccb_total_goods_value cargo_input "
                    errorMessageStyles={
                      Object {
                        "bottom": "-17px",
                        "fontSize": "13px",
                      }
                    }
                    innerRef={[Function]}
                    name="totalGoodsValue"
                    onBlur={[Function]}
                    required={3370}
                    submitAttempted={false}
                    type="number"
                    validationError=""
                    validationErrors={
                      Object {
                        "isDefaultRequiredValue": "Must be greater than 0",
                        "nonNegative": "Must be greater than 0",
                      }
                    }
                    validations={
                      Object {
                        "nonNegative": [Function],
                      }
                    }
                    value={11}
                    wrapperClassName="flex-100 wrapper_cargo_input"
                  />
                </div>
                <div
                  className="flex-33 layout-row"
                >
                  <NamedSelect
                    className="flex-100 ccb_currency"
                    clearable={false}
                    onChange={[Function]}
                    options={
                      Array [
                        Object {
                          "label": "EUR",
                          "value": "EUR",
                        },
                        Object {
                          "label": "AUD",
                          "value": "AUD",
                        },
                        Object {
                          "label": "BGN",
                          "value": "BGN",
                        },
                        Object {
                          "label": "BRL",
                          "value": "BRL",
                        },
                        Object {
                          "label": "CAD",
                          "value": "CAD",
                        },
                        Object {
                          "label": "CHF",
                          "value": "CHF",
                        },
                        Object {
                          "label": "CNY",
                          "value": "CNY",
                        },
                        Object {
                          "label": "CZK",
                          "value": "CZK",
                        },
                        Object {
                          "label": "DKK",
                          "value": "DKK",
                        },
                        Object {
                          "label": "GBP",
                          "value": "GBP",
                        },
                        Object {
                          "label": "HKD",
                          "value": "HKD",
                        },
                        Object {
                          "label": "HRK",
                          "value": "HRK",
                        },
                        Object {
                          "label": "HUF",
                          "value": "HUF",
                        },
                        Object {
                          "label": "IDR",
                          "value": "IDR",
                        },
                        Object {
                          "label": "ILS",
                          "value": "ILS",
                        },
                        Object {
                          "label": "INR",
                          "value": "INR",
                        },
                        Object {
                          "label": "JPY",
                          "value": "JPY",
                        },
                        Object {
                          "label": "KRW",
                          "value": "KRW",
                        },
                        Object {
                          "label": "MXN",
                          "value": "MXN",
                        },
                        Object {
                          "label": "MYR",
                          "value": "MYR",
                        },
                        Object {
                          "label": "NOK",
                          "value": "NOK",
                        },
                        Object {
                          "label": "NZD",
                          "value": "NZD",
                        },
                        Object {
                          "label": "PHP",
                          "value": "PHP",
                        },
                        Object {
                          "label": "PLN",
                          "value": "PLN",
                        },
                        Object {
                          "label": "RON",
                          "value": "RON",
                        },
                        Object {
                          "label": "RUB",
                          "value": "RUB",
                        },
                        Object {
                          "label": "SEK",
                          "value": "SEK",
                        },
                        Object {
                          "label": "SGD",
                          "value": "SGD",
                        },
                        Object {
                          "label": "THB",
                          "value": "THB",
                        },
                        Object {
                          "label": "TRY",
                          "value": "TRY",
                        },
                        Object {
                          "label": "USD",
                          "value": "USD",
                        },
                        Object {
                          "label": "ZAR",
                          "value": "ZAR",
                        },
                      ]
                    }
                    value={
                      Object {
                        "label": "EUR",
                        "value": "EUR",
                      }
                    }
                  />
                </div>
              </div>
            </div>
            <div
              className="flex-100 layout-row layout-wrap"
              id="cargo_notes"
            >
              <div
                className="flex-100"
              >
                <div
                  className="flex-none f_header"
                >
                   
                  <TextHeading
                    color=""
                    size={3}
                    text="Description of Goods (HS Codes if available)"
                    theme={
                      Object {
                        "colors": Object {
                          "primary": "#333",
                          "secondary": "#fafafa",
                        },
                      }
                    }
                  />
                </div>
              </div>
              <div
                className="flex-100"
              >
                <Formsy(FormsyTextarea)
                  className="flex-100 ccb_description_goods cargo_text_area "
                  errorMessageStyles={
                    Object {
                      "bottom": "-17px",
                      "fontSize": "13px",
                    }
                  }
                  innerRef={[Function]}
                  name="cargoNotes"
                  onBlur={[Function]}
                  required="MANDATORY_FIELDS_DESCRIPTION"
                  submitAttempted={false}
                  type="textarea"
                  validationError=""
                  validationErrors={
                    Object {
                      "isDefaultRequiredValue": "Must not be empty",
                    }
                  }
                  validations={null}
                  value="CARGO_NOTES"
                  wrapperClassName="flex-100 wrapper_cargo_input"
                />
              </div>
            </div>
            <div
              className="flex-100 layout-row layout-align-start-start layout-wrap"
            >
              <div
                className="flex-100"
              >
                <div
                  className="flex-none f_header"
                >
                   
                  <h4
                    className="no_m flex-30"
                  >
                    Incoterms
                     
                    <span>
                      (Optional)
                    </span>
                  </h4>
                  <p
                    className="pointy flex-none incoterm_info"
                    onClick={[Function]}
                  >
                    More info
                  </p>
                </div>
              </div>
              <div
                className="flex-100 layout-row layout-align-start-start input_box_full"
              >
                <Formsy(FormsyTextarea)
                  className="flex-100 cargo_text_area "
                  errorMessageStyles={
                    Object {
                      "bottom": "-17px",
                      "fontSize": "13px",
                    }
                  }
                  innerRef={[Function]}
                  name="incotermText"
                  onBlur={[Function]}
                  required={false}
                  submitAttempted={false}
                  type="textarea"
                  validationError=""
                  validationErrors={Object {}}
                  validations={null}
                  value=""
                  wrapperClassName="flex-100 wrapper_cargo_input"
                />
              </div>
            </div>
          </div>
        </div>
        <div
          className="flex-50 padding_left offset-gt-sm-5 layout-row layout-wrap layout-align-start-start"
        >
          <div
            className="flex-100 layout-align-start-center layout-row"
          >
            <div
              className="flex-none"
            >
              <TextHeading
                color=""
                size={2}
                text="Shipment Documents "
                theme={
                  Object {
                    "colors": Object {
                      "primary": "#333",
                      "secondary": "#fafafa",
                    },
                  }
                }
              />
              <br />
              (
              if available
              )
            </div>
          </div>
          <div
            className="flex-100 layout-row layout-wrap"
            name="packing_sheet"
          >
            <div
              className="flex-100 layout-row margin_5"
            >
              <DocumentsMultiForm
                deleteFn={[Function]}
                dispatchFn={[Function]}
                documents={Array []}
                isRequired={true}
                t={[Function]}
                text="Packing List"
                theme={
                  Object {
                    "colors": Object {
                      "primary": "#333",
                      "secondary": "#fafafa",
                    },
                  }
                }
                tooltip=""
                type="packing_sheet"
                uploadFn={null}
              />
            </div>
          </div>
          <div
            className="flex-100 layout-row layout-wrap"
            name="commercial_invoice"
          >
            <div
              className="flex-100 layout-row margin_5"
            >
              <DocumentsMultiForm
                deleteFn={[Function]}
                dispatchFn={[Function]}
                documents={Array []}
                isRequired={true}
                t={[Function]}
                text="Commercial Invoice"
                theme={
                  Object {
                    "colors": Object {
                      "primary": "#333",
                      "secondary": "#fafafa",
                    },
                  }
                }
                tooltip=""
                type="commercial_invoice"
                uploadFn={null}
              />
            </div>
          </div>
          <div
            className="flex-100 layout-row layout-wrap"
          >
            <div
              className="flex-100 layout-row layout-wrap"
            >
              <DocumentsForm
                deleteFn={[Function]}
                dispatchFn={[Function]}
                displayOnly={false}
                doc={Object {}}
                isRequired={false}
                multiple={false}
                t={[Function]}
                text="Dangerous Goods"
                theme={
                  Object {
                    "colors": Object {
                      "primary": "#333",
                      "secondary": "#fafafa",
                    },
                  }
                }
                tooltip=""
                type="dangerous_goods"
                uploadFn={null}
                viewer={false}
              />
            </div>
          </div>
          <div
            className="flex-100 layout-row layout-align-start-start layout-wrap"
          >
            <div
              className="flex-100 layout-row layout-align-start-start layout-wrap"
            >
              <div
                className="flex-100"
              >
                <div
                  className="flex-none f_header"
                >
                   
                  <TextHeading
                    color=""
                    size={3}
                    text="Notes (Optional)"
                    theme={
                      Object {
                        "colors": Object {
                          "primary": "#333",
                          "secondary": "#fafafa",
                        },
                      }
                    }
                  />
                </div>
              </div>
              <div
                className="flex-100 layout-row layout-align-start-start input_box_full"
              >
                <Formsy(FormsyTextarea)
                  className="flex-100 cargo_text_area "
                  errorMessageStyles={
                    Object {
                      "bottom": "-17px",
                      "fontSize": "13px",
                    }
                  }
                  innerRef={[Function]}
                  name="notes"
                  onBlur={[Function]}
                  required={false}
                  submitAttempted={false}
                  type="textarea"
                  validationError=""
                  validationErrors={Object {}}
                  validations={null}
                  value="NOTES"
                  wrapperClassName="flex-100 wrapper_cargo_input"
                />
              </div>
            </div>
            <div
              className="flex-gt-sm-100 layout-row layout-align-start-start layout-wrap"
            >
              <div
                className=" flex-100 layout-row layout-align-start-start-space-around layout-wrap"
              >
                <DocumentsMultiForm
                  deleteFn={[Function]}
                  dispatchFn={[Function]}
                  documents={Array []}
                  t={[Function]}
                  text="Miscellaneous"
                  theme={
                    Object {
                      "colors": Object {
                        "primary": "#333",
                        "secondary": "#fafafa",
                      },
                    }
                  }
                  tooltip=""
                  type="miscellaneous"
                  uploadFn={null}
                />
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <div
    className="insurance_customs_sec flex-100 layout-row layout-wrap layout-align-center"
  >
    <div
      className="flex-100 layout-row layout-align-center padd_top"
    >
      <div
        className="flex-none content_width layout-row layout-wrap section_padding"
      >
        <div
          className="flex-100 layout-row layout-align-space-between-start"
        >
          <div
            className="flex-none layout-row layout-align-space-around-center"
          >
            <TextHeading
              color=""
              size={2}
              text="Insurance"
              theme={
                Object {
                  "colors": Object {
                    "primary": "#333",
                    "secondary": "#fafafa",
                  },
                }
              }
            />
          </div>
          <div
            className="flex-33 layout-row layout-align-space-around-center layout-wrap"
          >
            <div
              className="flex-100 layout-row layout-wrap layout-align-end-center"
            >
              <div
                className="flex-90 layout-row layout-align-start-center"
              >
                <label
                  className="pointy"
                  htmlFor="yes_insurance"
                >
                  Yes, I want TENANT_NAME to quote insurance for my cargo
                </label>
              </div>
              <div
                className="flex-10 layout-row layout-align-end-center"
              >
                <Checkbox
                  checked={true}
                  className="ccb_yes_insurance"
                  disabled={false}
                  id="yes_insurance"
                  onChange={[Function]}
                  onClick={null}
                  size={null}
                  theme={
                    Object {
                      "colors": Object {
                        "primary": "#333",
                        "secondary": "#fafafa",
                      },
                    }
                  }
                />
              </div>
            </div>
            <div
              className="flex-100 layout-row layout-align-end-center"
            >
              <div
                className="flex-90 layout-row layout-align-start-center"
              >
                <label
                  className="pointy"
                  htmlFor="no_insurance"
                >
                  No, I do not want TENANT_NAME to quote insurance for my cargo
                </label>
              </div>
              <div
                className="flex-10 layout-row layout-align-end-center"
              >
                <Checkbox
                  checked={false}
                  className="ccb_no_insurance"
                  disabled={false}
                  id="no_insurance"
                  onChange={[Function]}
                  onClick={null}
                  size={null}
                  theme={
                    Object {
                      "colors": Object {
                        "primary": "#333",
                        "secondary": "#fafafa",
                      },
                    }
                  }
                />
              </div>
            </div>
          </div>
        </div>
        <div
          className="flex-100 layout-row layout-align-start-center"
        >
          <p
            className="flex-60 margin_5"
          >
            <b>
              Cargo Insurance provides cover on all risk terms for physical loss or damage to cargo during transport by land, sea or air.
            </b>
          </p>
        </div>
        <div
          className="flex-100 layout-row layout-align-start-center"
        >
          <p
            className="flex-60 margin_5"
          >
            <b>
              Insurance is a cost effective and simple way to cover for physical loss or damage to goods in transit.
            </b>
          </p>
        </div>
        <div
          className="flex-100 layout-row  box_content show"
        >
          <div
            className="flex-80 layout-row layout-wrap"
          >
            <p
              className="flex-90"
            >
              <strong>
                 
                A cost effective and simple way to cover for physical loss or damage to goods in transit.
              </strong>
            </p>
            <p
              className="flex-90"
            >
              Please contact your local {{tenantName}} office for more info.
            </p>
          </div>
        </div>
        <div
          className="flex-100 layout-row layout-align-start-center"
        >
          <div
            className="flex-none layout-row layout-align-center-center"
            onClick={[Function]}
          >
            <p
              className="flex-none pointy"
            >
              Read more...
            </p>
            <i
              className="flex-none offset-5 fa fa-external-link"
            />
          </div>
        </div>
      </div>
    </div>
    <div
      className="flex-100 layout-row layout-align-center padd_top"
    >
      <div
        className="flex-none content_width layout-row layout-wrap section_padding"
      >
        <div
          className="flex-100 layout-row layout-align-space-between-start layout-wrap"
        >
          <div
            className="flex-none layout-row layout-align-space-around-center"
          >
            <TextHeading
              color=""
              size={2}
              text="Customs Handling"
              theme={
                Object {
                  "colors": Object {
                    "primary": "#333",
                    "secondary": "#fafafa",
                  },
                }
              }
            />
          </div>
          <div
            className="flex-33 layout-wrap layout-row layout-align-space-around-center"
          >
            <div
              className="flex-100 layout-row layout-align-end-center"
            >
              <div
                className="flex-90 layout-row layout-align-start-center"
              >
                <label
                  className="pointy"
                  htmlFor="yes_clearance"
                >
                  Yes, I want TENANT_NAME to handle my customs clearance
                </label>
              </div>
              <div
                className="flex-10 layout-row layout-align-end-center"
              >
                <Checkbox
                  checked={null}
                  className="ccb_yes_clearance"
                  disabled={false}
                  id="yes_clearance"
                  onChange={[Function]}
                  onClick={null}
                  size={null}
                  theme={
                    Object {
                      "colors": Object {
                        "primary": "#333",
                        "secondary": "#fafafa",
                      },
                    }
                  }
                />
              </div>
            </div>
            <div
              className="flex-100 layout-row layout-align-end-center"
            >
              <div
                className="flex-90 layout-row layout-align-start-center"
              >
                <label
                  className="pointy"
                  htmlFor="no_clearance"
                >
                  No, I do not want TENANT_NAME to handle my customs clearance
                </label>
              </div>
              <div
                className="flex-10 layout-row layout-align-end-center"
              >
                <Checkbox
                  checked={null}
                  className="ccb_no_clearance"
                  disabled={false}
                  id="no_clearance"
                  onChange={[Function]}
                  onClick={null}
                  size={null}
                  theme={
                    Object {
                      "colors": Object {
                        "primary": "#333",
                        "secondary": "#fafafa",
                      },
                    }
                  }
                />
              </div>
            </div>
          </div>
        </div>
        <div
          className="flex-100 layout-row layout-wrap customs_box  box_content hidden"
        >
          <div
            className="flex-60 layout-row layout-wrap"
          >
            <p
              className="flex-90 margin_5"
            >
              <strong>
                 
                When you ship goods from outside the European Union (EU), you may be charged customs duty and/or VAT. You can either handle the customs on your own, or have it handled for you.
              </strong>
            </p>
            <p
              className="flex-90 margin_5"
            >
              To cover our costs when we present your goods to the customs authorities – and pay any customs duty or VAT due on your behalf – we charge a clearance / handling fee. The fee depends on the value of the goods you are shipping, and can be found here to the right.
            </p>
            <div
              className="flex-100 layout-row layout-align-start-start layout-wrap"
            >
              <div
                className="flex-100 layout-row layout-align-start-center"
                style={
                  Object {
                    "height": "36px",
                  }
                }
              >
                <p
                  className="flex-none"
                >
                   
                  I would like TENANT_NAME to handle:
                </p>
              </div>
              <div
                className="flex-100 layout-row layout-align-start-center layout-wrap"
                style={
                  Object {
                    "height": "36px",
                  }
                }
              >
                <div
                  className="flex-45 layout-row layout-align-space-around-center"
                  data-for="preCarriageTooltip"
                  data-tip="Export Customs is not applicable for shipments without delivery to the port (pre-carriage)."
                >
                  <p
                    className="faded_text flex-none"
                  >
                     Export Customs: 
                  </p>
                  <Checkbox
                    checked={true}
                    className=""
                    disabled={true}
                    id={null}
                    onChange={[Function]}
                    onClick={null}
                    size={null}
                    theme={
                      Object {
                        "colors": Object {
                          "primary": "#333",
                          "secondary": "#fafafa",
                        },
                      }
                    }
                  />
                </div>
                <ReactTooltip
                  className="tooltip_box"
                  effect="solid"
                  id="preCarriageTooltip"
                  insecure={true}
                  resizeHide={true}
                  wrapper="div"
                />
                <div
                  className="flex-45 layout-row layout-align-space-around-center"
                  data-for="onCarriageTooltip"
                  data-tip="Import Customs is not applicable for shipments without delivery from the port (on-carriage)."
                >
                  <p
                    className="faded_text flex-none"
                  >
                     Import Customs
                  </p>
                  <Checkbox
                    checked={true}
                    className=""
                    disabled={true}
                    id={null}
                    onChange={[Function]}
                    onClick={null}
                    size={null}
                    theme={
                      Object {
                        "colors": Object {
                          "primary": "#333",
                          "secondary": "#fafafa",
                        },
                      }
                    }
                  />
                  <ReactTooltip
                    className="tooltip_box"
                    effect="solid"
                    id="onCarriageTooltip"
                    insecure={true}
                    resizeHide={true}
                    wrapper="div"
                  />
                </div>
              </div>
              <div
                className="flex-100 no_max layout-row layout-align-start-center"
              >
                <div
                  className="flex-33 layout-row layout-wrap"
                >
                  <div
                    className="flex-100"
                  >
                    <TextHeading
                      Comp={
                        <b
                          style={
                            Object {
                              "fontSize": ".83em",
                              "fontWeight": "normal",
                            }
                          }
                        >
                          (
                          if applicable
                          )
                        </b>
                      }
                      color=""
                      size={3}
                      text="EORI"
                      theme={
                        Object {
                          "colors": Object {
                            "primary": "#333",
                            "secondary": "#fafafa",
                          },
                        }
                      }
                    />
                  </div>
                  <div
                    className="flex-100 input_box"
                  >
                    <input
                      className="EORI_input"
                      name="eori"
                      onChange={[Function]}
                      placeholder="Type in EORI number"
                      type="text"
                      value="EORI"
                    />
                  </div>
                </div>
              </div>
            </div>
          </div>
          <div
            className=" prices flex-20 layout-row layout-wrap layout-align-start-start"
          >
            <div
              className="customs_prices flex-100 layout-row  layout-align-end-center"
            >
              <p
                className="flex-none"
              >
                Import
              </p>
              <h6
                className="flex-none center"
              >
                 
                Price subject to local regulations
              </h6>
            </div>
            <div
              className="customs_prices flex-100 layout-row  layout-align-end-center"
            >
              <p
                className="flex-none"
              >
                Export
              </p>
              <h6
                className="flex-none center"
              >
                 
                100.00 EUR
              </h6>
            </div>
            <div
              className="customs_total flex-100 layout-row  layout-align-end-center"
            >
              <p
                className="flex-none"
              >
                Total
              </p>
              <h6
                className="flex-none center"
              >
                 
                NaN EUR
              </h6>
            </div>
          </div>
        </div>
        <div
          className="flex-100 layout-row layout-align-start-center layout-wrap no_customs_box show"
        >
          <div
            className="flex-60 layout-row layout-align-start-center layout-wrap"
          >
            <p
              className="flex-100 margin_5"
            >
              <b>
                A customs declaration is mandatory to pass a national border when exporting or importing. If you choose to handle the customs clearance on your own, TENANT_NAME will need a copy of the customs declaration.
              </b>
            </p>
            <p
              className="flex-100 margin_5"
            >
              <b>
                When you ship goods from outside the European Union (EU), you may be charged customs duty and/or VAT according to local regulations.
              </b>
            </p>
          </div>
          <div
            className="flex-33 no_max layout-row layout-align-end-center"
          />
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`state.customsView is true 1`] = `
<div
  className="flex-100 layout-row layout-wrap padd_top"
  name="cargoDetailsBox"
>
  <div
    className="flex-100 layout-row layout-align-center"
  >
    <div
      className="flex-none content_width layout-row layout-wrap"
    >
      <div
        className="flex-100 layout-row layout-sm-wrap"
      >
        <div
          className="flex-50"
        >
          <div
            className="flex-100"
          >
            <div
              className="flex-100 layout-align-start-center layout-row"
            >
              <div
                className="flex-none"
              >
                <TextHeading
                  color=""
                  size={2}
                  text="Cargo Details"
                  theme={
                    Object {
                      "colors": Object {
                        "primary": "#333",
                        "secondary": "#fafafa",
                      },
                    }
                  }
                />
              </div>
            </div>
             
            <div
              className="flex-none"
            >
              <TextHeading
                color=""
                size={3}
                text="Total value of goods"
                theme={
                  Object {
                    "colors": Object {
                      "primary": "#333",
                      "secondary": "#fafafa",
                    },
                  }
                }
              />
            </div>
          </div>
          <div
            className="flex-100 layout-row layout-wrap layout-align-start-start"
          >
            <div
              className="flex-100 layout-row layout-wrap"
            >
              <div
                className="flex-100 layout-row"
              >
                <div
                  className="flex-66 layout-row"
                >
                  <Formsy(FormsyInput)
                    className="flex-100 ccb_total_goods_value cargo_input "
                    errorMessageStyles={
                      Object {
                        "bottom": "-17px",
                        "fontSize": "13px",
                      }
                    }
                    innerRef={[Function]}
                    name="totalGoodsValue"
                    onBlur={[Function]}
                    required={3370}
                    submitAttempted={false}
                    type="number"
                    validationError=""
                    validationErrors={
                      Object {
                        "isDefaultRequiredValue": "Must be greater than 0",
                        "nonNegative": "Must be greater than 0",
                      }
                    }
                    validations={
                      Object {
                        "nonNegative": [Function],
                      }
                    }
                    value={11}
                    wrapperClassName="flex-100 wrapper_cargo_input"
                  />
                </div>
                <div
                  className="flex-33 layout-row"
                >
                  <NamedSelect
                    className="flex-100 ccb_currency"
                    clearable={false}
                    onChange={[Function]}
                    options={
                      Array [
                        Object {
                          "label": "EUR",
                          "value": "EUR",
                        },
                        Object {
                          "label": "AUD",
                          "value": "AUD",
                        },
                        Object {
                          "label": "BGN",
                          "value": "BGN",
                        },
                        Object {
                          "label": "BRL",
                          "value": "BRL",
                        },
                        Object {
                          "label": "CAD",
                          "value": "CAD",
                        },
                        Object {
                          "label": "CHF",
                          "value": "CHF",
                        },
                        Object {
                          "label": "CNY",
                          "value": "CNY",
                        },
                        Object {
                          "label": "CZK",
                          "value": "CZK",
                        },
                        Object {
                          "label": "DKK",
                          "value": "DKK",
                        },
                        Object {
                          "label": "GBP",
                          "value": "GBP",
                        },
                        Object {
                          "label": "HKD",
                          "value": "HKD",
                        },
                        Object {
                          "label": "HRK",
                          "value": "HRK",
                        },
                        Object {
                          "label": "HUF",
                          "value": "HUF",
                        },
                        Object {
                          "label": "IDR",
                          "value": "IDR",
                        },
                        Object {
                          "label": "ILS",
                          "value": "ILS",
                        },
                        Object {
                          "label": "INR",
                          "value": "INR",
                        },
                        Object {
                          "label": "JPY",
                          "value": "JPY",
                        },
                        Object {
                          "label": "KRW",
                          "value": "KRW",
                        },
                        Object {
                          "label": "MXN",
                          "value": "MXN",
                        },
                        Object {
                          "label": "MYR",
                          "value": "MYR",
                        },
                        Object {
                          "label": "NOK",
                          "value": "NOK",
                        },
                        Object {
                          "label": "NZD",
                          "value": "NZD",
                        },
                        Object {
                          "label": "PHP",
                          "value": "PHP",
                        },
                        Object {
                          "label": "PLN",
                          "value": "PLN",
                        },
                        Object {
                          "label": "RON",
                          "value": "RON",
                        },
                        Object {
                          "label": "RUB",
                          "value": "RUB",
                        },
                        Object {
                          "label": "SEK",
                          "value": "SEK",
                        },
                        Object {
                          "label": "SGD",
                          "value": "SGD",
                        },
                        Object {
                          "label": "THB",
                          "value": "THB",
                        },
                        Object {
                          "label": "TRY",
                          "value": "TRY",
                        },
                        Object {
                          "label": "USD",
                          "value": "USD",
                        },
                        Object {
                          "label": "ZAR",
                          "value": "ZAR",
                        },
                      ]
                    }
                    value={
                      Object {
                        "label": "EUR",
                        "value": "EUR",
                      }
                    }
                  />
                </div>
              </div>
            </div>
            <div
              className="flex-100 layout-row layout-wrap"
              id="cargo_notes"
            >
              <div
                className="flex-100"
              >
                <div
                  className="flex-none f_header"
                >
                   
                  <TextHeading
                    color=""
                    size={3}
                    text="Description of Goods (HS Codes if available)"
                    theme={
                      Object {
                        "colors": Object {
                          "primary": "#333",
                          "secondary": "#fafafa",
                        },
                      }
                    }
                  />
                </div>
              </div>
              <div
                className="flex-100"
              >
                <Formsy(FormsyTextarea)
                  className="flex-100 ccb_description_goods cargo_text_area "
                  errorMessageStyles={
                    Object {
                      "bottom": "-17px",
                      "fontSize": "13px",
                    }
                  }
                  innerRef={[Function]}
                  name="cargoNotes"
                  onBlur={[Function]}
                  required="MANDATORY_FIELDS_DESCRIPTION"
                  submitAttempted={false}
                  type="textarea"
                  validationError=""
                  validationErrors={
                    Object {
                      "isDefaultRequiredValue": "Must not be empty",
                    }
                  }
                  validations={null}
                  value="CARGO_NOTES"
                  wrapperClassName="flex-100 wrapper_cargo_input"
                />
              </div>
            </div>
            <div
              className="flex-100 layout-row layout-align-start-start layout-wrap"
            >
              <div
                className="flex-100"
              >
                <div
                  className="flex-none f_header"
                >
                   
                  <h4
                    className="no_m flex-30"
                  >
                    Incoterms
                     
                    <span>
                      (Optional)
                    </span>
                  </h4>
                  <p
                    className="pointy flex-none incoterm_info"
                    onClick={[Function]}
                  >
                    More info
                  </p>
                </div>
              </div>
              <div
                className="flex-100 layout-row layout-align-start-start input_box_full"
              >
                <Formsy(FormsyTextarea)
                  className="flex-100 cargo_text_area "
                  errorMessageStyles={
                    Object {
                      "bottom": "-17px",
                      "fontSize": "13px",
                    }
                  }
                  innerRef={[Function]}
                  name="incotermText"
                  onBlur={[Function]}
                  required={false}
                  submitAttempted={false}
                  type="textarea"
                  validationError=""
                  validationErrors={Object {}}
                  validations={null}
                  value=""
                  wrapperClassName="flex-100 wrapper_cargo_input"
                />
              </div>
            </div>
          </div>
        </div>
        <div
          className="flex-50 padding_left offset-gt-sm-5 layout-row layout-wrap layout-align-start-start"
        >
          <div
            className="flex-100 layout-align-start-center layout-row"
          >
            <div
              className="flex-none"
            >
              <TextHeading
                color=""
                size={2}
                text="Shipment Documents "
                theme={
                  Object {
                    "colors": Object {
                      "primary": "#333",
                      "secondary": "#fafafa",
                    },
                  }
                }
              />
              <br />
              (
              if available
              )
            </div>
          </div>
          <div
            className="flex-100 layout-row layout-wrap"
            name="packing_sheet"
          >
            <div
              className="flex-100 layout-row margin_5"
            >
              <DocumentsMultiForm
                deleteFn={[Function]}
                dispatchFn={[Function]}
                documents={Array []}
                isRequired={true}
                t={[Function]}
                text="Packing List"
                theme={
                  Object {
                    "colors": Object {
                      "primary": "#333",
                      "secondary": "#fafafa",
                    },
                  }
                }
                tooltip=""
                type="packing_sheet"
                uploadFn={null}
              />
            </div>
          </div>
          <div
            className="flex-100 layout-row layout-wrap"
            name="commercial_invoice"
          >
            <div
              className="flex-100 layout-row margin_5"
            >
              <DocumentsMultiForm
                deleteFn={[Function]}
                dispatchFn={[Function]}
                documents={Array []}
                isRequired={true}
                t={[Function]}
                text="Commercial Invoice"
                theme={
                  Object {
                    "colors": Object {
                      "primary": "#333",
                      "secondary": "#fafafa",
                    },
                  }
                }
                tooltip=""
                type="commercial_invoice"
                uploadFn={null}
              />
            </div>
          </div>
          <div
            className="flex-100 layout-row layout-align-start-start layout-wrap"
          >
            <div
              className="flex-100 layout-row layout-align-start-start layout-wrap"
            >
              <div
                className="flex-100"
              >
                <div
                  className="flex-none f_header"
                >
                   
                  <TextHeading
                    color=""
                    size={3}
                    text="Notes (Optional)"
                    theme={
                      Object {
                        "colors": Object {
                          "primary": "#333",
                          "secondary": "#fafafa",
                        },
                      }
                    }
                  />
                </div>
              </div>
              <div
                className="flex-100 layout-row layout-align-start-start input_box_full"
              >
                <Formsy(FormsyTextarea)
                  className="flex-100 cargo_text_area "
                  errorMessageStyles={
                    Object {
                      "bottom": "-17px",
                      "fontSize": "13px",
                    }
                  }
                  innerRef={[Function]}
                  name="notes"
                  onBlur={[Function]}
                  required={false}
                  submitAttempted={false}
                  type="textarea"
                  validationError=""
                  validationErrors={Object {}}
                  validations={null}
                  value="NOTES"
                  wrapperClassName="flex-100 wrapper_cargo_input"
                />
              </div>
            </div>
            <div
              className="flex-gt-sm-100 layout-row layout-align-start-start layout-wrap"
            >
              <div
                className=" flex-100 layout-row layout-align-start-start-space-around layout-wrap"
              >
                <DocumentsMultiForm
                  deleteFn={[Function]}
                  dispatchFn={[Function]}
                  documents={Array []}
                  t={[Function]}
                  text="Miscellaneous"
                  theme={
                    Object {
                      "colors": Object {
                        "primary": "#333",
                        "secondary": "#fafafa",
                      },
                    }
                  }
                  tooltip=""
                  type="miscellaneous"
                  uploadFn={null}
                />
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <div
    className="insurance_customs_sec flex-100 layout-row layout-wrap layout-align-center"
  >
    <div
      className="flex-100 layout-row layout-align-center padd_top"
    >
      <div
        className="flex-none content_width layout-row layout-wrap section_padding"
      >
        <div
          className="flex-100 layout-row layout-align-space-between-start"
        >
          <div
            className="flex-none layout-row layout-align-space-around-center"
          >
            <TextHeading
              color=""
              size={2}
              text="Insurance"
              theme={
                Object {
                  "colors": Object {
                    "primary": "#333",
                    "secondary": "#fafafa",
                  },
                }
              }
            />
          </div>
          <div
            className="flex-33 layout-row layout-align-space-around-center layout-wrap"
          >
            <div
              className="flex-100 layout-row layout-wrap layout-align-end-center"
            >
              <div
                className="flex-90 layout-row layout-align-start-center"
              >
                <label
                  className="pointy"
                  htmlFor="yes_insurance"
                >
                  Yes, I want TENANT_NAME to quote insurance for my cargo
                </label>
              </div>
              <div
                className="flex-10 layout-row layout-align-end-center"
              >
                <Checkbox
                  checked={true}
                  className="ccb_yes_insurance"
                  disabled={false}
                  id="yes_insurance"
                  onChange={[Function]}
                  onClick={null}
                  size={null}
                  theme={
                    Object {
                      "colors": Object {
                        "primary": "#333",
                        "secondary": "#fafafa",
                      },
                    }
                  }
                />
              </div>
            </div>
            <div
              className="flex-100 layout-row layout-align-end-center"
            >
              <div
                className="flex-90 layout-row layout-align-start-center"
              >
                <label
                  className="pointy"
                  htmlFor="no_insurance"
                >
                  No, I do not want TENANT_NAME to quote insurance for my cargo
                </label>
              </div>
              <div
                className="flex-10 layout-row layout-align-end-center"
              >
                <Checkbox
                  checked={false}
                  className="ccb_no_insurance"
                  disabled={false}
                  id="no_insurance"
                  onChange={[Function]}
                  onClick={null}
                  size={null}
                  theme={
                    Object {
                      "colors": Object {
                        "primary": "#333",
                        "secondary": "#fafafa",
                      },
                    }
                  }
                />
              </div>
            </div>
          </div>
        </div>
        <div
          className="flex-100 layout-row layout-align-start-center"
        >
          <p
            className="flex-60 margin_5"
          >
            <b>
              Cargo Insurance provides cover on all risk terms for physical loss or damage to cargo during transport by land, sea or air.
            </b>
          </p>
        </div>
        <div
          className="flex-100 layout-row layout-align-start-center"
        >
          <p
            className="flex-60 margin_5"
          >
            <b>
              Insurance is a cost effective and simple way to cover for physical loss or damage to goods in transit.
            </b>
          </p>
        </div>
        <div
          className="flex-100 layout-row  box_content show"
        >
          <div
            className="flex-80 layout-row layout-wrap"
          >
            <p
              className="flex-90"
            >
              <strong>
                 
                A cost effective and simple way to cover for physical loss or damage to goods in transit.
              </strong>
            </p>
            <p
              className="flex-90"
            >
              Please contact your local {{tenantName}} office for more info.
            </p>
          </div>
        </div>
        <div
          className="flex-100 layout-row layout-align-start-center"
        >
          <div
            className="flex-none layout-row layout-align-center-center"
            onClick={[Function]}
          >
            <p
              className="flex-none pointy"
            >
              Read more...
            </p>
            <i
              className="flex-none offset-5 fa fa-external-link"
            />
          </div>
        </div>
      </div>
    </div>
    <div
      className="flex-100 layout-row layout-align-center padd_top"
    >
      <div
        className="flex-none content_width layout-row layout-wrap section_padding"
      >
        <div
          className="flex-100 layout-row layout-align-space-between-start layout-wrap"
        >
          <div
            className="flex-none layout-row layout-align-space-around-center"
          >
            <TextHeading
              color=""
              size={2}
              text="Customs Handling"
              theme={
                Object {
                  "colors": Object {
                    "primary": "#333",
                    "secondary": "#fafafa",
                  },
                }
              }
            />
          </div>
          <div
            className="flex-33 layout-wrap layout-row layout-align-space-around-center"
          >
            <div
              className="flex-100 layout-row layout-align-end-center"
            >
              <div
                className="flex-90 layout-row layout-align-start-center"
              >
                <label
                  className="pointy"
                  htmlFor="yes_clearance"
                >
                  Yes, I want TENANT_NAME to handle my customs clearance
                </label>
              </div>
              <div
                className="flex-10 layout-row layout-align-end-center"
              >
                <Checkbox
                  checked={true}
                  className="ccb_yes_clearance"
                  disabled={false}
                  id="yes_clearance"
                  onChange={[Function]}
                  onClick={null}
                  size={null}
                  theme={
                    Object {
                      "colors": Object {
                        "primary": "#333",
                        "secondary": "#fafafa",
                      },
                    }
                  }
                />
              </div>
            </div>
            <div
              className="flex-100 layout-row layout-align-end-center"
            >
              <div
                className="flex-90 layout-row layout-align-start-center"
              >
                <label
                  className="pointy"
                  htmlFor="no_clearance"
                >
                  No, I do not want TENANT_NAME to handle my customs clearance
                </label>
              </div>
              <div
                className="flex-10 layout-row layout-align-end-center"
              >
                <Checkbox
                  checked={false}
                  className="ccb_no_clearance"
                  disabled={false}
                  id="no_clearance"
                  onChange={[Function]}
                  onClick={null}
                  size={null}
                  theme={
                    Object {
                      "colors": Object {
                        "primary": "#333",
                        "secondary": "#fafafa",
                      },
                    }
                  }
                />
              </div>
            </div>
          </div>
        </div>
        <div
          className="flex-100 layout-row layout-wrap customs_box  box_content show"
        >
          <div
            className="flex-60 layout-row layout-wrap"
          >
            <p
              className="flex-90 margin_5"
            >
              <strong>
                 
                When you ship goods from outside the European Union (EU), you may be charged customs duty and/or VAT. You can either handle the customs on your own, or have it handled for you.
              </strong>
            </p>
            <p
              className="flex-90 margin_5"
            >
              To cover our costs when we present your goods to the customs authorities – and pay any customs duty or VAT due on your behalf – we charge a clearance / handling fee. The fee depends on the value of the goods you are shipping, and can be found here to the right.
            </p>
            <div
              className="flex-100 layout-row layout-align-start-start layout-wrap"
            >
              <div
                className="flex-100 layout-row layout-align-start-center"
                style={
                  Object {
                    "height": "36px",
                  }
                }
              >
                <p
                  className="flex-none"
                >
                   
                  I would like TENANT_NAME to handle:
                </p>
              </div>
              <div
                className="flex-100 layout-row layout-align-start-center layout-wrap"
                style={
                  Object {
                    "height": "36px",
                  }
                }
              >
                <div
                  className="flex-45 layout-row layout-align-space-around-center"
                  data-for="preCarriageTooltip"
                  data-tip="Export Customs is not applicable for shipments without delivery to the port (pre-carriage)."
                >
                  <p
                    className="faded_text flex-none"
                  >
                     Export Customs: 
                  </p>
                  <Checkbox
                    checked={true}
                    className=""
                    disabled={true}
                    id={null}
                    onChange={[Function]}
                    onClick={null}
                    size={null}
                    theme={
                      Object {
                        "colors": Object {
                          "primary": "#333",
                          "secondary": "#fafafa",
                        },
                      }
                    }
                  />
                </div>
                <ReactTooltip
                  className="tooltip_box"
                  effect="solid"
                  id="preCarriageTooltip"
                  insecure={true}
                  resizeHide={true}
                  wrapper="div"
                />
                <div
                  className="flex-45 layout-row layout-align-space-around-center"
                  data-for="onCarriageTooltip"
                  data-tip="Import Customs is not applicable for shipments without delivery from the port (on-carriage)."
                >
                  <p
                    className="faded_text flex-none"
                  >
                     Import Customs
                  </p>
                  <Checkbox
                    checked={true}
                    className=""
                    disabled={true}
                    id={null}
                    onChange={[Function]}
                    onClick={null}
                    size={null}
                    theme={
                      Object {
                        "colors": Object {
                          "primary": "#333",
                          "secondary": "#fafafa",
                        },
                      }
                    }
                  />
                  <ReactTooltip
                    className="tooltip_box"
                    effect="solid"
                    id="onCarriageTooltip"
                    insecure={true}
                    resizeHide={true}
                    wrapper="div"
                  />
                </div>
              </div>
              <div
                className="flex-100 no_max layout-row layout-align-start-center"
              >
                <div
                  className="flex-33 layout-row layout-wrap"
                >
                  <div
                    className="flex-100"
                  >
                    <TextHeading
                      Comp={
                        <b
                          style={
                            Object {
                              "fontSize": ".83em",
                              "fontWeight": "normal",
                            }
                          }
                        >
                          (
                          if applicable
                          )
                        </b>
                      }
                      color=""
                      size={3}
                      text="EORI"
                      theme={
                        Object {
                          "colors": Object {
                            "primary": "#333",
                            "secondary": "#fafafa",
                          },
                        }
                      }
                    />
                  </div>
                  <div
                    className="flex-100 input_box"
                  >
                    <input
                      className="EORI_input"
                      name="eori"
                      onChange={[Function]}
                      placeholder="Type in EORI number"
                      type="text"
                      value="EORI"
                    />
                  </div>
                </div>
              </div>
            </div>
          </div>
          <div
            className=" prices flex-20 layout-row layout-wrap layout-align-start-start"
          >
            <div
              className="customs_prices flex-100 layout-row  layout-align-end-center"
            >
              <p
                className="flex-none"
              >
                Import
              </p>
              <h6
                className="flex-none center"
              >
                 
                Price subject to local regulations
              </h6>
            </div>
            <div
              className="customs_prices flex-100 layout-row  layout-align-end-center"
            >
              <p
                className="flex-none"
              >
                Export
              </p>
              <h6
                className="flex-none center"
              >
                 
                100.00 EUR
              </h6>
            </div>
            <div
              className="customs_total flex-100 layout-row  layout-align-end-center"
            >
              <p
                className="flex-none"
              >
                Total
              </p>
              <h6
                className="flex-none center"
              >
                 
                NaN EUR
              </h6>
            </div>
          </div>
        </div>
        <div
          className="flex-100 layout-row layout-align-start-center layout-wrap no_customs_box "
        >
          <div
            className="flex-60 layout-row layout-align-start-center layout-wrap"
          >
            <p
              className="flex-100 margin_5"
            >
              <b>
                A customs declaration is mandatory to pass a national border when exporting or importing. If you choose to handle the customs clearance on your own, TENANT_NAME will need a copy of the customs declaration.
              </b>
            </p>
            <p
              className="flex-100 margin_5"
            >
              <b>
                When you ship goods from outside the European Union (EU), you may be charged customs duty and/or VAT according to local regulations.
              </b>
            </p>
          </div>
          <div
            className="flex-33 no_max layout-row layout-align-end-center"
          />
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`state.insuranceView is false 1`] = `
<div
  className="flex-100 layout-row layout-wrap padd_top"
  name="cargoDetailsBox"
>
  <div
    className="flex-100 layout-row layout-align-center"
  >
    <div
      className="flex-none content_width layout-row layout-wrap"
    >
      <div
        className="flex-100 layout-row layout-sm-wrap"
      >
        <div
          className="flex-50"
        >
          <div
            className="flex-100"
          >
            <div
              className="flex-100 layout-align-start-center layout-row"
            >
              <div
                className="flex-none"
              >
                <TextHeading
                  color=""
                  size={2}
                  text="Cargo Details"
                  theme={
                    Object {
                      "colors": Object {
                        "primary": "#333",
                        "secondary": "#fafafa",
                      },
                    }
                  }
                />
              </div>
            </div>
             
            <div
              className="flex-none"
            >
              <TextHeading
                color=""
                size={3}
                text="Total value of goods"
                theme={
                  Object {
                    "colors": Object {
                      "primary": "#333",
                      "secondary": "#fafafa",
                    },
                  }
                }
              />
            </div>
          </div>
          <div
            className="flex-100 layout-row layout-wrap layout-align-start-start"
          >
            <div
              className="flex-100 layout-row layout-wrap"
            >
              <div
                className="flex-100 layout-row"
              >
                <div
                  className="flex-66 layout-row"
                >
                  <Formsy(FormsyInput)
                    className="flex-100 ccb_total_goods_value cargo_input "
                    errorMessageStyles={
                      Object {
                        "bottom": "-17px",
                        "fontSize": "13px",
                      }
                    }
                    innerRef={[Function]}
                    name="totalGoodsValue"
                    onBlur={[Function]}
                    required={3370}
                    submitAttempted={false}
                    type="number"
                    validationError=""
                    validationErrors={
                      Object {
                        "isDefaultRequiredValue": "Must be greater than 0",
                        "nonNegative": "Must be greater than 0",
                      }
                    }
                    validations={
                      Object {
                        "nonNegative": [Function],
                      }
                    }
                    value={11}
                    wrapperClassName="flex-100 wrapper_cargo_input"
                  />
                </div>
                <div
                  className="flex-33 layout-row"
                >
                  <NamedSelect
                    className="flex-100 ccb_currency"
                    clearable={false}
                    onChange={[Function]}
                    options={
                      Array [
                        Object {
                          "label": "EUR",
                          "value": "EUR",
                        },
                        Object {
                          "label": "AUD",
                          "value": "AUD",
                        },
                        Object {
                          "label": "BGN",
                          "value": "BGN",
                        },
                        Object {
                          "label": "BRL",
                          "value": "BRL",
                        },
                        Object {
                          "label": "CAD",
                          "value": "CAD",
                        },
                        Object {
                          "label": "CHF",
                          "value": "CHF",
                        },
                        Object {
                          "label": "CNY",
                          "value": "CNY",
                        },
                        Object {
                          "label": "CZK",
                          "value": "CZK",
                        },
                        Object {
                          "label": "DKK",
                          "value": "DKK",
                        },
                        Object {
                          "label": "GBP",
                          "value": "GBP",
                        },
                        Object {
                          "label": "HKD",
                          "value": "HKD",
                        },
                        Object {
                          "label": "HRK",
                          "value": "HRK",
                        },
                        Object {
                          "label": "HUF",
                          "value": "HUF",
                        },
                        Object {
                          "label": "IDR",
                          "value": "IDR",
                        },
                        Object {
                          "label": "ILS",
                          "value": "ILS",
                        },
                        Object {
                          "label": "INR",
                          "value": "INR",
                        },
                        Object {
                          "label": "JPY",
                          "value": "JPY",
                        },
                        Object {
                          "label": "KRW",
                          "value": "KRW",
                        },
                        Object {
                          "label": "MXN",
                          "value": "MXN",
                        },
                        Object {
                          "label": "MYR",
                          "value": "MYR",
                        },
                        Object {
                          "label": "NOK",
                          "value": "NOK",
                        },
                        Object {
                          "label": "NZD",
                          "value": "NZD",
                        },
                        Object {
                          "label": "PHP",
                          "value": "PHP",
                        },
                        Object {
                          "label": "PLN",
                          "value": "PLN",
                        },
                        Object {
                          "label": "RON",
                          "value": "RON",
                        },
                        Object {
                          "label": "RUB",
                          "value": "RUB",
                        },
                        Object {
                          "label": "SEK",
                          "value": "SEK",
                        },
                        Object {
                          "label": "SGD",
                          "value": "SGD",
                        },
                        Object {
                          "label": "THB",
                          "value": "THB",
                        },
                        Object {
                          "label": "TRY",
                          "value": "TRY",
                        },
                        Object {
                          "label": "USD",
                          "value": "USD",
                        },
                        Object {
                          "label": "ZAR",
                          "value": "ZAR",
                        },
                      ]
                    }
                    value={
                      Object {
                        "label": "EUR",
                        "value": "EUR",
                      }
                    }
                  />
                </div>
              </div>
            </div>
            <div
              className="flex-100 layout-row layout-wrap"
              id="cargo_notes"
            >
              <div
                className="flex-100"
              >
                <div
                  className="flex-none f_header"
                >
                   
                  <TextHeading
                    color=""
                    size={3}
                    text="Description of Goods (HS Codes if available)"
                    theme={
                      Object {
                        "colors": Object {
                          "primary": "#333",
                          "secondary": "#fafafa",
                        },
                      }
                    }
                  />
                </div>
              </div>
              <div
                className="flex-100"
              >
                <Formsy(FormsyTextarea)
                  className="flex-100 ccb_description_goods cargo_text_area "
                  errorMessageStyles={
                    Object {
                      "bottom": "-17px",
                      "fontSize": "13px",
                    }
                  }
                  innerRef={[Function]}
                  name="cargoNotes"
                  onBlur={[Function]}
                  required="MANDATORY_FIELDS_DESCRIPTION"
                  submitAttempted={false}
                  type="textarea"
                  validationError=""
                  validationErrors={
                    Object {
                      "isDefaultRequiredValue": "Must not be empty",
                    }
                  }
                  validations={null}
                  value="CARGO_NOTES"
                  wrapperClassName="flex-100 wrapper_cargo_input"
                />
              </div>
            </div>
            <div
              className="flex-100 layout-row layout-align-start-start layout-wrap"
            >
              <div
                className="flex-100"
              >
                <div
                  className="flex-none f_header"
                >
                   
                  <h4
                    className="no_m flex-30"
                  >
                    Incoterms
                     
                    <span>
                      (Optional)
                    </span>
                  </h4>
                  <p
                    className="pointy flex-none incoterm_info"
                    onClick={[Function]}
                  >
                    More info
                  </p>
                </div>
              </div>
              <div
                className="flex-100 layout-row layout-align-start-start input_box_full"
              >
                <Formsy(FormsyTextarea)
                  className="flex-100 cargo_text_area "
                  errorMessageStyles={
                    Object {
                      "bottom": "-17px",
                      "fontSize": "13px",
                    }
                  }
                  innerRef={[Function]}
                  name="incotermText"
                  onBlur={[Function]}
                  required={false}
                  submitAttempted={false}
                  type="textarea"
                  validationError=""
                  validationErrors={Object {}}
                  validations={null}
                  value=""
                  wrapperClassName="flex-100 wrapper_cargo_input"
                />
              </div>
            </div>
          </div>
        </div>
        <div
          className="flex-50 padding_left offset-gt-sm-5 layout-row layout-wrap layout-align-start-start"
        >
          <div
            className="flex-100 layout-align-start-center layout-row"
          >
            <div
              className="flex-none"
            >
              <TextHeading
                color=""
                size={2}
                text="Shipment Documents "
                theme={
                  Object {
                    "colors": Object {
                      "primary": "#333",
                      "secondary": "#fafafa",
                    },
                  }
                }
              />
              <br />
              (
              if available
              )
            </div>
          </div>
          <div
            className="flex-100 layout-row layout-wrap"
            name="packing_sheet"
          >
            <div
              className="flex-100 layout-row margin_5"
            >
              <DocumentsMultiForm
                deleteFn={[Function]}
                dispatchFn={[Function]}
                documents={Array []}
                isRequired={true}
                t={[Function]}
                text="Packing List"
                theme={
                  Object {
                    "colors": Object {
                      "primary": "#333",
                      "secondary": "#fafafa",
                    },
                  }
                }
                tooltip=""
                type="packing_sheet"
                uploadFn={null}
              />
            </div>
          </div>
          <div
            className="flex-100 layout-row layout-wrap"
            name="commercial_invoice"
          >
            <div
              className="flex-100 layout-row margin_5"
            >
              <DocumentsMultiForm
                deleteFn={[Function]}
                dispatchFn={[Function]}
                documents={Array []}
                isRequired={true}
                t={[Function]}
                text="Commercial Invoice"
                theme={
                  Object {
                    "colors": Object {
                      "primary": "#333",
                      "secondary": "#fafafa",
                    },
                  }
                }
                tooltip=""
                type="commercial_invoice"
                uploadFn={null}
              />
            </div>
          </div>
          <div
            className="flex-100 layout-row layout-align-start-start layout-wrap"
          >
            <div
              className="flex-100 layout-row layout-align-start-start layout-wrap"
            >
              <div
                className="flex-100"
              >
                <div
                  className="flex-none f_header"
                >
                   
                  <TextHeading
                    color=""
                    size={3}
                    text="Notes (Optional)"
                    theme={
                      Object {
                        "colors": Object {
                          "primary": "#333",
                          "secondary": "#fafafa",
                        },
                      }
                    }
                  />
                </div>
              </div>
              <div
                className="flex-100 layout-row layout-align-start-start input_box_full"
              >
                <Formsy(FormsyTextarea)
                  className="flex-100 cargo_text_area "
                  errorMessageStyles={
                    Object {
                      "bottom": "-17px",
                      "fontSize": "13px",
                    }
                  }
                  innerRef={[Function]}
                  name="notes"
                  onBlur={[Function]}
                  required={false}
                  submitAttempted={false}
                  type="textarea"
                  validationError=""
                  validationErrors={Object {}}
                  validations={null}
                  value="NOTES"
                  wrapperClassName="flex-100 wrapper_cargo_input"
                />
              </div>
            </div>
            <div
              className="flex-gt-sm-100 layout-row layout-align-start-start layout-wrap"
            >
              <div
                className=" flex-100 layout-row layout-align-start-start-space-around layout-wrap"
              >
                <DocumentsMultiForm
                  deleteFn={[Function]}
                  dispatchFn={[Function]}
                  documents={Array []}
                  t={[Function]}
                  text="Miscellaneous"
                  theme={
                    Object {
                      "colors": Object {
                        "primary": "#333",
                        "secondary": "#fafafa",
                      },
                    }
                  }
                  tooltip=""
                  type="miscellaneous"
                  uploadFn={null}
                />
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <div
    className="insurance_customs_sec flex-100 layout-row layout-wrap layout-align-center"
  >
    <div
      className="flex-100 layout-row layout-align-center padd_top"
    >
      <div
        className="flex-none content_width layout-row layout-wrap section_padding"
      >
        <div
          className="flex-100 layout-row layout-align-space-between-start"
        >
          <div
            className="flex-none layout-row layout-align-space-around-center"
          >
            <TextHeading
              color=""
              size={2}
              text="Insurance"
              theme={
                Object {
                  "colors": Object {
                    "primary": "#333",
                    "secondary": "#fafafa",
                  },
                }
              }
            />
          </div>
          <div
            className="flex-33 layout-row layout-align-space-around-center layout-wrap"
          >
            <div
              className="flex-100 layout-row layout-wrap layout-align-end-center"
            >
              <div
                className="flex-90 layout-row layout-align-start-center"
              >
                <label
                  className="pointy"
                  htmlFor="yes_insurance"
                >
                  Yes, I want TENANT_NAME to quote insurance for my cargo
                </label>
              </div>
              <div
                className="flex-10 layout-row layout-align-end-center"
              >
                <Checkbox
                  checked={true}
                  className="ccb_yes_insurance"
                  disabled={false}
                  id="yes_insurance"
                  onChange={[Function]}
                  onClick={null}
                  size={null}
                  theme={
                    Object {
                      "colors": Object {
                        "primary": "#333",
                        "secondary": "#fafafa",
                      },
                    }
                  }
                />
              </div>
            </div>
            <div
              className="flex-100 layout-row layout-align-end-center"
            >
              <div
                className="flex-90 layout-row layout-align-start-center"
              >
                <label
                  className="pointy"
                  htmlFor="no_insurance"
                >
                  No, I do not want TENANT_NAME to quote insurance for my cargo
                </label>
              </div>
              <div
                className="flex-10 layout-row layout-align-end-center"
              >
                <Checkbox
                  checked={false}
                  className="ccb_no_insurance"
                  disabled={false}
                  id="no_insurance"
                  onChange={[Function]}
                  onClick={null}
                  size={null}
                  theme={
                    Object {
                      "colors": Object {
                        "primary": "#333",
                        "secondary": "#fafafa",
                      },
                    }
                  }
                />
              </div>
            </div>
          </div>
        </div>
        <div
          className="flex-100 layout-row layout-align-start-center"
        >
          <p
            className="flex-60 margin_5"
          >
            <b>
              Cargo Insurance provides cover on all risk terms for physical loss or damage to cargo during transport by land, sea or air.
            </b>
          </p>
        </div>
        <div
          className="flex-100 layout-row  box_content show"
        >
          <div
            className="flex-80 layout-row layout-wrap"
          >
            <p
              className="flex-90"
            >
              <strong>
                 
                A cost effective and simple way to cover for physical loss or damage to goods in transit.
              </strong>
            </p>
            <p
              className="flex-90"
            >
              Please contact your local {{tenantName}} office for more info.
            </p>
          </div>
        </div>
        <div
          className="flex-100 layout-row layout-align-start-center"
        >
          <div
            className="flex-none layout-row layout-align-center-center"
            onClick={[Function]}
          >
            <p
              className="flex-none pointy"
            >
              Read more...
            </p>
            <i
              className="flex-none offset-5 fa fa-external-link"
            />
          </div>
        </div>
      </div>
    </div>
    <div
      className="flex-100 layout-row layout-align-center padd_top"
    >
      <div
        className="flex-none content_width layout-row layout-wrap section_padding"
      >
        <div
          className="flex-100 layout-row layout-align-space-between-start layout-wrap"
        >
          <div
            className="flex-none layout-row layout-align-space-around-center"
          >
            <TextHeading
              color=""
              size={2}
              text="Customs Handling"
              theme={
                Object {
                  "colors": Object {
                    "primary": "#333",
                    "secondary": "#fafafa",
                  },
                }
              }
            />
          </div>
          <div
            className="flex-33 layout-wrap layout-row layout-align-space-around-center"
          >
            <div
              className="flex-100 layout-row layout-align-end-center"
            >
              <div
                className="flex-90 layout-row layout-align-start-center"
              >
                <label
                  className="pointy"
                  htmlFor="yes_clearance"
                >
                  Yes, I want TENANT_NAME to handle my customs clearance
                </label>
              </div>
              <div
                className="flex-10 layout-row layout-align-end-center"
              >
                <Checkbox
                  checked={null}
                  className="ccb_yes_clearance"
                  disabled={false}
                  id="yes_clearance"
                  onChange={[Function]}
                  onClick={null}
                  size={null}
                  theme={
                    Object {
                      "colors": Object {
                        "primary": "#333",
                        "secondary": "#fafafa",
                      },
                    }
                  }
                />
              </div>
            </div>
            <div
              className="flex-100 layout-row layout-align-end-center"
            >
              <div
                className="flex-90 layout-row layout-align-start-center"
              >
                <label
                  className="pointy"
                  htmlFor="no_clearance"
                >
                  No, I do not want TENANT_NAME to handle my customs clearance
                </label>
              </div>
              <div
                className="flex-10 layout-row layout-align-end-center"
              >
                <Checkbox
                  checked={null}
                  className="ccb_no_clearance"
                  disabled={false}
                  id="no_clearance"
                  onChange={[Function]}
                  onClick={null}
                  size={null}
                  theme={
                    Object {
                      "colors": Object {
                        "primary": "#333",
                        "secondary": "#fafafa",
                      },
                    }
                  }
                />
              </div>
            </div>
          </div>
        </div>
        <div
          className="flex-100 layout-row layout-wrap customs_box  box_content hidden"
        >
          <div
            className="flex-60 layout-row layout-wrap"
          >
            <p
              className="flex-90 margin_5"
            >
              <strong>
                 
                When you ship goods from outside the European Union (EU), you may be charged customs duty and/or VAT. You can either handle the customs on your own, or have it handled for you.
              </strong>
            </p>
            <p
              className="flex-90 margin_5"
            >
              To cover our costs when we present your goods to the customs authorities – and pay any customs duty or VAT due on your behalf – we charge a clearance / handling fee. The fee depends on the value of the goods you are shipping, and can be found here to the right.
            </p>
            <div
              className="flex-100 layout-row layout-align-start-start layout-wrap"
            >
              <div
                className="flex-100 layout-row layout-align-start-center"
                style={
                  Object {
                    "height": "36px",
                  }
                }
              >
                <p
                  className="flex-none"
                >
                   
                  I would like TENANT_NAME to handle:
                </p>
              </div>
              <div
                className="flex-100 layout-row layout-align-start-center layout-wrap"
                style={
                  Object {
                    "height": "36px",
                  }
                }
              >
                <div
                  className="flex-45 layout-row layout-align-space-around-center"
                  data-for="preCarriageTooltip"
                  data-tip="Export Customs is not applicable for shipments without delivery to the port (pre-carriage)."
                >
                  <p
                    className="faded_text flex-none"
                  >
                     Export Customs: 
                  </p>
                  <Checkbox
                    checked={true}
                    className=""
                    disabled={true}
                    id={null}
                    onChange={[Function]}
                    onClick={null}
                    size={null}
                    theme={
                      Object {
                        "colors": Object {
                          "primary": "#333",
                          "secondary": "#fafafa",
                        },
                      }
                    }
                  />
                </div>
                <ReactTooltip
                  className="tooltip_box"
                  effect="solid"
                  id="preCarriageTooltip"
                  insecure={true}
                  resizeHide={true}
                  wrapper="div"
                />
                <div
                  className="flex-45 layout-row layout-align-space-around-center"
                  data-for="onCarriageTooltip"
                  data-tip="Import Customs is not applicable for shipments without delivery from the port (on-carriage)."
                >
                  <p
                    className="faded_text flex-none"
                  >
                     Import Customs
                  </p>
                  <Checkbox
                    checked={true}
                    className=""
                    disabled={true}
                    id={null}
                    onChange={[Function]}
                    onClick={null}
                    size={null}
                    theme={
                      Object {
                        "colors": Object {
                          "primary": "#333",
                          "secondary": "#fafafa",
                        },
                      }
                    }
                  />
                  <ReactTooltip
                    className="tooltip_box"
                    effect="solid"
                    id="onCarriageTooltip"
                    insecure={true}
                    resizeHide={true}
                    wrapper="div"
                  />
                </div>
              </div>
              <div
                className="flex-100 no_max layout-row layout-align-start-center"
              >
                <div
                  className="flex-33 layout-row layout-wrap"
                >
                  <div
                    className="flex-100"
                  >
                    <TextHeading
                      Comp={
                        <b
                          style={
                            Object {
                              "fontSize": ".83em",
                              "fontWeight": "normal",
                            }
                          }
                        >
                          (
                          if applicable
                          )
                        </b>
                      }
                      color=""
                      size={3}
                      text="EORI"
                      theme={
                        Object {
                          "colors": Object {
                            "primary": "#333",
                            "secondary": "#fafafa",
                          },
                        }
                      }
                    />
                  </div>
                  <div
                    className="flex-100 input_box"
                  >
                    <input
                      className="EORI_input"
                      name="eori"
                      onChange={[Function]}
                      placeholder="Type in EORI number"
                      type="text"
                      value="EORI"
                    />
                  </div>
                </div>
              </div>
            </div>
          </div>
          <div
            className=" prices flex-20 layout-row layout-wrap layout-align-start-start"
          >
            <div
              className="customs_prices flex-100 layout-row  layout-align-end-center"
            >
              <p
                className="flex-none"
              >
                Import
              </p>
              <h6
                className="flex-none center"
              >
                 
                Price subject to local regulations
              </h6>
            </div>
            <div
              className="customs_prices flex-100 layout-row  layout-align-end-center"
            >
              <p
                className="flex-none"
              >
                Export
              </p>
              <h6
                className="flex-none center"
              >
                 
                100.00 EUR
              </h6>
            </div>
            <div
              className="customs_total flex-100 layout-row  layout-align-end-center"
            >
              <p
                className="flex-none"
              >
                Total
              </p>
              <h6
                className="flex-none center"
              >
                 
                NaN EUR
              </h6>
            </div>
          </div>
        </div>
        <div
          className="flex-100 layout-row layout-align-start-center layout-wrap no_customs_box show"
        >
          <div
            className="flex-60 layout-row layout-align-start-center layout-wrap"
          >
            <p
              className="flex-100 margin_5"
            >
              <b>
                A customs declaration is mandatory to pass a national border when exporting or importing. If you choose to handle the customs clearance on your own, TENANT_NAME will need a copy of the customs declaration.
              </b>
            </p>
            <p
              className="flex-100 margin_5"
            >
              <b>
                When you ship goods from outside the European Union (EU), you may be charged customs duty and/or VAT according to local regulations.
              </b>
            </p>
          </div>
          <div
            className="flex-33 no_max layout-row layout-align-end-center"
          />
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`state.showModal is true 1`] = `
<div
  className="flex-100 layout-row layout-wrap padd_top"
  name="cargoDetailsBox"
>
  <Modal
    classNames=""
    component={
      <div
        className="flex-100 layout-wrap layout-row"
      >
        <p>
          Incoterms are internationally accepted commercial terms defining the respective roles of the buyer and seller in the arrangement of transportation and other responsibilities, and clarify when the ownership of the merchandise takes place. They are used in conjunction with a sales agreement or other method of transacting the sale. Below is an example of how INCO Terms work in action. The definitions provided here are the most common uses of each term, but are not the only way these terms are used. Pay close attention to the location listed for each term, as this indicates where payment details change from Shipper to Consignee.
        </p>
        <div>
          <div
            className="flex-70 incoterm_row"
          >
            <h4
              style={
                Object {
                  "color": "#333",
                }
              }
            >
              EXW (Ex Works)
            </h4>
            <p>
              Factory, mill, warehouse: your door
            </p>
            <p
              className="incoterm_desc"
            >
              Title and risk pass to buyer including payment of all transportation and insurance cost from the seller's door. Used for any mode of transportation.
            </p>
          </div>
          <div
            className="flex-70 incoterm_row"
          >
            <h4
              style={
                Object {
                  "color": "#333",
                }
              }
            >
              FCA (Free Carrier)
            </h4>
            <p>
              Pick a place after your origin to start
            </p>
            <p
              className="incoterm_desc"
            >
              Title and risk pass to buyer including transportation and insurance cost when the seller delivers goods cleared for export to the carrier. Seller is obligated to load the goods on the Buyer's collecting vehicle; it is the Buyer's obligation to receive the Seller's arriving vehicle unloaded.
            </p>
          </div>
          <div
            className="flex-70 incoterm_row"
          >
            <h4
              style={
                Object {
                  "color": "#333",
                }
              }
            >
              FAS (Free Alongside Ship)
            </h4>
            <p>
              Port, after all origin port charges
            </p>
            <p
              className="incoterm_desc"
            >
              Title and risk pass to buyer including payment of all transportation and insurance cost once delivered alongside ship by the seller. Used for sea or inland waterway transportation. The export clearance obligation rests with the seller.
            </p>
          </div>
          <div
            className="flex-70 incoterm_row"
          >
            <h4
              style={
                Object {
                  "color": "#333",
                }
              }
            >
              FOB (Free On Board)
            </h4>
            <p>
              Port-same as FAS
            </p>
            <p
              className="incoterm_desc"
            >
              Risk pass to buyer including payment of all transportation and insurance cost once delivered on board the ship by the seller. Used for sea or inland waterway transportation.
            </p>
          </div>
          <div
            className="flex-70 incoterm_row"
          >
            <h4
              style={
                Object {
                  "color": "#333",
                }
              }
            >
              CFR (Cost and Freight)
            </h4>
            <p>
              Destination port-paid to arrival at destination port
            </p>
            <p
              className="incoterm_desc"
            >
              Title, risk and insurance cost pass to buyer when delivered on board the ship by seller who pays the transportation cost to the destination port. Used for sea or inland waterway transportation.
            </p>
          </div>
          <div
            className="flex-70 incoterm_row"
          >
            <h4
              style={
                Object {
                  "color": "#333",
                }
              }
            >
              CIF (Cost, Insurance and Freight) 
            </h4>
            <p>
              Destination port-same as CFR, but includes insurance
            </p>
            <p
              className="incoterm_desc"
            >
              Title and risk pass to buyer when delivered on board the ship by seller who pays transportation and insurance cost to destination port. Used for sea or inland waterway transportation.
            </p>
          </div>
          <div
            className="flex-70 incoterm_row"
          >
            <h4
              style={
                Object {
                  "color": "#333",
                }
              }
            >
              CPT (Carriage Paid To)
            </h4>
            <p>
              Place at destination-includes all destination port charges
            </p>
            <p
              className="incoterm_desc"
            >
              Title, risk and insurance cost pass to buyer when delivered to carrier or seller who pays transportation and insurance cost to destination. Used for any mode of transportation.
            </p>
          </div>
          <div
            className="flex-70 incoterm_row"
          >
            <h4
              style={
                Object {
                  "color": "#333",
                }
              }
            >
              CIP (Carriage and Insurance Paid To)
            </h4>
            <p>
              Place at destination-same as CPT, but includes insurance
            </p>
            <p
              className="incoterm_desc"
            >
              Title and risk pass to buyer when delivered to carrier by seller who pays transportation and insurance cost to destination. Used for any mode of transportation.
            </p>
          </div>
          <div
            className="flex-70 incoterm_row"
          >
            <h4
              style={
                Object {
                  "color": "#333",
                }
              }
            >
              DAF (Delivered to Frontier)
            </h4>
            <p>
              Border of country-same as paid by seller to border-all other charges to buyer
            </p>
            <p
              className="incoterm_desc"
            >
              Title, risk and responsibility for import clearance pass to buyer when delivered to named border point by seller. Used for any mode of transportation. (border of country-same as paid by seller to border-all other charges to buyer) Title, risk and responsibility for import clearance pass to buyer when delivered to named border point by seller. Used for any mode of transportation.
            </p>
          </div>
          <div
            className="flex-70 incoterm_row"
          >
            <h4
              style={
                Object {
                  "color": "#333",
                }
              }
            >
              DES (Delivered Ex Ship)
            </h4>
            <p>
              On board ship to destination port
            </p>
            <p
              className="incoterm_desc"
            >
              Title, risk, responsibility for vessel discharge and import clearance pass to buyer when seller delivers goods on board the ship to destination port. Used for sea or inland waterway transportation.
            </p>
          </div>
          <div
            className="flex-70 incoterm_row"
          >
            <h4
              style={
                Object {
                  "color": "#333",
                }
              }
            >
              DEQ (Delivered Ex Quay i.e. Duty Paid)
            </h4>
            <p>
              Destination port-includes duties and taxes, but not destination charges or delivery
            </p>
            <p
              className="incoterm_desc"
            >
              Title and risk pass to buyer when delivered on board the ship at the destination point by the seller who delivers goods on dock at destination point cleared for import. Used for sea or inland waterway transportation.
            </p>
          </div>
          <div
            className="flex-70 incoterm_row"
          >
            <h4
              style={
                Object {
                  "color": "#333",
                }
              }
            >
              DDU (Delivered Duty Unpaid)
            </h4>
            <p>
              Consignee door-excluding duties and taxes
            </p>
            <p
              className="incoterm_desc"
            >
               Title, risk, and responsibility for vessel discharge and import clearance pass to buyer when seller delivers goods on board the ship to destination port. Used for sea or inland waterway transportation.
            </p>
          </div>
          <div
            className="flex-70 incoterm_row"
          >
            <h4
              style={
                Object {
                  "color": "#333",
                }
              }
            >
              DDP (Delivered Duty Paid)
            </h4>
            <p>
              Consignee door-includes all charges origin to destination
            </p>
            <p
              className="incoterm_desc"
            >
              Title and risk pass to buyer when seller delivers goods to named destination point cleared for import. Used for any mode of transportation.
            </p>
          </div>
        </div>
      </div>
    }
    flexOptions="flex-80"
    horizontalPadding="55px"
    maxWidth="70%"
    minHeight=""
    parentToggle={[Function]}
    showExit={true}
    verticalPadding="65px"
  />
  <div
    className="flex-100 layout-row layout-align-center"
  >
    <div
      className="flex-none content_width layout-row layout-wrap"
    >
      <div
        className="flex-100 layout-row layout-sm-wrap"
      >
        <div
          className="flex-50"
        >
          <div
            className="flex-100"
          >
            <div
              className="flex-100 layout-align-start-center layout-row"
            >
              <div
                className="flex-none"
              >
                <TextHeading
                  color=""
                  size={2}
                  text="Cargo Details"
                  theme={
                    Object {
                      "colors": Object {
                        "primary": "#333",
                        "secondary": "#fafafa",
                      },
                    }
                  }
                />
              </div>
            </div>
             
            <div
              className="flex-none"
            >
              <TextHeading
                color=""
                size={3}
                text="Total value of goods"
                theme={
                  Object {
                    "colors": Object {
                      "primary": "#333",
                      "secondary": "#fafafa",
                    },
                  }
                }
              />
            </div>
          </div>
          <div
            className="flex-100 layout-row layout-wrap layout-align-start-start"
          >
            <div
              className="flex-100 layout-row layout-wrap"
            >
              <div
                className="flex-100 layout-row"
              >
                <div
                  className="flex-66 layout-row"
                >
                  <Formsy(FormsyInput)
                    className="flex-100 ccb_total_goods_value cargo_input "
                    errorMessageStyles={
                      Object {
                        "bottom": "-17px",
                        "fontSize": "13px",
                      }
                    }
                    innerRef={[Function]}
                    name="totalGoodsValue"
                    onBlur={[Function]}
                    required={3370}
                    submitAttempted={false}
                    type="number"
                    validationError=""
                    validationErrors={
                      Object {
                        "isDefaultRequiredValue": "Must be greater than 0",
                        "nonNegative": "Must be greater than 0",
                      }
                    }
                    validations={
                      Object {
                        "nonNegative": [Function],
                      }
                    }
                    value={11}
                    wrapperClassName="flex-100 wrapper_cargo_input"
                  />
                </div>
                <div
                  className="flex-33 layout-row"
                >
                  <NamedSelect
                    className="flex-100 ccb_currency"
                    clearable={false}
                    onChange={[Function]}
                    options={
                      Array [
                        Object {
                          "label": "EUR",
                          "value": "EUR",
                        },
                        Object {
                          "label": "AUD",
                          "value": "AUD",
                        },
                        Object {
                          "label": "BGN",
                          "value": "BGN",
                        },
                        Object {
                          "label": "BRL",
                          "value": "BRL",
                        },
                        Object {
                          "label": "CAD",
                          "value": "CAD",
                        },
                        Object {
                          "label": "CHF",
                          "value": "CHF",
                        },
                        Object {
                          "label": "CNY",
                          "value": "CNY",
                        },
                        Object {
                          "label": "CZK",
                          "value": "CZK",
                        },
                        Object {
                          "label": "DKK",
                          "value": "DKK",
                        },
                        Object {
                          "label": "GBP",
                          "value": "GBP",
                        },
                        Object {
                          "label": "HKD",
                          "value": "HKD",
                        },
                        Object {
                          "label": "HRK",
                          "value": "HRK",
                        },
                        Object {
                          "label": "HUF",
                          "value": "HUF",
                        },
                        Object {
                          "label": "IDR",
                          "value": "IDR",
                        },
                        Object {
                          "label": "ILS",
                          "value": "ILS",
                        },
                        Object {
                          "label": "INR",
                          "value": "INR",
                        },
                        Object {
                          "label": "JPY",
                          "value": "JPY",
                        },
                        Object {
                          "label": "KRW",
                          "value": "KRW",
                        },
                        Object {
                          "label": "MXN",
                          "value": "MXN",
                        },
                        Object {
                          "label": "MYR",
                          "value": "MYR",
                        },
                        Object {
                          "label": "NOK",
                          "value": "NOK",
                        },
                        Object {
                          "label": "NZD",
                          "value": "NZD",
                        },
                        Object {
                          "label": "PHP",
                          "value": "PHP",
                        },
                        Object {
                          "label": "PLN",
                          "value": "PLN",
                        },
                        Object {
                          "label": "RON",
                          "value": "RON",
                        },
                        Object {
                          "label": "RUB",
                          "value": "RUB",
                        },
                        Object {
                          "label": "SEK",
                          "value": "SEK",
                        },
                        Object {
                          "label": "SGD",
                          "value": "SGD",
                        },
                        Object {
                          "label": "THB",
                          "value": "THB",
                        },
                        Object {
                          "label": "TRY",
                          "value": "TRY",
                        },
                        Object {
                          "label": "USD",
                          "value": "USD",
                        },
                        Object {
                          "label": "ZAR",
                          "value": "ZAR",
                        },
                      ]
                    }
                    value={
                      Object {
                        "label": "EUR",
                        "value": "EUR",
                      }
                    }
                  />
                </div>
              </div>
            </div>
            <div
              className="flex-100 layout-row layout-wrap"
              id="cargo_notes"
            >
              <div
                className="flex-100"
              >
                <div
                  className="flex-none f_header"
                >
                   
                  <TextHeading
                    color=""
                    size={3}
                    text="Description of Goods (HS Codes if available)"
                    theme={
                      Object {
                        "colors": Object {
                          "primary": "#333",
                          "secondary": "#fafafa",
                        },
                      }
                    }
                  />
                </div>
              </div>
              <div
                className="flex-100"
              >
                <Formsy(FormsyTextarea)
                  className="flex-100 ccb_description_goods cargo_text_area "
                  errorMessageStyles={
                    Object {
                      "bottom": "-17px",
                      "fontSize": "13px",
                    }
                  }
                  innerRef={[Function]}
                  name="cargoNotes"
                  onBlur={[Function]}
                  required="MANDATORY_FIELDS_DESCRIPTION"
                  submitAttempted={false}
                  type="textarea"
                  validationError=""
                  validationErrors={
                    Object {
                      "isDefaultRequiredValue": "Must not be empty",
                    }
                  }
                  validations={null}
                  value="CARGO_NOTES"
                  wrapperClassName="flex-100 wrapper_cargo_input"
                />
              </div>
            </div>
            <div
              className="flex-100 layout-row layout-align-start-start layout-wrap"
            >
              <div
                className="flex-100"
              >
                <div
                  className="flex-none f_header"
                >
                   
                  <h4
                    className="no_m flex-30"
                  >
                    Incoterms
                     
                    <span>
                      (Optional)
                    </span>
                  </h4>
                  <p
                    className="pointy flex-none incoterm_info"
                    onClick={[Function]}
                  >
                    More info
                  </p>
                </div>
              </div>
              <div
                className="flex-100 layout-row layout-align-start-start input_box_full"
              >
                <Formsy(FormsyTextarea)
                  className="flex-100 cargo_text_area "
                  errorMessageStyles={
                    Object {
                      "bottom": "-17px",
                      "fontSize": "13px",
                    }
                  }
                  innerRef={[Function]}
                  name="incotermText"
                  onBlur={[Function]}
                  required={false}
                  submitAttempted={false}
                  type="textarea"
                  validationError=""
                  validationErrors={Object {}}
                  validations={null}
                  value=""
                  wrapperClassName="flex-100 wrapper_cargo_input"
                />
              </div>
            </div>
          </div>
        </div>
        <div
          className="flex-50 padding_left offset-gt-sm-5 layout-row layout-wrap layout-align-start-start"
        >
          <div
            className="flex-100 layout-align-start-center layout-row"
          >
            <div
              className="flex-none"
            >
              <TextHeading
                color=""
                size={2}
                text="Shipment Documents "
                theme={
                  Object {
                    "colors": Object {
                      "primary": "#333",
                      "secondary": "#fafafa",
                    },
                  }
                }
              />
              <br />
              (
              if available
              )
            </div>
          </div>
          <div
            className="flex-100 layout-row layout-wrap"
            name="packing_sheet"
          >
            <div
              className="flex-100 layout-row margin_5"
            >
              <DocumentsMultiForm
                deleteFn={[Function]}
                dispatchFn={[Function]}
                documents={Array []}
                isRequired={true}
                t={[Function]}
                text="Packing List"
                theme={
                  Object {
                    "colors": Object {
                      "primary": "#333",
                      "secondary": "#fafafa",
                    },
                  }
                }
                tooltip=""
                type="packing_sheet"
                uploadFn={null}
              />
            </div>
          </div>
          <div
            className="flex-100 layout-row layout-wrap"
            name="commercial_invoice"
          >
            <div
              className="flex-100 layout-row margin_5"
            >
              <DocumentsMultiForm
                deleteFn={[Function]}
                dispatchFn={[Function]}
                documents={Array []}
                isRequired={true}
                t={[Function]}
                text="Commercial Invoice"
                theme={
                  Object {
                    "colors": Object {
                      "primary": "#333",
                      "secondary": "#fafafa",
                    },
                  }
                }
                tooltip=""
                type="commercial_invoice"
                uploadFn={null}
              />
            </div>
          </div>
          <div
            className="flex-100 layout-row layout-align-start-start layout-wrap"
          >
            <div
              className="flex-100 layout-row layout-align-start-start layout-wrap"
            >
              <div
                className="flex-100"
              >
                <div
                  className="flex-none f_header"
                >
                   
                  <TextHeading
                    color=""
                    size={3}
                    text="Notes (Optional)"
                    theme={
                      Object {
                        "colors": Object {
                          "primary": "#333",
                          "secondary": "#fafafa",
                        },
                      }
                    }
                  />
                </div>
              </div>
              <div
                className="flex-100 layout-row layout-align-start-start input_box_full"
              >
                <Formsy(FormsyTextarea)
                  className="flex-100 cargo_text_area "
                  errorMessageStyles={
                    Object {
                      "bottom": "-17px",
                      "fontSize": "13px",
                    }
                  }
                  innerRef={[Function]}
                  name="notes"
                  onBlur={[Function]}
                  required={false}
                  submitAttempted={false}
                  type="textarea"
                  validationError=""
                  validationErrors={Object {}}
                  validations={null}
                  value="NOTES"
                  wrapperClassName="flex-100 wrapper_cargo_input"
                />
              </div>
            </div>
            <div
              className="flex-gt-sm-100 layout-row layout-align-start-start layout-wrap"
            >
              <div
                className=" flex-100 layout-row layout-align-start-start-space-around layout-wrap"
              >
                <DocumentsMultiForm
                  deleteFn={[Function]}
                  dispatchFn={[Function]}
                  documents={Array []}
                  t={[Function]}
                  text="Miscellaneous"
                  theme={
                    Object {
                      "colors": Object {
                        "primary": "#333",
                        "secondary": "#fafafa",
                      },
                    }
                  }
                  tooltip=""
                  type="miscellaneous"
                  uploadFn={null}
                />
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <div
    className="insurance_customs_sec flex-100 layout-row layout-wrap layout-align-center"
  >
    <div
      className="flex-100 layout-row layout-align-center padd_top"
    >
      <div
        className="flex-none content_width layout-row layout-wrap section_padding"
      >
        <div
          className="flex-100 layout-row layout-align-space-between-start"
        >
          <div
            className="flex-none layout-row layout-align-space-around-center"
          >
            <TextHeading
              color=""
              size={2}
              text="Insurance"
              theme={
                Object {
                  "colors": Object {
                    "primary": "#333",
                    "secondary": "#fafafa",
                  },
                }
              }
            />
          </div>
          <div
            className="flex-33 layout-row layout-align-space-around-center layout-wrap"
          >
            <div
              className="flex-100 layout-row layout-wrap layout-align-end-center"
            >
              <div
                className="flex-90 layout-row layout-align-start-center"
              >
                <label
                  className="pointy"
                  htmlFor="yes_insurance"
                >
                  Yes, I want TENANT_NAME to quote insurance for my cargo
                </label>
              </div>
              <div
                className="flex-10 layout-row layout-align-end-center"
              >
                <Checkbox
                  checked={true}
                  className="ccb_yes_insurance"
                  disabled={false}
                  id="yes_insurance"
                  onChange={[Function]}
                  onClick={null}
                  size={null}
                  theme={
                    Object {
                      "colors": Object {
                        "primary": "#333",
                        "secondary": "#fafafa",
                      },
                    }
                  }
                />
              </div>
            </div>
            <div
              className="flex-100 layout-row layout-align-end-center"
            >
              <div
                className="flex-90 layout-row layout-align-start-center"
              >
                <label
                  className="pointy"
                  htmlFor="no_insurance"
                >
                  No, I do not want TENANT_NAME to quote insurance for my cargo
                </label>
              </div>
              <div
                className="flex-10 layout-row layout-align-end-center"
              >
                <Checkbox
                  checked={false}
                  className="ccb_no_insurance"
                  disabled={false}
                  id="no_insurance"
                  onChange={[Function]}
                  onClick={null}
                  size={null}
                  theme={
                    Object {
                      "colors": Object {
                        "primary": "#333",
                        "secondary": "#fafafa",
                      },
                    }
                  }
                />
              </div>
            </div>
          </div>
        </div>
        <div
          className="flex-100 layout-row layout-align-start-center"
        >
          <p
            className="flex-60 margin_5"
          >
            <b>
              Cargo Insurance provides cover on all risk terms for physical loss or damage to cargo during transport by land, sea or air.
            </b>
          </p>
        </div>
        <div
          className="flex-100 layout-row layout-align-start-center"
        >
          <p
            className="flex-60 margin_5"
          >
            <b>
              Insurance is a cost effective and simple way to cover for physical loss or damage to goods in transit.
            </b>
          </p>
        </div>
        <div
          className="flex-100 layout-row  box_content show"
        >
          <div
            className="flex-80 layout-row layout-wrap"
          >
            <p
              className="flex-90"
            >
              <strong>
                 
                A cost effective and simple way to cover for physical loss or damage to goods in transit.
              </strong>
            </p>
            <p
              className="flex-90"
            >
              Please contact your local {{tenantName}} office for more info.
            </p>
          </div>
        </div>
        <div
          className="flex-100 layout-row layout-align-start-center"
        >
          <div
            className="flex-none layout-row layout-align-center-center"
            onClick={[Function]}
          >
            <p
              className="flex-none pointy"
            >
              Read more...
            </p>
            <i
              className="flex-none offset-5 fa fa-external-link"
            />
          </div>
        </div>
      </div>
    </div>
    <div
      className="flex-100 layout-row layout-align-center padd_top"
    >
      <div
        className="flex-none content_width layout-row layout-wrap section_padding"
      >
        <div
          className="flex-100 layout-row layout-align-space-between-start layout-wrap"
        >
          <div
            className="flex-none layout-row layout-align-space-around-center"
          >
            <TextHeading
              color=""
              size={2}
              text="Customs Handling"
              theme={
                Object {
                  "colors": Object {
                    "primary": "#333",
                    "secondary": "#fafafa",
                  },
                }
              }
            />
          </div>
          <div
            className="flex-33 layout-wrap layout-row layout-align-space-around-center"
          >
            <div
              className="flex-100 layout-row layout-align-end-center"
            >
              <div
                className="flex-90 layout-row layout-align-start-center"
              >
                <label
                  className="pointy"
                  htmlFor="yes_clearance"
                >
                  Yes, I want TENANT_NAME to handle my customs clearance
                </label>
              </div>
              <div
                className="flex-10 layout-row layout-align-end-center"
              >
                <Checkbox
                  checked={null}
                  className="ccb_yes_clearance"
                  disabled={false}
                  id="yes_clearance"
                  onChange={[Function]}
                  onClick={null}
                  size={null}
                  theme={
                    Object {
                      "colors": Object {
                        "primary": "#333",
                        "secondary": "#fafafa",
                      },
                    }
                  }
                />
              </div>
            </div>
            <div
              className="flex-100 layout-row layout-align-end-center"
            >
              <div
                className="flex-90 layout-row layout-align-start-center"
              >
                <label
                  className="pointy"
                  htmlFor="no_clearance"
                >
                  No, I do not want TENANT_NAME to handle my customs clearance
                </label>
              </div>
              <div
                className="flex-10 layout-row layout-align-end-center"
              >
                <Checkbox
                  checked={null}
                  className="ccb_no_clearance"
                  disabled={false}
                  id="no_clearance"
                  onChange={[Function]}
                  onClick={null}
                  size={null}
                  theme={
                    Object {
                      "colors": Object {
                        "primary": "#333",
                        "secondary": "#fafafa",
                      },
                    }
                  }
                />
              </div>
            </div>
          </div>
        </div>
        <div
          className="flex-100 layout-row layout-wrap customs_box  box_content hidden"
        >
          <div
            className="flex-60 layout-row layout-wrap"
          >
            <p
              className="flex-90 margin_5"
            >
              <strong>
                 
                When you ship goods from outside the European Union (EU), you may be charged customs duty and/or VAT. You can either handle the customs on your own, or have it handled for you.
              </strong>
            </p>
            <p
              className="flex-90 margin_5"
            >
              To cover our costs when we present your goods to the customs authorities – and pay any customs duty or VAT due on your behalf – we charge a clearance / handling fee. The fee depends on the value of the goods you are shipping, and can be found here to the right.
            </p>
            <div
              className="flex-100 layout-row layout-align-start-start layout-wrap"
            >
              <div
                className="flex-100 layout-row layout-align-start-center"
                style={
                  Object {
                    "height": "36px",
                  }
                }
              >
                <p
                  className="flex-none"
                >
                   
                  I would like TENANT_NAME to handle:
                </p>
              </div>
              <div
                className="flex-100 layout-row layout-align-start-center layout-wrap"
                style={
                  Object {
                    "height": "36px",
                  }
                }
              >
                <div
                  className="flex-45 layout-row layout-align-space-around-center"
                  data-for="preCarriageTooltip"
                  data-tip="Export Customs is not applicable for shipments without delivery to the port (pre-carriage)."
                >
                  <p
                    className="faded_text flex-none"
                  >
                     Export Customs: 
                  </p>
                  <Checkbox
                    checked={true}
                    className=""
                    disabled={true}
                    id={null}
                    onChange={[Function]}
                    onClick={null}
                    size={null}
                    theme={
                      Object {
                        "colors": Object {
                          "primary": "#333",
                          "secondary": "#fafafa",
                        },
                      }
                    }
                  />
                </div>
                <ReactTooltip
                  className="tooltip_box"
                  effect="solid"
                  id="preCarriageTooltip"
                  insecure={true}
                  resizeHide={true}
                  wrapper="div"
                />
                <div
                  className="flex-45 layout-row layout-align-space-around-center"
                  data-for="onCarriageTooltip"
                  data-tip="Import Customs is not applicable for shipments without delivery from the port (on-carriage)."
                >
                  <p
                    className="faded_text flex-none"
                  >
                     Import Customs
                  </p>
                  <Checkbox
                    checked={true}
                    className=""
                    disabled={true}
                    id={null}
                    onChange={[Function]}
                    onClick={null}
                    size={null}
                    theme={
                      Object {
                        "colors": Object {
                          "primary": "#333",
                          "secondary": "#fafafa",
                        },
                      }
                    }
                  />
                  <ReactTooltip
                    className="tooltip_box"
                    effect="solid"
                    id="onCarriageTooltip"
                    insecure={true}
                    resizeHide={true}
                    wrapper="div"
                  />
                </div>
              </div>
              <div
                className="flex-100 no_max layout-row layout-align-start-center"
              >
                <div
                  className="flex-33 layout-row layout-wrap"
                >
                  <div
                    className="flex-100"
                  >
                    <TextHeading
                      Comp={
                        <b
                          style={
                            Object {
                              "fontSize": ".83em",
                              "fontWeight": "normal",
                            }
                          }
                        >
                          (
                          if applicable
                          )
                        </b>
                      }
                      color=""
                      size={3}
                      text="EORI"
                      theme={
                        Object {
                          "colors": Object {
                            "primary": "#333",
                            "secondary": "#fafafa",
                          },
                        }
                      }
                    />
                  </div>
                  <div
                    className="flex-100 input_box"
                  >
                    <input
                      className="EORI_input"
                      name="eori"
                      onChange={[Function]}
                      placeholder="Type in EORI number"
                      type="text"
                      value="EORI"
                    />
                  </div>
                </div>
              </div>
            </div>
          </div>
          <div
            className=" prices flex-20 layout-row layout-wrap layout-align-start-start"
          >
            <div
              className="customs_prices flex-100 layout-row  layout-align-end-center"
            >
              <p
                className="flex-none"
              >
                Import
              </p>
              <h6
                className="flex-none center"
              >
                 
                Price subject to local regulations
              </h6>
            </div>
            <div
              className="customs_prices flex-100 layout-row  layout-align-end-center"
            >
              <p
                className="flex-none"
              >
                Export
              </p>
              <h6
                className="flex-none center"
              >
                 
                100.00 EUR
              </h6>
            </div>
            <div
              className="customs_total flex-100 layout-row  layout-align-end-center"
            >
              <p
                className="flex-none"
              >
                Total
              </p>
              <h6
                className="flex-none center"
              >
                 
                NaN EUR
              </h6>
            </div>
          </div>
        </div>
        <div
          className="flex-100 layout-row layout-align-start-center layout-wrap no_customs_box show"
        >
          <div
            className="flex-60 layout-row layout-align-start-center layout-wrap"
          >
            <p
              className="flex-100 margin_5"
            >
              <b>
                A customs declaration is mandatory to pass a national border when exporting or importing. If you choose to handle the customs clearance on your own, TENANT_NAME will need a copy of the customs declaration.
              </b>
            </p>
            <p
              className="flex-100 margin_5"
            >
              <b>
                When you ship goods from outside the European Union (EU), you may be charged customs duty and/or VAT according to local regulations.
              </b>
            </p>
          </div>
          <div
            className="flex-33 no_max layout-row layout-align-end-center"
          />
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`tenant.scope.customs_export_paper is false 1`] = `
<div
  className="flex-100 layout-row layout-wrap padd_top"
  name="cargoDetailsBox"
>
  <div
    className="flex-100 layout-row layout-align-center"
  >
    <div
      className="flex-none content_width layout-row layout-wrap"
    >
      <div
        className="flex-100 layout-row layout-sm-wrap"
      >
        <div
          className="flex-50"
        >
          <div
            className="flex-100"
          >
            <div
              className="flex-100 layout-align-start-center layout-row"
            >
              <div
                className="flex-none"
              >
                <TextHeading
                  color=""
                  size={2}
                  text="Cargo Details"
                  theme={
                    Object {
                      "colors": Object {
                        "primary": "#333",
                        "secondary": "#fafafa",
                      },
                    }
                  }
                />
              </div>
            </div>
             
            <div
              className="flex-none"
            >
              <TextHeading
                color=""
                size={3}
                text="Total value of goods"
                theme={
                  Object {
                    "colors": Object {
                      "primary": "#333",
                      "secondary": "#fafafa",
                    },
                  }
                }
              />
            </div>
          </div>
          <div
            className="flex-100 layout-row layout-wrap layout-align-start-start"
          >
            <div
              className="flex-100 layout-row layout-wrap"
            >
              <div
                className="flex-100 layout-row"
              >
                <div
                  className="flex-66 layout-row"
                >
                  <Formsy(FormsyInput)
                    className="flex-100 ccb_total_goods_value cargo_input "
                    errorMessageStyles={
                      Object {
                        "bottom": "-17px",
                        "fontSize": "13px",
                      }
                    }
                    innerRef={[Function]}
                    name="totalGoodsValue"
                    onBlur={[Function]}
                    required={3370}
                    submitAttempted={false}
                    type="number"
                    validationError=""
                    validationErrors={
                      Object {
                        "isDefaultRequiredValue": "Must be greater than 0",
                        "nonNegative": "Must be greater than 0",
                      }
                    }
                    validations={
                      Object {
                        "nonNegative": [Function],
                      }
                    }
                    value={11}
                    wrapperClassName="flex-100 wrapper_cargo_input"
                  />
                </div>
                <div
                  className="flex-33 layout-row"
                >
                  <NamedSelect
                    className="flex-100 ccb_currency"
                    clearable={false}
                    onChange={[Function]}
                    options={
                      Array [
                        Object {
                          "label": "EUR",
                          "value": "EUR",
                        },
                        Object {
                          "label": "AUD",
                          "value": "AUD",
                        },
                        Object {
                          "label": "BGN",
                          "value": "BGN",
                        },
                        Object {
                          "label": "BRL",
                          "value": "BRL",
                        },
                        Object {
                          "label": "CAD",
                          "value": "CAD",
                        },
                        Object {
                          "label": "CHF",
                          "value": "CHF",
                        },
                        Object {
                          "label": "CNY",
                          "value": "CNY",
                        },
                        Object {
                          "label": "CZK",
                          "value": "CZK",
                        },
                        Object {
                          "label": "DKK",
                          "value": "DKK",
                        },
                        Object {
                          "label": "GBP",
                          "value": "GBP",
                        },
                        Object {
                          "label": "HKD",
                          "value": "HKD",
                        },
                        Object {
                          "label": "HRK",
                          "value": "HRK",
                        },
                        Object {
                          "label": "HUF",
                          "value": "HUF",
                        },
                        Object {
                          "label": "IDR",
                          "value": "IDR",
                        },
                        Object {
                          "label": "ILS",
                          "value": "ILS",
                        },
                        Object {
                          "label": "INR",
                          "value": "INR",
                        },
                        Object {
                          "label": "JPY",
                          "value": "JPY",
                        },
                        Object {
                          "label": "KRW",
                          "value": "KRW",
                        },
                        Object {
                          "label": "MXN",
                          "value": "MXN",
                        },
                        Object {
                          "label": "MYR",
                          "value": "MYR",
                        },
                        Object {
                          "label": "NOK",
                          "value": "NOK",
                        },
                        Object {
                          "label": "NZD",
                          "value": "NZD",
                        },
                        Object {
                          "label": "PHP",
                          "value": "PHP",
                        },
                        Object {
                          "label": "PLN",
                          "value": "PLN",
                        },
                        Object {
                          "label": "RON",
                          "value": "RON",
                        },
                        Object {
                          "label": "RUB",
                          "value": "RUB",
                        },
                        Object {
                          "label": "SEK",
                          "value": "SEK",
                        },
                        Object {
                          "label": "SGD",
                          "value": "SGD",
                        },
                        Object {
                          "label": "THB",
                          "value": "THB",
                        },
                        Object {
                          "label": "TRY",
                          "value": "TRY",
                        },
                        Object {
                          "label": "USD",
                          "value": "USD",
                        },
                        Object {
                          "label": "ZAR",
                          "value": "ZAR",
                        },
                      ]
                    }
                    value={
                      Object {
                        "label": "EUR",
                        "value": "EUR",
                      }
                    }
                  />
                </div>
              </div>
            </div>
            <div
              className="flex-100 layout-row layout-wrap"
              id="cargo_notes"
            >
              <div
                className="flex-100"
              >
                <div
                  className="flex-none f_header"
                >
                   
                  <TextHeading
                    color=""
                    size={3}
                    text="Description of Goods (HS Codes if available)"
                    theme={
                      Object {
                        "colors": Object {
                          "primary": "#333",
                          "secondary": "#fafafa",
                        },
                      }
                    }
                  />
                </div>
              </div>
              <div
                className="flex-100"
              >
                <Formsy(FormsyTextarea)
                  className="flex-100 ccb_description_goods cargo_text_area "
                  errorMessageStyles={
                    Object {
                      "bottom": "-17px",
                      "fontSize": "13px",
                    }
                  }
                  innerRef={[Function]}
                  name="cargoNotes"
                  onBlur={[Function]}
                  required="MANDATORY_FIELDS_DESCRIPTION"
                  submitAttempted={false}
                  type="textarea"
                  validationError=""
                  validationErrors={
                    Object {
                      "isDefaultRequiredValue": "Must not be empty",
                    }
                  }
                  validations={null}
                  value="CARGO_NOTES"
                  wrapperClassName="flex-100 wrapper_cargo_input"
                />
              </div>
            </div>
            <div
              className="flex-100 layout-row layout-align-start-start layout-wrap"
            >
              <div
                className="flex-100"
              >
                <div
                  className="flex-none f_header"
                >
                   
                  <h4
                    className="no_m flex-30"
                  >
                    Incoterms
                     
                    <span>
                      (Optional)
                    </span>
                  </h4>
                  <p
                    className="pointy flex-none incoterm_info"
                    onClick={[Function]}
                  >
                    More info
                  </p>
                </div>
              </div>
              <div
                className="flex-100 layout-row layout-align-start-start input_box_full"
              >
                <Formsy(FormsyTextarea)
                  className="flex-100 cargo_text_area "
                  errorMessageStyles={
                    Object {
                      "bottom": "-17px",
                      "fontSize": "13px",
                    }
                  }
                  innerRef={[Function]}
                  name="incotermText"
                  onBlur={[Function]}
                  required={false}
                  submitAttempted={false}
                  type="textarea"
                  validationError=""
                  validationErrors={Object {}}
                  validations={null}
                  value=""
                  wrapperClassName="flex-100 wrapper_cargo_input"
                />
              </div>
            </div>
          </div>
        </div>
        <div
          className="flex-50 padding_left offset-gt-sm-5 layout-row layout-wrap layout-align-start-start"
        >
          <div
            className="flex-100 layout-align-start-center layout-row"
          >
            <div
              className="flex-none"
            >
              <TextHeading
                color=""
                size={2}
                text="Shipment Documents "
                theme={
                  Object {
                    "colors": Object {
                      "primary": "#333",
                      "secondary": "#fafafa",
                    },
                  }
                }
              />
              <br />
              (
              if available
              )
            </div>
          </div>
          <div
            className="flex-100 layout-row layout-wrap"
            name="packing_sheet"
          >
            <div
              className="flex-100 layout-row margin_5"
            >
              <DocumentsMultiForm
                deleteFn={[Function]}
                dispatchFn={[Function]}
                documents={Array []}
                isRequired={true}
                t={[Function]}
                text="Packing List"
                theme={
                  Object {
                    "colors": Object {
                      "primary": "#333",
                      "secondary": "#fafafa",
                    },
                  }
                }
                tooltip=""
                type="packing_sheet"
                uploadFn={null}
              />
            </div>
          </div>
          <div
            className="flex-100 layout-row layout-wrap"
            name="commercial_invoice"
          >
            <div
              className="flex-100 layout-row margin_5"
            >
              <DocumentsMultiForm
                deleteFn={[Function]}
                dispatchFn={[Function]}
                documents={Array []}
                isRequired={true}
                t={[Function]}
                text="Commercial Invoice"
                theme={
                  Object {
                    "colors": Object {
                      "primary": "#333",
                      "secondary": "#fafafa",
                    },
                  }
                }
                tooltip=""
                type="commercial_invoice"
                uploadFn={null}
              />
            </div>
          </div>
          <div
            className="flex-100 layout-row layout-align-start-start layout-wrap"
          >
            <div
              className="flex-100 layout-row layout-align-start-start layout-wrap"
            >
              <div
                className="flex-100"
              >
                <div
                  className="flex-none f_header"
                >
                   
                  <TextHeading
                    color=""
                    size={3}
                    text="Notes (Optional)"
                    theme={
                      Object {
                        "colors": Object {
                          "primary": "#333",
                          "secondary": "#fafafa",
                        },
                      }
                    }
                  />
                </div>
              </div>
              <div
                className="flex-100 layout-row layout-align-start-start input_box_full"
              >
                <Formsy(FormsyTextarea)
                  className="flex-100 cargo_text_area "
                  errorMessageStyles={
                    Object {
                      "bottom": "-17px",
                      "fontSize": "13px",
                    }
                  }
                  innerRef={[Function]}
                  name="notes"
                  onBlur={[Function]}
                  required={false}
                  submitAttempted={false}
                  type="textarea"
                  validationError=""
                  validationErrors={Object {}}
                  validations={null}
                  value="NOTES"
                  wrapperClassName="flex-100 wrapper_cargo_input"
                />
              </div>
            </div>
            <div
              className="flex-gt-sm-100 layout-row layout-align-start-start layout-wrap"
            >
              <div
                className=" flex-100 layout-row layout-align-start-start-space-around layout-wrap"
              >
                <DocumentsMultiForm
                  deleteFn={[Function]}
                  dispatchFn={[Function]}
                  documents={Array []}
                  t={[Function]}
                  text="Miscellaneous"
                  theme={
                    Object {
                      "colors": Object {
                        "primary": "#333",
                        "secondary": "#fafafa",
                      },
                    }
                  }
                  tooltip=""
                  type="miscellaneous"
                  uploadFn={null}
                />
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <div
    className="insurance_customs_sec flex-100 layout-row layout-wrap layout-align-center"
  >
    <div
      className="flex-100 layout-row layout-align-center padd_top"
    >
      <div
        className="flex-none content_width layout-row layout-wrap section_padding"
      >
        <div
          className="flex-100 layout-row layout-align-space-between-start"
        >
          <div
            className="flex-none layout-row layout-align-space-around-center"
          >
            <TextHeading
              color=""
              size={2}
              text="Insurance"
              theme={
                Object {
                  "colors": Object {
                    "primary": "#333",
                    "secondary": "#fafafa",
                  },
                }
              }
            />
          </div>
          <div
            className="flex-33 layout-row layout-align-space-around-center layout-wrap"
          >
            <div
              className="flex-100 layout-row layout-wrap layout-align-end-center"
            >
              <div
                className="flex-90 layout-row layout-align-start-center"
              >
                <label
                  className="pointy"
                  htmlFor="yes_insurance"
                >
                  Yes, I want TENANT_NAME to quote insurance for my cargo
                </label>
              </div>
              <div
                className="flex-10 layout-row layout-align-end-center"
              >
                <Checkbox
                  checked={true}
                  className="ccb_yes_insurance"
                  disabled={false}
                  id="yes_insurance"
                  onChange={[Function]}
                  onClick={null}
                  size={null}
                  theme={
                    Object {
                      "colors": Object {
                        "primary": "#333",
                        "secondary": "#fafafa",
                      },
                    }
                  }
                />
              </div>
            </div>
            <div
              className="flex-100 layout-row layout-align-end-center"
            >
              <div
                className="flex-90 layout-row layout-align-start-center"
              >
                <label
                  className="pointy"
                  htmlFor="no_insurance"
                >
                  No, I do not want TENANT_NAME to quote insurance for my cargo
                </label>
              </div>
              <div
                className="flex-10 layout-row layout-align-end-center"
              >
                <Checkbox
                  checked={false}
                  className="ccb_no_insurance"
                  disabled={false}
                  id="no_insurance"
                  onChange={[Function]}
                  onClick={null}
                  size={null}
                  theme={
                    Object {
                      "colors": Object {
                        "primary": "#333",
                        "secondary": "#fafafa",
                      },
                    }
                  }
                />
              </div>
            </div>
          </div>
        </div>
        <div
          className="flex-100 layout-row layout-align-start-center"
        >
          <p
            className="flex-60 margin_5"
          >
            <b>
              Cargo Insurance provides cover on all risk terms for physical loss or damage to cargo during transport by land, sea or air.
            </b>
          </p>
        </div>
        <div
          className="flex-100 layout-row layout-align-start-center"
        >
          <p
            className="flex-60 margin_5"
          >
            <b>
              Insurance is a cost effective and simple way to cover for physical loss or damage to goods in transit.
            </b>
          </p>
        </div>
        <div
          className="flex-100 layout-row  box_content show"
        >
          <div
            className="flex-80 layout-row layout-wrap"
          >
            <p
              className="flex-90"
            >
              <strong>
                 
                A cost effective and simple way to cover for physical loss or damage to goods in transit.
              </strong>
            </p>
            <p
              className="flex-90"
            >
              Please contact your local {{tenantName}} office for more info.
            </p>
          </div>
        </div>
        <div
          className="flex-100 layout-row layout-align-start-center"
        >
          <div
            className="flex-none layout-row layout-align-center-center"
            onClick={[Function]}
          >
            <p
              className="flex-none pointy"
            >
              Read more...
            </p>
            <i
              className="flex-none offset-5 fa fa-external-link"
            />
          </div>
        </div>
      </div>
    </div>
    <div
      className="flex-100 layout-row layout-align-center padd_top"
    >
      <div
        className="flex-none content_width layout-row layout-wrap section_padding"
      >
        <div
          className="flex-100 layout-row layout-align-space-between-start layout-wrap"
        >
          <div
            className="flex-none layout-row layout-align-space-around-center"
          >
            <TextHeading
              color=""
              size={2}
              text="Customs Handling"
              theme={
                Object {
                  "colors": Object {
                    "primary": "#333",
                    "secondary": "#fafafa",
                  },
                }
              }
            />
          </div>
          <div
            className="flex-33 layout-wrap layout-row layout-align-space-around-center"
          >
            <div
              className="flex-100 layout-row layout-align-end-center"
            >
              <div
                className="flex-90 layout-row layout-align-start-center"
              >
                <label
                  className="pointy"
                  htmlFor="yes_clearance"
                >
                  Yes, I want TENANT_NAME to handle my customs clearance
                </label>
              </div>
              <div
                className="flex-10 layout-row layout-align-end-center"
              >
                <Checkbox
                  checked={null}
                  className="ccb_yes_clearance"
                  disabled={false}
                  id="yes_clearance"
                  onChange={[Function]}
                  onClick={null}
                  size={null}
                  theme={
                    Object {
                      "colors": Object {
                        "primary": "#333",
                        "secondary": "#fafafa",
                      },
                    }
                  }
                />
              </div>
            </div>
            <div
              className="flex-100 layout-row layout-align-end-center"
            >
              <div
                className="flex-90 layout-row layout-align-start-center"
              >
                <label
                  className="pointy"
                  htmlFor="no_clearance"
                >
                  No, I do not want TENANT_NAME to handle my customs clearance
                </label>
              </div>
              <div
                className="flex-10 layout-row layout-align-end-center"
              >
                <Checkbox
                  checked={null}
                  className="ccb_no_clearance"
                  disabled={false}
                  id="no_clearance"
                  onChange={[Function]}
                  onClick={null}
                  size={null}
                  theme={
                    Object {
                      "colors": Object {
                        "primary": "#333",
                        "secondary": "#fafafa",
                      },
                    }
                  }
                />
              </div>
            </div>
          </div>
        </div>
        <div
          className="flex-100 layout-row layout-wrap customs_box  box_content hidden"
        >
          <div
            className="flex-60 layout-row layout-wrap"
          >
            <p
              className="flex-90 margin_5"
            >
              <strong>
                 
                When you ship goods from outside the European Union (EU), you may be charged customs duty and/or VAT. You can either handle the customs on your own, or have it handled for you.
              </strong>
            </p>
            <p
              className="flex-90 margin_5"
            >
              To cover our costs when we present your goods to the customs authorities – and pay any customs duty or VAT due on your behalf – we charge a clearance / handling fee. The fee depends on the value of the goods you are shipping, and can be found here to the right.
            </p>
            <div
              className="flex-100 layout-row layout-align-start-start layout-wrap"
            >
              <div
                className="flex-100 layout-row layout-align-start-center"
                style={
                  Object {
                    "height": "36px",
                  }
                }
              >
                <p
                  className="flex-none"
                >
                   
                  I would like TENANT_NAME to handle:
                </p>
              </div>
              <div
                className="flex-100 layout-row layout-align-start-center layout-wrap"
                style={
                  Object {
                    "height": "36px",
                  }
                }
              >
                <div
                  className="flex-45 layout-row layout-align-space-around-center"
                  data-for="preCarriageTooltip"
                  data-tip="Export Customs is not applicable for shipments without delivery to the port (pre-carriage)."
                >
                  <p
                    className="faded_text flex-none"
                  >
                     Export Customs: 
                  </p>
                  <Checkbox
                    checked={true}
                    className=""
                    disabled={true}
                    id={null}
                    onChange={[Function]}
                    onClick={null}
                    size={null}
                    theme={
                      Object {
                        "colors": Object {
                          "primary": "#333",
                          "secondary": "#fafafa",
                        },
                      }
                    }
                  />
                </div>
                <ReactTooltip
                  className="tooltip_box"
                  effect="solid"
                  id="preCarriageTooltip"
                  insecure={true}
                  resizeHide={true}
                  wrapper="div"
                />
                <div
                  className="flex-45 layout-row layout-align-space-around-center"
                  data-for="onCarriageTooltip"
                  data-tip="Import Customs is not applicable for shipments without delivery from the port (on-carriage)."
                >
                  <p
                    className="faded_text flex-none"
                  >
                     Import Customs
                  </p>
                  <Checkbox
                    checked={true}
                    className=""
                    disabled={true}
                    id={null}
                    onChange={[Function]}
                    onClick={null}
                    size={null}
                    theme={
                      Object {
                        "colors": Object {
                          "primary": "#333",
                          "secondary": "#fafafa",
                        },
                      }
                    }
                  />
                  <ReactTooltip
                    className="tooltip_box"
                    effect="solid"
                    id="onCarriageTooltip"
                    insecure={true}
                    resizeHide={true}
                    wrapper="div"
                  />
                </div>
              </div>
              <div
                className="flex-100 no_max layout-row layout-align-start-center"
              >
                <div
                  className="flex-33 layout-row layout-wrap"
                >
                  <div
                    className="flex-100"
                  >
                    <TextHeading
                      Comp={
                        <b
                          style={
                            Object {
                              "fontSize": ".83em",
                              "fontWeight": "normal",
                            }
                          }
                        >
                          (
                          if applicable
                          )
                        </b>
                      }
                      color=""
                      size={3}
                      text="EORI"
                      theme={
                        Object {
                          "colors": Object {
                            "primary": "#333",
                            "secondary": "#fafafa",
                          },
                        }
                      }
                    />
                  </div>
                  <div
                    className="flex-100 input_box"
                  >
                    <input
                      className="EORI_input"
                      name="eori"
                      onChange={[Function]}
                      placeholder="Type in EORI number"
                      type="text"
                      value="EORI"
                    />
                  </div>
                </div>
              </div>
            </div>
          </div>
          <div
            className=" prices flex-20 layout-row layout-wrap layout-align-start-start"
          >
            <div
              className="customs_prices flex-100 layout-row  layout-align-end-center"
            >
              <p
                className="flex-none"
              >
                Import
              </p>
              <h6
                className="flex-none center"
              >
                 
                Price subject to local regulations
              </h6>
            </div>
            <div
              className="customs_prices flex-100 layout-row  layout-align-end-center"
            >
              <p
                className="flex-none"
              >
                Export
              </p>
              <h6
                className="flex-none center"
              >
                 
                100.00 EUR
              </h6>
            </div>
            <div
              className="customs_total flex-100 layout-row  layout-align-end-center"
            >
              <p
                className="flex-none"
              >
                Total
              </p>
              <h6
                className="flex-none center"
              >
                 
                NaN EUR
              </h6>
            </div>
          </div>
        </div>
        <div
          className="flex-100 layout-row layout-align-start-center layout-wrap no_customs_box show"
        >
          <div
            className="flex-60 layout-row layout-align-start-center layout-wrap"
          >
            <p
              className="flex-100 margin_5"
            >
              <b>
                A customs declaration is mandatory to pass a national border when exporting or importing. If you choose to handle the customs clearance on your own, TENANT_NAME will need a copy of the customs declaration.
              </b>
            </p>
            <p
              className="flex-100 margin_5"
            >
              <b>
                When you ship goods from outside the European Union (EU), you may be charged customs duty and/or VAT according to local regulations.
              </b>
            </p>
          </div>
          <div
            className="flex-33 no_max layout-row layout-align-end-center"
          />
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`tenant.scope.has_customs is false 1`] = `
<div
  className="flex-100 layout-row layout-wrap padd_top"
  name="cargoDetailsBox"
>
  <div
    className="flex-100 layout-row layout-align-center"
  >
    <div
      className="flex-none content_width layout-row layout-wrap"
    >
      <div
        className="flex-100 layout-row layout-sm-wrap"
      >
        <div
          className="flex-50"
        >
          <div
            className="flex-100"
          >
            <div
              className="flex-100 layout-align-start-center layout-row"
            >
              <div
                className="flex-none"
              >
                <TextHeading
                  color=""
                  size={2}
                  text="Cargo Details"
                  theme={
                    Object {
                      "colors": Object {
                        "primary": "#333",
                        "secondary": "#fafafa",
                      },
                    }
                  }
                />
              </div>
            </div>
             
            <div
              className="flex-none"
            >
              <TextHeading
                color=""
                size={3}
                text="Total value of goods"
                theme={
                  Object {
                    "colors": Object {
                      "primary": "#333",
                      "secondary": "#fafafa",
                    },
                  }
                }
              />
            </div>
          </div>
          <div
            className="flex-100 layout-row layout-wrap layout-align-start-start"
          >
            <div
              className="flex-100 layout-row layout-wrap"
            >
              <div
                className="flex-100 layout-row"
              >
                <div
                  className="flex-66 layout-row"
                >
                  <Formsy(FormsyInput)
                    className="flex-100 ccb_total_goods_value cargo_input "
                    errorMessageStyles={
                      Object {
                        "bottom": "-17px",
                        "fontSize": "13px",
                      }
                    }
                    innerRef={[Function]}
                    name="totalGoodsValue"
                    onBlur={[Function]}
                    required={3370}
                    submitAttempted={false}
                    type="number"
                    validationError=""
                    validationErrors={
                      Object {
                        "isDefaultRequiredValue": "Must be greater than 0",
                        "nonNegative": "Must be greater than 0",
                      }
                    }
                    validations={
                      Object {
                        "nonNegative": [Function],
                      }
                    }
                    value={11}
                    wrapperClassName="flex-100 wrapper_cargo_input"
                  />
                </div>
                <div
                  className="flex-33 layout-row"
                >
                  <NamedSelect
                    className="flex-100 ccb_currency"
                    clearable={false}
                    onChange={[Function]}
                    options={
                      Array [
                        Object {
                          "label": "EUR",
                          "value": "EUR",
                        },
                        Object {
                          "label": "AUD",
                          "value": "AUD",
                        },
                        Object {
                          "label": "BGN",
                          "value": "BGN",
                        },
                        Object {
                          "label": "BRL",
                          "value": "BRL",
                        },
                        Object {
                          "label": "CAD",
                          "value": "CAD",
                        },
                        Object {
                          "label": "CHF",
                          "value": "CHF",
                        },
                        Object {
                          "label": "CNY",
                          "value": "CNY",
                        },
                        Object {
                          "label": "CZK",
                          "value": "CZK",
                        },
                        Object {
                          "label": "DKK",
                          "value": "DKK",
                        },
                        Object {
                          "label": "GBP",
                          "value": "GBP",
                        },
                        Object {
                          "label": "HKD",
                          "value": "HKD",
                        },
                        Object {
                          "label": "HRK",
                          "value": "HRK",
                        },
                        Object {
                          "label": "HUF",
                          "value": "HUF",
                        },
                        Object {
                          "label": "IDR",
                          "value": "IDR",
                        },
                        Object {
                          "label": "ILS",
                          "value": "ILS",
                        },
                        Object {
                          "label": "INR",
                          "value": "INR",
                        },
                        Object {
                          "label": "JPY",
                          "value": "JPY",
                        },
                        Object {
                          "label": "KRW",
                          "value": "KRW",
                        },
                        Object {
                          "label": "MXN",
                          "value": "MXN",
                        },
                        Object {
                          "label": "MYR",
                          "value": "MYR",
                        },
                        Object {
                          "label": "NOK",
                          "value": "NOK",
                        },
                        Object {
                          "label": "NZD",
                          "value": "NZD",
                        },
                        Object {
                          "label": "PHP",
                          "value": "PHP",
                        },
                        Object {
                          "label": "PLN",
                          "value": "PLN",
                        },
                        Object {
                          "label": "RON",
                          "value": "RON",
                        },
                        Object {
                          "label": "RUB",
                          "value": "RUB",
                        },
                        Object {
                          "label": "SEK",
                          "value": "SEK",
                        },
                        Object {
                          "label": "SGD",
                          "value": "SGD",
                        },
                        Object {
                          "label": "THB",
                          "value": "THB",
                        },
                        Object {
                          "label": "TRY",
                          "value": "TRY",
                        },
                        Object {
                          "label": "USD",
                          "value": "USD",
                        },
                        Object {
                          "label": "ZAR",
                          "value": "ZAR",
                        },
                      ]
                    }
                    value={
                      Object {
                        "label": "EUR",
                        "value": "EUR",
                      }
                    }
                  />
                </div>
              </div>
            </div>
            <div
              className="flex-100 layout-row layout-wrap"
              id="cargo_notes"
            >
              <div
                className="flex-100"
              >
                <div
                  className="flex-none f_header"
                >
                   
                  <TextHeading
                    color=""
                    size={3}
                    text="Description of Goods (HS Codes if available)"
                    theme={
                      Object {
                        "colors": Object {
                          "primary": "#333",
                          "secondary": "#fafafa",
                        },
                      }
                    }
                  />
                </div>
              </div>
              <div
                className="flex-100"
              >
                <Formsy(FormsyTextarea)
                  className="flex-100 ccb_description_goods cargo_text_area "
                  errorMessageStyles={
                    Object {
                      "bottom": "-17px",
                      "fontSize": "13px",
                    }
                  }
                  innerRef={[Function]}
                  name="cargoNotes"
                  onBlur={[Function]}
                  required="MANDATORY_FIELDS_DESCRIPTION"
                  submitAttempted={false}
                  type="textarea"
                  validationError=""
                  validationErrors={
                    Object {
                      "isDefaultRequiredValue": "Must not be empty",
                    }
                  }
                  validations={null}
                  value="CARGO_NOTES"
                  wrapperClassName="flex-100 wrapper_cargo_input"
                />
              </div>
            </div>
            <div
              className="flex-100 layout-row layout-align-start-start layout-wrap"
            >
              <div
                className="flex-100"
              >
                <div
                  className="flex-none f_header"
                >
                   
                  <h4
                    className="no_m flex-30"
                  >
                    Incoterms
                     
                    <span>
                      (Optional)
                    </span>
                  </h4>
                  <p
                    className="pointy flex-none incoterm_info"
                    onClick={[Function]}
                  >
                    More info
                  </p>
                </div>
              </div>
              <div
                className="flex-100 layout-row layout-align-start-start input_box_full"
              >
                <Formsy(FormsyTextarea)
                  className="flex-100 cargo_text_area "
                  errorMessageStyles={
                    Object {
                      "bottom": "-17px",
                      "fontSize": "13px",
                    }
                  }
                  innerRef={[Function]}
                  name="incotermText"
                  onBlur={[Function]}
                  required={false}
                  submitAttempted={false}
                  type="textarea"
                  validationError=""
                  validationErrors={Object {}}
                  validations={null}
                  value=""
                  wrapperClassName="flex-100 wrapper_cargo_input"
                />
              </div>
            </div>
          </div>
        </div>
        <div
          className="flex-50 padding_left offset-gt-sm-5 layout-row layout-wrap layout-align-start-start"
        >
          <div
            className="flex-100 layout-align-start-center layout-row"
          >
            <div
              className="flex-none"
            >
              <TextHeading
                color=""
                size={2}
                text="Shipment Documents "
                theme={
                  Object {
                    "colors": Object {
                      "primary": "#333",
                      "secondary": "#fafafa",
                    },
                  }
                }
              />
              <br />
              (
              if available
              )
            </div>
          </div>
          <div
            className="flex-100 layout-row layout-wrap"
            name="packing_sheet"
          >
            <div
              className="flex-100 layout-row margin_5"
            >
              <DocumentsMultiForm
                deleteFn={[Function]}
                dispatchFn={[Function]}
                documents={Array []}
                isRequired={true}
                t={[Function]}
                text="Packing List"
                theme={
                  Object {
                    "colors": Object {
                      "primary": "#333",
                      "secondary": "#fafafa",
                    },
                  }
                }
                tooltip=""
                type="packing_sheet"
                uploadFn={null}
              />
            </div>
          </div>
          <div
            className="flex-100 layout-row layout-wrap"
            name="commercial_invoice"
          >
            <div
              className="flex-100 layout-row margin_5"
            >
              <DocumentsMultiForm
                deleteFn={[Function]}
                dispatchFn={[Function]}
                documents={Array []}
                isRequired={true}
                t={[Function]}
                text="Commercial Invoice"
                theme={
                  Object {
                    "colors": Object {
                      "primary": "#333",
                      "secondary": "#fafafa",
                    },
                  }
                }
                tooltip=""
                type="commercial_invoice"
                uploadFn={null}
              />
            </div>
          </div>
          <div
            className="flex-100 layout-row layout-align-start-start layout-wrap"
          >
            <div
              className="flex-100 layout-row layout-align-start-start layout-wrap"
            >
              <div
                className="flex-100"
              >
                <div
                  className="flex-none f_header"
                >
                   
                  <TextHeading
                    color=""
                    size={3}
                    text="Notes (Optional)"
                    theme={
                      Object {
                        "colors": Object {
                          "primary": "#333",
                          "secondary": "#fafafa",
                        },
                      }
                    }
                  />
                </div>
              </div>
              <div
                className="flex-100 layout-row layout-align-start-start input_box_full"
              >
                <Formsy(FormsyTextarea)
                  className="flex-100 cargo_text_area "
                  errorMessageStyles={
                    Object {
                      "bottom": "-17px",
                      "fontSize": "13px",
                    }
                  }
                  innerRef={[Function]}
                  name="notes"
                  onBlur={[Function]}
                  required={false}
                  submitAttempted={false}
                  type="textarea"
                  validationError=""
                  validationErrors={Object {}}
                  validations={null}
                  value="NOTES"
                  wrapperClassName="flex-100 wrapper_cargo_input"
                />
              </div>
            </div>
            <div
              className="flex-gt-sm-100 layout-row layout-align-start-start layout-wrap"
            >
              <div
                className=" flex-100 layout-row layout-align-start-start-space-around layout-wrap"
              >
                <DocumentsMultiForm
                  deleteFn={[Function]}
                  dispatchFn={[Function]}
                  documents={Array []}
                  t={[Function]}
                  text="Miscellaneous"
                  theme={
                    Object {
                      "colors": Object {
                        "primary": "#333",
                        "secondary": "#fafafa",
                      },
                    }
                  }
                  tooltip=""
                  type="miscellaneous"
                  uploadFn={null}
                />
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <div
    className="insurance_customs_sec flex-100 layout-row layout-wrap layout-align-center"
  >
    <div
      className="flex-100 layout-row layout-align-center padd_top"
    >
      <div
        className="flex-none content_width layout-row layout-wrap section_padding"
      >
        <div
          className="flex-100 layout-row layout-align-space-between-start"
        >
          <div
            className="flex-none layout-row layout-align-space-around-center"
          >
            <TextHeading
              color=""
              size={2}
              text="Insurance"
              theme={
                Object {
                  "colors": Object {
                    "primary": "#333",
                    "secondary": "#fafafa",
                  },
                }
              }
            />
          </div>
          <div
            className="flex-33 layout-row layout-align-space-around-center layout-wrap"
          >
            <div
              className="flex-100 layout-row layout-wrap layout-align-end-center"
            >
              <div
                className="flex-90 layout-row layout-align-start-center"
              >
                <label
                  className="pointy"
                  htmlFor="yes_insurance"
                >
                  Yes, I want TENANT_NAME to quote insurance for my cargo
                </label>
              </div>
              <div
                className="flex-10 layout-row layout-align-end-center"
              >
                <Checkbox
                  checked={true}
                  className="ccb_yes_insurance"
                  disabled={false}
                  id="yes_insurance"
                  onChange={[Function]}
                  onClick={null}
                  size={null}
                  theme={
                    Object {
                      "colors": Object {
                        "primary": "#333",
                        "secondary": "#fafafa",
                      },
                    }
                  }
                />
              </div>
            </div>
            <div
              className="flex-100 layout-row layout-align-end-center"
            >
              <div
                className="flex-90 layout-row layout-align-start-center"
              >
                <label
                  className="pointy"
                  htmlFor="no_insurance"
                >
                  No, I do not want TENANT_NAME to quote insurance for my cargo
                </label>
              </div>
              <div
                className="flex-10 layout-row layout-align-end-center"
              >
                <Checkbox
                  checked={false}
                  className="ccb_no_insurance"
                  disabled={false}
                  id="no_insurance"
                  onChange={[Function]}
                  onClick={null}
                  size={null}
                  theme={
                    Object {
                      "colors": Object {
                        "primary": "#333",
                        "secondary": "#fafafa",
                      },
                    }
                  }
                />
              </div>
            </div>
          </div>
        </div>
        <div
          className="flex-100 layout-row layout-align-start-center"
        >
          <p
            className="flex-60 margin_5"
          >
            <b>
              Cargo Insurance provides cover on all risk terms for physical loss or damage to cargo during transport by land, sea or air.
            </b>
          </p>
        </div>
        <div
          className="flex-100 layout-row layout-align-start-center"
        >
          <p
            className="flex-60 margin_5"
          >
            <b>
              Insurance is a cost effective and simple way to cover for physical loss or damage to goods in transit.
            </b>
          </p>
        </div>
        <div
          className="flex-100 layout-row  box_content show"
        >
          <div
            className="flex-80 layout-row layout-wrap"
          >
            <p
              className="flex-90"
            >
              <strong>
                 
                A cost effective and simple way to cover for physical loss or damage to goods in transit.
              </strong>
            </p>
            <p
              className="flex-90"
            >
              Please contact your local {{tenantName}} office for more info.
            </p>
          </div>
        </div>
        <div
          className="flex-100 layout-row layout-align-start-center"
        >
          <div
            className="flex-none layout-row layout-align-center-center"
            onClick={[Function]}
          >
            <p
              className="flex-none pointy"
            >
              Read more...
            </p>
            <i
              className="flex-none offset-5 fa fa-external-link"
            />
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`tenant.scope.has_insurance is false 1`] = `
<div
  className="flex-100 layout-row layout-wrap padd_top"
  name="cargoDetailsBox"
>
  <div
    className="flex-100 layout-row layout-align-center"
  >
    <div
      className="flex-none content_width layout-row layout-wrap"
    >
      <div
        className="flex-100 layout-row layout-sm-wrap"
      >
        <div
          className="flex-50"
        >
          <div
            className="flex-100"
          >
            <div
              className="flex-100 layout-align-start-center layout-row"
            >
              <div
                className="flex-none"
              >
                <TextHeading
                  color=""
                  size={2}
                  text="Cargo Details"
                  theme={
                    Object {
                      "colors": Object {
                        "primary": "#333",
                        "secondary": "#fafafa",
                      },
                    }
                  }
                />
              </div>
            </div>
             
            <div
              className="flex-none"
            >
              <TextHeading
                color=""
                size={3}
                text="Total value of goods"
                theme={
                  Object {
                    "colors": Object {
                      "primary": "#333",
                      "secondary": "#fafafa",
                    },
                  }
                }
              />
            </div>
          </div>
          <div
            className="flex-100 layout-row layout-wrap layout-align-start-start"
          >
            <div
              className="flex-100 layout-row layout-wrap"
            >
              <div
                className="flex-100 layout-row"
              >
                <div
                  className="flex-66 layout-row"
                >
                  <Formsy(FormsyInput)
                    className="flex-100 ccb_total_goods_value cargo_input "
                    errorMessageStyles={
                      Object {
                        "bottom": "-17px",
                        "fontSize": "13px",
                      }
                    }
                    innerRef={[Function]}
                    name="totalGoodsValue"
                    onBlur={[Function]}
                    required={3370}
                    submitAttempted={false}
                    type="number"
                    validationError=""
                    validationErrors={
                      Object {
                        "isDefaultRequiredValue": "Must be greater than 0",
                        "nonNegative": "Must be greater than 0",
                      }
                    }
                    validations={
                      Object {
                        "nonNegative": [Function],
                      }
                    }
                    value={11}
                    wrapperClassName="flex-100 wrapper_cargo_input"
                  />
                </div>
                <div
                  className="flex-33 layout-row"
                >
                  <NamedSelect
                    className="flex-100 ccb_currency"
                    clearable={false}
                    onChange={[Function]}
                    options={
                      Array [
                        Object {
                          "label": "EUR",
                          "value": "EUR",
                        },
                        Object {
                          "label": "AUD",
                          "value": "AUD",
                        },
                        Object {
                          "label": "BGN",
                          "value": "BGN",
                        },
                        Object {
                          "label": "BRL",
                          "value": "BRL",
                        },
                        Object {
                          "label": "CAD",
                          "value": "CAD",
                        },
                        Object {
                          "label": "CHF",
                          "value": "CHF",
                        },
                        Object {
                          "label": "CNY",
                          "value": "CNY",
                        },
                        Object {
                          "label": "CZK",
                          "value": "CZK",
                        },
                        Object {
                          "label": "DKK",
                          "value": "DKK",
                        },
                        Object {
                          "label": "GBP",
                          "value": "GBP",
                        },
                        Object {
                          "label": "HKD",
                          "value": "HKD",
                        },
                        Object {
                          "label": "HRK",
                          "value": "HRK",
                        },
                        Object {
                          "label": "HUF",
                          "value": "HUF",
                        },
                        Object {
                          "label": "IDR",
                          "value": "IDR",
                        },
                        Object {
                          "label": "ILS",
                          "value": "ILS",
                        },
                        Object {
                          "label": "INR",
                          "value": "INR",
                        },
                        Object {
                          "label": "JPY",
                          "value": "JPY",
                        },
                        Object {
                          "label": "KRW",
                          "value": "KRW",
                        },
                        Object {
                          "label": "MXN",
                          "value": "MXN",
                        },
                        Object {
                          "label": "MYR",
                          "value": "MYR",
                        },
                        Object {
                          "label": "NOK",
                          "value": "NOK",
                        },
                        Object {
                          "label": "NZD",
                          "value": "NZD",
                        },
                        Object {
                          "label": "PHP",
                          "value": "PHP",
                        },
                        Object {
                          "label": "PLN",
                          "value": "PLN",
                        },
                        Object {
                          "label": "RON",
                          "value": "RON",
                        },
                        Object {
                          "label": "RUB",
                          "value": "RUB",
                        },
                        Object {
                          "label": "SEK",
                          "value": "SEK",
                        },
                        Object {
                          "label": "SGD",
                          "value": "SGD",
                        },
                        Object {
                          "label": "THB",
                          "value": "THB",
                        },
                        Object {
                          "label": "TRY",
                          "value": "TRY",
                        },
                        Object {
                          "label": "USD",
                          "value": "USD",
                        },
                        Object {
                          "label": "ZAR",
                          "value": "ZAR",
                        },
                      ]
                    }
                    value={
                      Object {
                        "label": "EUR",
                        "value": "EUR",
                      }
                    }
                  />
                </div>
              </div>
            </div>
            <div
              className="flex-100 layout-row layout-wrap"
              id="cargo_notes"
            >
              <div
                className="flex-100"
              >
                <div
                  className="flex-none f_header"
                >
                   
                  <TextHeading
                    color=""
                    size={3}
                    text="Description of Goods (HS Codes if available)"
                    theme={
                      Object {
                        "colors": Object {
                          "primary": "#333",
                          "secondary": "#fafafa",
                        },
                      }
                    }
                  />
                </div>
              </div>
              <div
                className="flex-100"
              >
                <Formsy(FormsyTextarea)
                  className="flex-100 ccb_description_goods cargo_text_area "
                  errorMessageStyles={
                    Object {
                      "bottom": "-17px",
                      "fontSize": "13px",
                    }
                  }
                  innerRef={[Function]}
                  name="cargoNotes"
                  onBlur={[Function]}
                  required="MANDATORY_FIELDS_DESCRIPTION"
                  submitAttempted={false}
                  type="textarea"
                  validationError=""
                  validationErrors={
                    Object {
                      "isDefaultRequiredValue": "Must not be empty",
                    }
                  }
                  validations={null}
                  value="CARGO_NOTES"
                  wrapperClassName="flex-100 wrapper_cargo_input"
                />
              </div>
            </div>
            <div
              className="flex-100 layout-row layout-align-start-start layout-wrap"
            >
              <div
                className="flex-100"
              >
                <div
                  className="flex-none f_header"
                >
                   
                  <h4
                    className="no_m flex-30"
                  >
                    Incoterms
                     
                    <span>
                      (Optional)
                    </span>
                  </h4>
                  <p
                    className="pointy flex-none incoterm_info"
                    onClick={[Function]}
                  >
                    More info
                  </p>
                </div>
              </div>
              <div
                className="flex-100 layout-row layout-align-start-start input_box_full"
              >
                <Formsy(FormsyTextarea)
                  className="flex-100 cargo_text_area "
                  errorMessageStyles={
                    Object {
                      "bottom": "-17px",
                      "fontSize": "13px",
                    }
                  }
                  innerRef={[Function]}
                  name="incotermText"
                  onBlur={[Function]}
                  required={false}
                  submitAttempted={false}
                  type="textarea"
                  validationError=""
                  validationErrors={Object {}}
                  validations={null}
                  value=""
                  wrapperClassName="flex-100 wrapper_cargo_input"
                />
              </div>
            </div>
          </div>
        </div>
        <div
          className="flex-50 padding_left offset-gt-sm-5 layout-row layout-wrap layout-align-start-start"
        >
          <div
            className="flex-100 layout-align-start-center layout-row"
          >
            <div
              className="flex-none"
            >
              <TextHeading
                color=""
                size={2}
                text="Shipment Documents "
                theme={
                  Object {
                    "colors": Object {
                      "primary": "#333",
                      "secondary": "#fafafa",
                    },
                  }
                }
              />
              <br />
              (
              if available
              )
            </div>
          </div>
          <div
            className="flex-100 layout-row layout-wrap"
            name="packing_sheet"
          >
            <div
              className="flex-100 layout-row margin_5"
            >
              <DocumentsMultiForm
                deleteFn={[Function]}
                dispatchFn={[Function]}
                documents={Array []}
                isRequired={true}
                t={[Function]}
                text="Packing List"
                theme={
                  Object {
                    "colors": Object {
                      "primary": "#333",
                      "secondary": "#fafafa",
                    },
                  }
                }
                tooltip=""
                type="packing_sheet"
                uploadFn={null}
              />
            </div>
          </div>
          <div
            className="flex-100 layout-row layout-wrap"
            name="commercial_invoice"
          >
            <div
              className="flex-100 layout-row margin_5"
            >
              <DocumentsMultiForm
                deleteFn={[Function]}
                dispatchFn={[Function]}
                documents={Array []}
                isRequired={true}
                t={[Function]}
                text="Commercial Invoice"
                theme={
                  Object {
                    "colors": Object {
                      "primary": "#333",
                      "secondary": "#fafafa",
                    },
                  }
                }
                tooltip=""
                type="commercial_invoice"
                uploadFn={null}
              />
            </div>
          </div>
          <div
            className="flex-100 layout-row layout-align-start-start layout-wrap"
          >
            <div
              className="flex-100 layout-row layout-align-start-start layout-wrap"
            >
              <div
                className="flex-100"
              >
                <div
                  className="flex-none f_header"
                >
                   
                  <TextHeading
                    color=""
                    size={3}
                    text="Notes (Optional)"
                    theme={
                      Object {
                        "colors": Object {
                          "primary": "#333",
                          "secondary": "#fafafa",
                        },
                      }
                    }
                  />
                </div>
              </div>
              <div
                className="flex-100 layout-row layout-align-start-start input_box_full"
              >
                <Formsy(FormsyTextarea)
                  className="flex-100 cargo_text_area "
                  errorMessageStyles={
                    Object {
                      "bottom": "-17px",
                      "fontSize": "13px",
                    }
                  }
                  innerRef={[Function]}
                  name="notes"
                  onBlur={[Function]}
                  required={false}
                  submitAttempted={false}
                  type="textarea"
                  validationError=""
                  validationErrors={Object {}}
                  validations={null}
                  value="NOTES"
                  wrapperClassName="flex-100 wrapper_cargo_input"
                />
              </div>
            </div>
            <div
              className="flex-gt-sm-100 layout-row layout-align-start-start layout-wrap"
            >
              <div
                className=" flex-100 layout-row layout-align-start-start-space-around layout-wrap"
              >
                <DocumentsMultiForm
                  deleteFn={[Function]}
                  dispatchFn={[Function]}
                  documents={Array []}
                  t={[Function]}
                  text="Miscellaneous"
                  theme={
                    Object {
                      "colors": Object {
                        "primary": "#333",
                        "secondary": "#fafafa",
                      },
                    }
                  }
                  tooltip=""
                  type="miscellaneous"
                  uploadFn={null}
                />
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <div
    className="insurance_customs_sec flex-100 layout-row layout-wrap layout-align-center"
  >
    <div
      className="flex-100 layout-row layout-align-center padd_top"
    >
      <div
        className="flex-none content_width layout-row layout-wrap section_padding"
      >
        <div
          className="flex-100 layout-row layout-align-space-between-start layout-wrap"
        >
          <div
            className="flex-none layout-row layout-align-space-around-center"
          >
            <TextHeading
              color=""
              size={2}
              text="Customs Handling"
              theme={
                Object {
                  "colors": Object {
                    "primary": "#333",
                    "secondary": "#fafafa",
                  },
                }
              }
            />
          </div>
          <div
            className="flex-33 layout-wrap layout-row layout-align-space-around-center"
          >
            <div
              className="flex-100 layout-row layout-align-end-center"
            >
              <div
                className="flex-90 layout-row layout-align-start-center"
              >
                <label
                  className="pointy"
                  htmlFor="yes_clearance"
                >
                  Yes, I want TENANT_NAME to handle my customs clearance
                </label>
              </div>
              <div
                className="flex-10 layout-row layout-align-end-center"
              >
                <Checkbox
                  checked={null}
                  className="ccb_yes_clearance"
                  disabled={false}
                  id="yes_clearance"
                  onChange={[Function]}
                  onClick={null}
                  size={null}
                  theme={
                    Object {
                      "colors": Object {
                        "primary": "#333",
                        "secondary": "#fafafa",
                      },
                    }
                  }
                />
              </div>
            </div>
            <div
              className="flex-100 layout-row layout-align-end-center"
            >
              <div
                className="flex-90 layout-row layout-align-start-center"
              >
                <label
                  className="pointy"
                  htmlFor="no_clearance"
                >
                  No, I do not want TENANT_NAME to handle my customs clearance
                </label>
              </div>
              <div
                className="flex-10 layout-row layout-align-end-center"
              >
                <Checkbox
                  checked={null}
                  className="ccb_no_clearance"
                  disabled={false}
                  id="no_clearance"
                  onChange={[Function]}
                  onClick={null}
                  size={null}
                  theme={
                    Object {
                      "colors": Object {
                        "primary": "#333",
                        "secondary": "#fafafa",
                      },
                    }
                  }
                />
              </div>
            </div>
          </div>
        </div>
        <div
          className="flex-100 layout-row layout-wrap customs_box  box_content hidden"
        >
          <div
            className="flex-60 layout-row layout-wrap"
          >
            <p
              className="flex-90 margin_5"
            >
              <strong>
                 
                When you ship goods from outside the European Union (EU), you may be charged customs duty and/or VAT. You can either handle the customs on your own, or have it handled for you.
              </strong>
            </p>
            <p
              className="flex-90 margin_5"
            >
              To cover our costs when we present your goods to the customs authorities – and pay any customs duty or VAT due on your behalf – we charge a clearance / handling fee. The fee depends on the value of the goods you are shipping, and can be found here to the right.
            </p>
            <div
              className="flex-100 layout-row layout-align-start-start layout-wrap"
            >
              <div
                className="flex-100 layout-row layout-align-start-center"
                style={
                  Object {
                    "height": "36px",
                  }
                }
              >
                <p
                  className="flex-none"
                >
                   
                  I would like TENANT_NAME to handle:
                </p>
              </div>
              <div
                className="flex-100 layout-row layout-align-start-center layout-wrap"
                style={
                  Object {
                    "height": "36px",
                  }
                }
              >
                <div
                  className="flex-45 layout-row layout-align-space-around-center"
                  data-for="preCarriageTooltip"
                  data-tip="Export Customs is not applicable for shipments without delivery to the port (pre-carriage)."
                >
                  <p
                    className="faded_text flex-none"
                  >
                     Export Customs: 
                  </p>
                  <Checkbox
                    checked={true}
                    className=""
                    disabled={true}
                    id={null}
                    onChange={[Function]}
                    onClick={null}
                    size={null}
                    theme={
                      Object {
                        "colors": Object {
                          "primary": "#333",
                          "secondary": "#fafafa",
                        },
                      }
                    }
                  />
                </div>
                <ReactTooltip
                  className="tooltip_box"
                  effect="solid"
                  id="preCarriageTooltip"
                  insecure={true}
                  resizeHide={true}
                  wrapper="div"
                />
                <div
                  className="flex-45 layout-row layout-align-space-around-center"
                  data-for="onCarriageTooltip"
                  data-tip="Import Customs is not applicable for shipments without delivery from the port (on-carriage)."
                >
                  <p
                    className="faded_text flex-none"
                  >
                     Import Customs
                  </p>
                  <Checkbox
                    checked={true}
                    className=""
                    disabled={true}
                    id={null}
                    onChange={[Function]}
                    onClick={null}
                    size={null}
                    theme={
                      Object {
                        "colors": Object {
                          "primary": "#333",
                          "secondary": "#fafafa",
                        },
                      }
                    }
                  />
                  <ReactTooltip
                    className="tooltip_box"
                    effect="solid"
                    id="onCarriageTooltip"
                    insecure={true}
                    resizeHide={true}
                    wrapper="div"
                  />
                </div>
              </div>
              <div
                className="flex-100 no_max layout-row layout-align-start-center"
              >
                <div
                  className="flex-33 layout-row layout-wrap"
                >
                  <div
                    className="flex-100"
                  >
                    <TextHeading
                      Comp={
                        <b
                          style={
                            Object {
                              "fontSize": ".83em",
                              "fontWeight": "normal",
                            }
                          }
                        >
                          (
                          if applicable
                          )
                        </b>
                      }
                      color=""
                      size={3}
                      text="EORI"
                      theme={
                        Object {
                          "colors": Object {
                            "primary": "#333",
                            "secondary": "#fafafa",
                          },
                        }
                      }
                    />
                  </div>
                  <div
                    className="flex-100 input_box"
                  >
                    <input
                      className="EORI_input"
                      name="eori"
                      onChange={[Function]}
                      placeholder="Type in EORI number"
                      type="text"
                      value="EORI"
                    />
                  </div>
                </div>
              </div>
            </div>
          </div>
          <div
            className=" prices flex-20 layout-row layout-wrap layout-align-start-start"
          >
            <div
              className="customs_prices flex-100 layout-row  layout-align-end-center"
            >
              <p
                className="flex-none"
              >
                Import
              </p>
              <h6
                className="flex-none center"
              >
                 
                Price subject to local regulations
              </h6>
            </div>
            <div
              className="customs_prices flex-100 layout-row  layout-align-end-center"
            >
              <p
                className="flex-none"
              >
                Export
              </p>
              <h6
                className="flex-none center"
              >
                 
                100.00 EUR
              </h6>
            </div>
            <div
              className="customs_total flex-100 layout-row  layout-align-end-center"
            >
              <p
                className="flex-none"
              >
                Total
              </p>
              <h6
                className="flex-none center"
              >
                 
                NaN EUR
              </h6>
            </div>
          </div>
        </div>
        <div
          className="flex-100 layout-row layout-align-start-center layout-wrap no_customs_box show"
        >
          <div
            className="flex-60 layout-row layout-align-start-center layout-wrap"
          >
            <p
              className="flex-100 margin_5"
            >
              <b>
                A customs declaration is mandatory to pass a national border when exporting or importing. If you choose to handle the customs clearance on your own, TENANT_NAME will need a copy of the customs declaration.
              </b>
            </p>
            <p
              className="flex-100 margin_5"
            >
              <b>
                When you ship goods from outside the European Union (EU), you may be charged customs duty and/or VAT according to local regulations.
              </b>
            </p>
          </div>
          <div
            className="flex-33 no_max layout-row layout-align-end-center"
          />
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`totalGoodsValue.value > 20000 1`] = `
<div
  className="flex-100 layout-row layout-wrap padd_top"
  name="cargoDetailsBox"
>
  <div
    className="flex-100 layout-row layout-align-center"
  >
    <div
      className="flex-none content_width layout-row layout-wrap"
    >
      <div
        className="flex-100 layout-row layout-sm-wrap"
      >
        <div
          className="flex-50"
        >
          <div
            className="flex-100"
          >
            <div
              className="flex-100 layout-align-start-center layout-row"
            >
              <div
                className="flex-none"
              >
                <TextHeading
                  color=""
                  size={2}
                  text="Cargo Details"
                  theme={
                    Object {
                      "colors": Object {
                        "primary": "#333",
                        "secondary": "#fafafa",
                      },
                    }
                  }
                />
              </div>
            </div>
             
            <div
              className="flex-none"
            >
              <TextHeading
                color=""
                size={3}
                text="Total value of goods"
                theme={
                  Object {
                    "colors": Object {
                      "primary": "#333",
                      "secondary": "#fafafa",
                    },
                  }
                }
              />
            </div>
          </div>
          <div
            className="flex-100 layout-row layout-wrap layout-align-start-start"
          >
            <div
              className="flex-100 layout-row layout-wrap"
            >
              <div
                className="flex-100 layout-row"
              >
                <div
                  className="flex-66 layout-row"
                >
                  <Formsy(FormsyInput)
                    className="flex-100 ccb_total_goods_value cargo_input "
                    errorMessageStyles={
                      Object {
                        "bottom": "-17px",
                        "fontSize": "13px",
                      }
                    }
                    innerRef={[Function]}
                    name="totalGoodsValue"
                    onBlur={[Function]}
                    required={3370}
                    submitAttempted={false}
                    type="number"
                    validationError=""
                    validationErrors={
                      Object {
                        "isDefaultRequiredValue": "Must be greater than 0",
                        "nonNegative": "Must be greater than 0",
                      }
                    }
                    validations={
                      Object {
                        "nonNegative": [Function],
                      }
                    }
                    value={20001}
                    wrapperClassName="flex-100 wrapper_cargo_input"
                  />
                </div>
                <div
                  className="flex-33 layout-row"
                >
                  <NamedSelect
                    className="flex-100 ccb_currency"
                    clearable={false}
                    onChange={[Function]}
                    options={
                      Array [
                        Object {
                          "label": "EUR",
                          "value": "EUR",
                        },
                        Object {
                          "label": "AUD",
                          "value": "AUD",
                        },
                        Object {
                          "label": "BGN",
                          "value": "BGN",
                        },
                        Object {
                          "label": "BRL",
                          "value": "BRL",
                        },
                        Object {
                          "label": "CAD",
                          "value": "CAD",
                        },
                        Object {
                          "label": "CHF",
                          "value": "CHF",
                        },
                        Object {
                          "label": "CNY",
                          "value": "CNY",
                        },
                        Object {
                          "label": "CZK",
                          "value": "CZK",
                        },
                        Object {
                          "label": "DKK",
                          "value": "DKK",
                        },
                        Object {
                          "label": "GBP",
                          "value": "GBP",
                        },
                        Object {
                          "label": "HKD",
                          "value": "HKD",
                        },
                        Object {
                          "label": "HRK",
                          "value": "HRK",
                        },
                        Object {
                          "label": "HUF",
                          "value": "HUF",
                        },
                        Object {
                          "label": "IDR",
                          "value": "IDR",
                        },
                        Object {
                          "label": "ILS",
                          "value": "ILS",
                        },
                        Object {
                          "label": "INR",
                          "value": "INR",
                        },
                        Object {
                          "label": "JPY",
                          "value": "JPY",
                        },
                        Object {
                          "label": "KRW",
                          "value": "KRW",
                        },
                        Object {
                          "label": "MXN",
                          "value": "MXN",
                        },
                        Object {
                          "label": "MYR",
                          "value": "MYR",
                        },
                        Object {
                          "label": "NOK",
                          "value": "NOK",
                        },
                        Object {
                          "label": "NZD",
                          "value": "NZD",
                        },
                        Object {
                          "label": "PHP",
                          "value": "PHP",
                        },
                        Object {
                          "label": "PLN",
                          "value": "PLN",
                        },
                        Object {
                          "label": "RON",
                          "value": "RON",
                        },
                        Object {
                          "label": "RUB",
                          "value": "RUB",
                        },
                        Object {
                          "label": "SEK",
                          "value": "SEK",
                        },
                        Object {
                          "label": "SGD",
                          "value": "SGD",
                        },
                        Object {
                          "label": "THB",
                          "value": "THB",
                        },
                        Object {
                          "label": "TRY",
                          "value": "TRY",
                        },
                        Object {
                          "label": "USD",
                          "value": "USD",
                        },
                        Object {
                          "label": "ZAR",
                          "value": "ZAR",
                        },
                      ]
                    }
                    value={
                      Object {
                        "label": "EUR",
                        "value": "EUR",
                      }
                    }
                  />
                </div>
              </div>
            </div>
            <div
              className="flex-100 layout-row layout-wrap"
              id="cargo_notes"
            >
              <div
                className="flex-100"
              >
                <div
                  className="flex-none f_header"
                >
                   
                  <TextHeading
                    color=""
                    size={3}
                    text="Description of Goods (HS Codes if available)"
                    theme={
                      Object {
                        "colors": Object {
                          "primary": "#333",
                          "secondary": "#fafafa",
                        },
                      }
                    }
                  />
                </div>
              </div>
              <div
                className="flex-100"
              >
                <Formsy(FormsyTextarea)
                  className="flex-100 ccb_description_goods cargo_text_area "
                  errorMessageStyles={
                    Object {
                      "bottom": "-17px",
                      "fontSize": "13px",
                    }
                  }
                  innerRef={[Function]}
                  name="cargoNotes"
                  onBlur={[Function]}
                  required="MANDATORY_FIELDS_DESCRIPTION"
                  submitAttempted={false}
                  type="textarea"
                  validationError=""
                  validationErrors={
                    Object {
                      "isDefaultRequiredValue": "Must not be empty",
                    }
                  }
                  validations={null}
                  value="CARGO_NOTES"
                  wrapperClassName="flex-100 wrapper_cargo_input"
                />
              </div>
            </div>
            <div
              className="flex-100 layout-row layout-align-start-start layout-wrap"
            >
              <div
                className="flex-100"
              >
                <div
                  className="flex-none f_header"
                >
                   
                  <h4
                    className="no_m flex-30"
                  >
                    Incoterms
                     
                    <span>
                      (Optional)
                    </span>
                  </h4>
                  <p
                    className="pointy flex-none incoterm_info"
                    onClick={[Function]}
                  >
                    More info
                  </p>
                </div>
              </div>
              <div
                className="flex-100 layout-row layout-align-start-start input_box_full"
              >
                <Formsy(FormsyTextarea)
                  className="flex-100 cargo_text_area "
                  errorMessageStyles={
                    Object {
                      "bottom": "-17px",
                      "fontSize": "13px",
                    }
                  }
                  innerRef={[Function]}
                  name="incotermText"
                  onBlur={[Function]}
                  required={false}
                  submitAttempted={false}
                  type="textarea"
                  validationError=""
                  validationErrors={Object {}}
                  validations={null}
                  value=""
                  wrapperClassName="flex-100 wrapper_cargo_input"
                />
              </div>
            </div>
          </div>
        </div>
        <div
          className="flex-50 padding_left offset-gt-sm-5 layout-row layout-wrap layout-align-start-start"
        >
          <div
            className="flex-100 layout-align-start-center layout-row"
          >
            <div
              className="flex-none"
            >
              <TextHeading
                color=""
                size={2}
                text="Shipment Documents "
                theme={
                  Object {
                    "colors": Object {
                      "primary": "#333",
                      "secondary": "#fafafa",
                    },
                  }
                }
              />
              <br />
              (
              if available
              )
            </div>
          </div>
          <div
            className="flex-100 layout-row layout-wrap"
            name="packing_sheet"
          >
            <div
              className="flex-100 layout-row margin_5"
            >
              <DocumentsMultiForm
                deleteFn={[Function]}
                dispatchFn={[Function]}
                documents={Array []}
                isRequired={true}
                t={[Function]}
                text="Packing List"
                theme={
                  Object {
                    "colors": Object {
                      "primary": "#333",
                      "secondary": "#fafafa",
                    },
                  }
                }
                tooltip=""
                type="packing_sheet"
                uploadFn={null}
              />
            </div>
          </div>
          <div
            className="flex-100 layout-row layout-wrap"
            name="commercial_invoice"
          >
            <div
              className="flex-100 layout-row margin_5"
            >
              <DocumentsMultiForm
                deleteFn={[Function]}
                dispatchFn={[Function]}
                documents={Array []}
                isRequired={true}
                t={[Function]}
                text="Commercial Invoice"
                theme={
                  Object {
                    "colors": Object {
                      "primary": "#333",
                      "secondary": "#fafafa",
                    },
                  }
                }
                tooltip=""
                type="commercial_invoice"
                uploadFn={null}
              />
            </div>
          </div>
          <div
            className="flex-100 layout-row layout-align-start-start layout-wrap"
          >
            <div
              className="flex-100 layout-row layout-align-start-start layout-wrap"
            >
              <div
                className="flex-100"
              >
                <div
                  className="flex-none f_header"
                >
                   
                  <TextHeading
                    color=""
                    size={3}
                    text="Notes (Optional)"
                    theme={
                      Object {
                        "colors": Object {
                          "primary": "#333",
                          "secondary": "#fafafa",
                        },
                      }
                    }
                  />
                </div>
              </div>
              <div
                className="flex-100 layout-row layout-align-start-start input_box_full"
              >
                <Formsy(FormsyTextarea)
                  className="flex-100 cargo_text_area "
                  errorMessageStyles={
                    Object {
                      "bottom": "-17px",
                      "fontSize": "13px",
                    }
                  }
                  innerRef={[Function]}
                  name="notes"
                  onBlur={[Function]}
                  required={false}
                  submitAttempted={false}
                  type="textarea"
                  validationError=""
                  validationErrors={Object {}}
                  validations={null}
                  value="NOTES"
                  wrapperClassName="flex-100 wrapper_cargo_input"
                />
              </div>
            </div>
            <div
              className="flex-gt-sm-100 layout-row layout-align-start-start layout-wrap"
            >
              <div
                className=" flex-100 layout-row layout-align-start-start-space-around layout-wrap"
              >
                <DocumentsMultiForm
                  deleteFn={[Function]}
                  dispatchFn={[Function]}
                  documents={Array []}
                  t={[Function]}
                  text="Miscellaneous"
                  theme={
                    Object {
                      "colors": Object {
                        "primary": "#333",
                        "secondary": "#fafafa",
                      },
                    }
                  }
                  tooltip=""
                  type="miscellaneous"
                  uploadFn={null}
                />
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <div
    className="insurance_customs_sec flex-100 layout-row layout-wrap layout-align-center"
  >
    <div
      className="flex-100 layout-row layout-align-center padd_top"
    >
      <div
        className="flex-none content_width layout-row layout-wrap section_padding"
      >
        <div
          className="flex-100 layout-row layout-align-space-between-start"
        >
          <div
            className="flex-none layout-row layout-align-space-around-center"
          >
            <TextHeading
              color=""
              size={2}
              text="Insurance"
              theme={
                Object {
                  "colors": Object {
                    "primary": "#333",
                    "secondary": "#fafafa",
                  },
                }
              }
            />
          </div>
          <div
            className="flex-33 layout-row layout-align-space-around-center layout-wrap"
          >
            <div
              className="flex-100 layout-row layout-wrap layout-align-end-center"
            >
              <div
                className="flex-90 layout-row layout-align-start-center"
              >
                <label
                  className="pointy"
                  htmlFor="yes_insurance"
                >
                  Yes, I want TENANT_NAME to quote insurance for my cargo
                </label>
              </div>
              <div
                className="flex-10 layout-row layout-align-end-center"
              >
                <Checkbox
                  checked={true}
                  className="ccb_yes_insurance"
                  disabled={false}
                  id="yes_insurance"
                  onChange={[Function]}
                  onClick={null}
                  size={null}
                  theme={
                    Object {
                      "colors": Object {
                        "primary": "#333",
                        "secondary": "#fafafa",
                      },
                    }
                  }
                />
              </div>
            </div>
            <div
              className="flex-100 layout-row layout-align-end-center"
            >
              <div
                className="flex-90 layout-row layout-align-start-center"
              >
                <label
                  className="pointy"
                  htmlFor="no_insurance"
                >
                  No, I do not want TENANT_NAME to quote insurance for my cargo
                </label>
              </div>
              <div
                className="flex-10 layout-row layout-align-end-center"
              >
                <Checkbox
                  checked={false}
                  className="ccb_no_insurance"
                  disabled={false}
                  id="no_insurance"
                  onChange={[Function]}
                  onClick={null}
                  size={null}
                  theme={
                    Object {
                      "colors": Object {
                        "primary": "#333",
                        "secondary": "#fafafa",
                      },
                    }
                  }
                />
              </div>
            </div>
          </div>
        </div>
        <div
          className="flex-100 layout-row layout-align-start-center"
        >
          <p
            className="flex-60 margin_5"
          >
            <b>
              Cargo Insurance provides cover on all risk terms for physical loss or damage to cargo during transport by land, sea or air.
            </b>
          </p>
        </div>
        <div
          className="flex-100 layout-row layout-align-start-center"
        >
          <p
            className="flex-60 margin_5"
          >
            <b>
              Insurance is a cost effective and simple way to cover for physical loss or damage to goods in transit.
            </b>
          </p>
        </div>
        <div
          className="flex-100 layout-row  box_content show"
        >
          <div
            className="flex-80 layout-row layout-wrap"
          >
            <p
              className="flex-90"
            >
              <strong>
                 
                A cost effective and simple way to cover for physical loss or damage to goods in transit.
              </strong>
            </p>
            <p
              className="flex-90"
            >
              Please contact your local {{tenantName}} office for more info.
            </p>
          </div>
        </div>
        <div
          className="flex-100 layout-row layout-align-start-center"
        >
          <div
            className="flex-none layout-row layout-align-center-center"
            onClick={[Function]}
          >
            <p
              className="flex-none pointy"
            >
              Read more...
            </p>
            <i
              className="flex-none offset-5 fa fa-external-link"
            />
          </div>
        </div>
      </div>
    </div>
    <div
      className="flex-100 layout-row layout-align-center padd_top"
    >
      <div
        className="flex-none content_width layout-row layout-wrap section_padding"
      >
        <div
          className="flex-100 layout-row layout-align-space-between-start layout-wrap"
        >
          <div
            className="flex-none layout-row layout-align-space-around-center"
          >
            <TextHeading
              color=""
              size={2}
              text="Customs Handling"
              theme={
                Object {
                  "colors": Object {
                    "primary": "#333",
                    "secondary": "#fafafa",
                  },
                }
              }
            />
          </div>
          <div
            className="flex-33 layout-wrap layout-row layout-align-space-around-center"
          >
            <div
              className="flex-100 layout-row layout-align-end-center"
            >
              <div
                className="flex-90 layout-row layout-align-start-center"
              >
                <label
                  className="pointy"
                  htmlFor="yes_clearance"
                >
                  Yes, I want TENANT_NAME to handle my customs clearance
                </label>
              </div>
              <div
                className="flex-10 layout-row layout-align-end-center"
              >
                <Checkbox
                  checked={null}
                  className="ccb_yes_clearance"
                  disabled={false}
                  id="yes_clearance"
                  onChange={[Function]}
                  onClick={null}
                  size={null}
                  theme={
                    Object {
                      "colors": Object {
                        "primary": "#333",
                        "secondary": "#fafafa",
                      },
                    }
                  }
                />
              </div>
            </div>
            <div
              className="flex-100 layout-row layout-align-end-center"
            >
              <div
                className="flex-90 layout-row layout-align-start-center"
              >
                <label
                  className="pointy"
                  htmlFor="no_clearance"
                >
                  No, I do not want TENANT_NAME to handle my customs clearance
                </label>
              </div>
              <div
                className="flex-10 layout-row layout-align-end-center"
              >
                <Checkbox
                  checked={null}
                  className="ccb_no_clearance"
                  disabled={false}
                  id="no_clearance"
                  onChange={[Function]}
                  onClick={null}
                  size={null}
                  theme={
                    Object {
                      "colors": Object {
                        "primary": "#333",
                        "secondary": "#fafafa",
                      },
                    }
                  }
                />
              </div>
            </div>
          </div>
        </div>
        <div
          className="flex-100 layout-row layout-wrap customs_box  box_content hidden"
        >
          <div
            className="flex-60 layout-row layout-wrap"
          >
            <p
              className="flex-90 margin_5"
            >
              <strong>
                 
                When you ship goods from outside the European Union (EU), you may be charged customs duty and/or VAT. You can either handle the customs on your own, or have it handled for you.
              </strong>
            </p>
            <p
              className="flex-90 margin_5"
            >
              To cover our costs when we present your goods to the customs authorities – and pay any customs duty or VAT due on your behalf – we charge a clearance / handling fee. The fee depends on the value of the goods you are shipping, and can be found here to the right.
            </p>
            <div
              className="flex-100 layout-row layout-align-start-start layout-wrap"
            >
              <div
                className="flex-100 layout-row layout-align-start-center"
                style={
                  Object {
                    "height": "36px",
                  }
                }
              >
                <p
                  className="flex-none"
                >
                   
                  I would like TENANT_NAME to handle:
                </p>
              </div>
              <div
                className="flex-100 layout-row layout-align-start-center layout-wrap"
                style={
                  Object {
                    "height": "36px",
                  }
                }
              >
                <div
                  className="flex-45 layout-row layout-align-space-around-center"
                  data-for="preCarriageTooltip"
                  data-tip="Export Customs is not applicable for shipments without delivery to the port (pre-carriage)."
                >
                  <p
                    className="faded_text flex-none"
                  >
                     Export Customs: 
                  </p>
                  <Checkbox
                    checked={true}
                    className=""
                    disabled={true}
                    id={null}
                    onChange={[Function]}
                    onClick={null}
                    size={null}
                    theme={
                      Object {
                        "colors": Object {
                          "primary": "#333",
                          "secondary": "#fafafa",
                        },
                      }
                    }
                  />
                </div>
                <ReactTooltip
                  className="tooltip_box"
                  effect="solid"
                  id="preCarriageTooltip"
                  insecure={true}
                  resizeHide={true}
                  wrapper="div"
                />
                <div
                  className="flex-45 layout-row layout-align-space-around-center"
                  data-for="onCarriageTooltip"
                  data-tip="Import Customs is not applicable for shipments without delivery from the port (on-carriage)."
                >
                  <p
                    className="faded_text flex-none"
                  >
                     Import Customs
                  </p>
                  <Checkbox
                    checked={true}
                    className=""
                    disabled={true}
                    id={null}
                    onChange={[Function]}
                    onClick={null}
                    size={null}
                    theme={
                      Object {
                        "colors": Object {
                          "primary": "#333",
                          "secondary": "#fafafa",
                        },
                      }
                    }
                  />
                  <ReactTooltip
                    className="tooltip_box"
                    effect="solid"
                    id="onCarriageTooltip"
                    insecure={true}
                    resizeHide={true}
                    wrapper="div"
                  />
                </div>
              </div>
              <div
                className="flex-100 no_max layout-row layout-align-start-center"
              >
                <div
                  className="flex-33 layout-row layout-wrap"
                >
                  <div
                    className="flex-100"
                  >
                    <TextHeading
                      Comp={
                        <b
                          style={
                            Object {
                              "fontSize": ".83em",
                              "fontWeight": "normal",
                            }
                          }
                        >
                          (
                          if applicable
                          )
                        </b>
                      }
                      color=""
                      size={3}
                      text="EORI"
                      theme={
                        Object {
                          "colors": Object {
                            "primary": "#333",
                            "secondary": "#fafafa",
                          },
                        }
                      }
                    />
                  </div>
                  <div
                    className="flex-100 input_box"
                  >
                    <input
                      className="EORI_input"
                      name="eori"
                      onChange={[Function]}
                      placeholder="Type in EORI number"
                      type="text"
                      value="EORI"
                    />
                  </div>
                </div>
              </div>
            </div>
          </div>
          <div
            className=" prices flex-20 layout-row layout-wrap layout-align-start-start"
          >
            <div
              className="customs_prices flex-100 layout-row  layout-align-end-center"
            >
              <p
                className="flex-none"
              >
                Import
              </p>
              <h6
                className="flex-none center"
              >
                 
                Price subject to local regulations
              </h6>
            </div>
            <div
              className="customs_prices flex-100 layout-row  layout-align-end-center"
            >
              <p
                className="flex-none"
              >
                Export
              </p>
              <h6
                className="flex-none center"
              >
                 
                100.00 EUR
              </h6>
            </div>
            <div
              className="customs_total flex-100 layout-row  layout-align-end-center"
            >
              <p
                className="flex-none"
              >
                Total
              </p>
              <h6
                className="flex-none center"
              >
                 
                NaN EUR
              </h6>
            </div>
          </div>
        </div>
        <div
          className="flex-100 layout-row layout-align-start-center layout-wrap no_customs_box show"
        >
          <div
            className="flex-60 layout-row layout-align-start-center layout-wrap"
          >
            <p
              className="flex-100 margin_5"
            >
              <b>
                A customs declaration is mandatory to pass a national border when exporting or importing. If you choose to handle the customs clearance on your own, TENANT_NAME will need a copy of the customs declaration.
              </b>
            </p>
            <p
              className="flex-100 margin_5"
            >
              <b>
                When you ship goods from outside the European Union (EU), you may be charged customs duty and/or VAT according to local regulations.
              </b>
            </p>
          </div>
          <div
            className="flex-33 no_max layout-row layout-align-end-center"
          >
            <div
              className="flex-90 layout-row layout-wrap"
            >
              <div
                className="flex-100"
              >
                <TextHeading
                  color=""
                  size={3}
                  text="Customs Value Declaration"
                  theme={
                    Object {
                      "colors": Object {
                        "primary": "#333",
                        "secondary": "#fafafa",
                      },
                    }
                  }
                />
              </div>
              <div
                className="flex-100 layout-row layout-wrap"
                name="customs_value_declaration"
              >
                <div
                  className="flex-100 layout-row"
                >
                  <DocumentsForm
                    deleteFn={[Function]}
                    dispatchFn={[Function]}
                    displayOnly={false}
                    doc={Object {}}
                    isRequired={true}
                    multiple={false}
                    t={[Function]}
                    text="Customs Val. Decl."
                    theme={
                      Object {
                        "colors": Object {
                          "primary": "#333",
                          "secondary": "#fafafa",
                        },
                      }
                    }
                    tooltip=""
                    type="customs_value_declaration"
                    uploadFn={null}
                    viewer={false}
                  />
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;
