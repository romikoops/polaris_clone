variables:
  BUNDLE_GITLAB__COM: "gitlab-ci-token:${CI_JOB_TOKEN}"

stages:
  - test

code_quality:
  stage: test
  image: eu.gcr.io/itsmycargo-main/pronto:stable
  tags:
    - itsmycargo
  except:
    refs:
      - master
      - dev
  script:
    - scripts/pronto

danger-review:
  stage: test
  image: eu.gcr.io/itsmycargo-main/danger:latest
  tags:
    - itsmycargo
  allow_failure: true
  cache: {}
  dependencies: []
  before_script: []
  only:
    variables:
      - $DANGER_GITLAB_API_TOKEN
  except:
    refs:
      - master
      - dev
  script:
    - danger --fail-on-errors=true

api:
  stage: test
  image: eu.gcr.io/itsmycargo-main/base:stable
  tags:
    - itsmycargo
  services:
    - mdillon/postgis
  variables:
    POSTGRES_DB: imcr_test
    DATABASE_URL: postgis://postgres:@localhost/imcr_test
  script:
    - scripts/test

  coverage: '/\(\d+.\d+\%\) covered/'
  artifacts:
    paths:
      - coverage/
    expire_in: 1 week
    reports:
      junit:
        - engines/*/rspec.xml
        - lib/*/rspec.xml
        - rspec.xml

client:
  stage: test
  image: node:10-alpine
  tags:
    - itsmycargo

  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
    - client/node_modules/

  before_script:
    - apk add --no-cache --update autoconf automake bash build-base lcms2-dev libjpeg-turbo-utils libpng-dev

  script:
    - cd client
    - npm install
    - npm run test:ci

  coverage: '/^Statements\s*:\s*([^%]+)/'
  artifacts:
    paths:
      - client/coverage/lcov-report
    expire_in: 1 week
    reports:
      junit:
        - client/junit.xml
