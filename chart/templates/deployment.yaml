{{- $serviceHost := printf "%s.%s" .Release.Name .Values.ingress.domain -}}
{{- $databaseUrl := printf "postgis://%s:%s@%s/%s" .Values.postgres.user .Values.postgres.password .Values.postgres.host .Values.postgres.database -}}
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ include "app.fullname" . }}
  labels:
    app: {{ include "app.name" . }}
    chart: {{ include "app.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    changeId: {{ .Values.meta.changeId | quote }}
    changeRepo: {{ .Values.meta.changeRepo | quote }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "app.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ include "app.name" . }}
        release: {{ .Release.Name }}
    spec:
      {{- if .Values.affinity }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
      {{- end }}
      {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
      {{- end }}
      initContainers:
      - name: migrate
        image: "{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag }}"
        imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
        args:
        - bin/rails
        - db:migrate
        env:
        - name: RAILS_ENV
          value: review
        - name: DATABASE_URL
          value: {{ $databaseUrl | quote }}
        - name: K8S_NAMESPACE
          value: {{ .Release.Namespace | quote }}
        - name: REVIEW_NAME
          value: {{ .Release.Name | quote }}
        - name: RAILS_MASTER_KEY
          valueFrom:
            secretKeyRef:
              name: {{ template "app.fullname" . }}
              key: master_key
      containers:
      - name: backend
        image: "{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag }}"
        imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
        args:
        - bin/puma
        - -C
        - config/puma.rb
        env:
        - name: RAILS_ENV
          value: review
        - name: RAILS_MAX_THREADS
          value: "32"
        - name: DATABASE_URL
          value: {{ $databaseUrl | quote }}
        - name: K8S_NAMESPACE
          value: {{ .Release.Namespace | quote }}
        - name: REVIEW_NAME
          value: {{ .Release.Name }}
        - name: DEFAULT_TENANT
          value: demo
        - name: API_HOST
          value: "api-{{ $serviceHost }}"
        - name: REVIEW_URL
          value: "https://{{ $serviceHost }}"
        - name: CORS_ORIGINS
          value: "https:\\/\\/{{ $serviceHost | replace "." "\\\\." }}"
        - name: RAILS_MASTER_KEY
          valueFrom:
            secretKeyRef:
              name: {{ template "app.fullname" . }}
              key: master_key
        ports:
        - name: http-backend
          containerPort: 3000
        livenessProbe:
          httpGet:
            path: /up
            port: http-backend
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /up
            port: http-backend
          initialDelaySeconds: 30
          periodSeconds: 10
        resources:
{{ toYaml .Values.backend.resources | indent 10 }}
      - name: frontend
        image: "{{ .Values.frontend.image.repository }}:{{ .Values.frontend.image.tag }}"
        imagePullPolicy: {{ .Values.frontend.image.pullPolicy }}
        env:
        - name: API_URL
          value: "https://api-{{ $serviceHost }}"
        - name: K8S_NAMESPACE
          value: {{ .Release.Namespace | quote }}
        - name: REVIEW_NAME
          value: {{ .Release.Name }}
        - name: REVIEW_URL
          value: "https://{{ .Release.Name }}.{{ .Values.ingress.domain }}"
        - name: GTM_ID
          value: GTM-P29HCHV
        ports:
        - name: http-frontend
          containerPort: 80
        livenessProbe:
          httpGet:
            path: /
            port: http-frontend
          initialDelaySeconds: 5
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: http-frontend
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
{{ toYaml .Values.frontend.resources | indent 10 }}
