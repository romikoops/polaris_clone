{{- if .Values.backend.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "app.fullname" . }}-backend
  labels:
    app.kubernetes.io/component: backend
{{ include "app.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.backend.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "app.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: backend
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "app.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: backend
    spec:
      serviceAccountName: {{ .Values.vault.roleName }}
      automountServiceAccountToken: true
{{- if .Values.backend.usePodSecurityContext }}
      securityContext:
        runAsUser: {{ default 0 .Values.backend.runAsUser }}
{{- if and (.Values.backend.runAsUser) (.Values.backend.fsGroup) }}
{{- if not (eq .Values.backend.runAsUser 0.0) }}
        fsGroup: {{ .Values.backend.fsGroup }}
{{- end }}
{{- end }}
{{- end }}
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      initContainers:
        - name: vault
          image: vault
          imagePullPolicy: Always
          args:
            - agent
            - -config=/etc/vault/vault-agent-config.hcl
          env:
            - name: VAULT_ADDR
              value: {{ .Values.vault.endpoint }}
          volumeMounts:
            - name: vault-config
              mountPath: /etc/vault
            - name: vault-token
              mountPath: /var/run/secrets/vault
      containers:
        - name: backend
          image: "{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag }}"
          imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
          env:
            - name: CONSUL_HTTP_ADDR
              value: http://consul.consul-system:8500
            - name: VAULT_ADDR
              value: {{ .Values.vault.endpoint }}
            - name: DATABASE_NAME
              value: {{ .Values.postgres.database }}
            - name: REVIEW_URL
              value: {{ include "app.app_url" . | quote }}
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /up
              port: http
          readinessProbe:
            httpGet:
              path: /up
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: vault-config
              mountPath: /etc/vault
            - name: vault-token
              mountPath: /var/run/secrets/vault
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
        - name: vault-token
          emptyDir: {}
        - name: vault-config
          configMap:
            name: {{ include "app.fullname" . }}
            items:
              - key: vault-agent-config.hcl
                path: vault-agent-config.hcl
              - key: consul-template-config.hcl
                path: consul-template-config.hcl
{{- end }}
