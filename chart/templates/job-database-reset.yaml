{{- if .Values.backend.enabled -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "app.fullname" . }}-database-reset-{{ .Release.Revision }}
  labels:
    app.kubernetes.io/component: migrate
{{ include "app.labels" . | indent 4 }}
  annotations:
    "helm.sh/hook": "post-install,post-upgrade"
    "helm.sh/hook-weight": "-1"
    "helm.sh/hook-delete-policy": "before-hook-creation"
spec:
  backoffLimit: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "app.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: database-reset
      annotations:
        vault.security.banzaicloud.io/vault-role: review-{{ .Chart.Name }}
    spec:
      restartPolicy: OnFailure
      {{- if .Values.serviceAccount.enabled }}
      serviceAccountName: {{ .Chart.Name }}
      {{- end }}
      automountServiceAccountToken: true
{{- if .Values.backend.usePodSecurityContext }}
      securityContext:
        runAsUser: {{ default 0 .Values.backend.runAsUser }}
{{- if and (.Values.backend.runAsUser) (.Values.backend.fsGroup) }}
{{- if not (eq .Values.backend.runAsUser 0.0) }}
        fsGroup: {{ .Values.backend.fsGroup }}
{{- end }}
{{- end }}
{{- end }}
      {{- include "app.imagePullSecrets" . | nindent 6 }}
      initContainers:
        - name: deps
          image: jwilder/dockerize
          args:
            - dockerize
            - -wait
            - tcp://{{ template "app.fullname" . }}-postgresql:5432
            - -timeout
            - '300s'
      containers:
        - name: database-reset
          image: {{ .Values.postgresql.image.registry }}/{{ .Values.postgresql.image.repository }}:{{ .Values.postgresql.image.tag }}
          imagePullPolicy: {{ .Values.postgresql.image.pullPolicy }}
          args:
            - /usr/local/bin/reset.sh
          env:
            - name: PGUSER
              value: {{ template "postgresql.username" . }}
            - name: PGPASSWORD
              value: {{ template "postgresql.password" . }}
            - name: PGHOST
              value: {{ template "app.fullname" . }}-postgresql
            - name: PGPORT
              value: "5432"
            - name: PGDATABASE
              value: app
            - name: GOOGLE_CREDENTIALS
              value: "vault:secret/data/review/{{ .Chart.Name }}#google-service-account.json"
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
{{- end }}
